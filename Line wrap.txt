Line wrap
 1 var t=t=>{var e;const{activeElement:i}=document;i&&t.contains(i)&&(null==(e=document.activeElement)||e.blur())};
 2 /**
 3 * @license
 4 * Copyright 2019 Google LLC
 5 * SPDX-License-Identifier: BSD-3-Clause
 6 */const e=globalThis,i=e.ShadowRoot&&(void 0===e.ShadyCSS||e.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,r=Symbol(),s=new WeakMap;let o=cl
 7 /**
 8 * @license
 9 * Copyright 2017 Google LLC
 10 * SPDX-License-Identifier: BSD-3-Clause
 11 */,{is:l,defineProperty:c,getOwnPropertyDescriptor:d,getOwnPropertyNames:h,getOwnPropertySymbols:u,getPrototypeOf:p}=Object,f=globalThis,m=f.trustedTypes,g=m?m.emptyScript:"",b=f.reactiveElementPol
 12 /**
 13 * @license
 14 * Copyright 2017 Google LLC
 15 * SPDX-License-Identifier: BSD-3-Clause
 16 */
 17 const k=globalThis,C=k.trustedTypes,S=C?C.createPolicy("lit-html",{createHTML:t=>t}):void 0,$="$lit$",E=`lit$${Math.random().toFixed(9).slice(2)}$`,I="?"+E,T=`<${I}>`,A=document,D=()=>A.createCommen
 18 /**
 19 * @license
 20 * Copyright 2017 Google LLC
 21 * SPDX-License-Identifier: BSD-3-Clause
 22 */
 23 let ot=class extends x{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=
 24  :host {
 25    display: inline-block;
 26    color: var(--sl-color-neutral-600);
 27  }
 28
 29  .icon-button {
 30    flex: 0 0 auto;
 31    display: flex;
 32    align-items: center;
 33    background: none;
 34    border: none;
 35    border-radius: var(--sl-border-radius-medium);
 36    font-size: inherit;
 37    color: inherit;
 38    padding: var(--sl-spacing-x-small);
 39    cursor: pointer;
 40    transition: var(--sl-transition-x-fast) color;
 41    -webkit-appearance: none;
 42  }
 43
 44  .icon-button:hover:not(.icon-button--disabled),
 45  .icon-button:focus-visible:not(.icon-button--disabled) {
 46    color: var(--sl-color-primary-600);
 47  }
 48
 49  .icon-button:active:not(.icon-button--disabled) {
 50    color: var(--sl-color-primary-700);
 51  }
 52
 53  .icon-button:focus {
 54    outline: none;
 55  }
 56
 57  .icon-button--disabled {
 58    opacity: 0.5;
 59    cursor: not-allowed;
 60  }
 61
 62  .icon-button:focus-visible {
 63    outline: var(--sl-focus-ring);
 64    outline-offset: var(--sl-focus-ring-offset);
 65  }
 66
 67  .icon-button__icon {
 68    pointer-events: none;
 69  }
 70 `,lt="";function ct(t){lt=t}var dt={name:"default",resolver:t=>function(t=""){if(!lt){const t=[...document.getElementsByTagName("script")],e=t.find((t=>t.hasAttribute("data-shoelace")));if(e)ct(e.ge
 71  :host {
 72    display: inline-block;
 73    width: 1em;
 74    height: 1em;
 75    box-sizing: content-box !important;
 76  }
 77
 78  svg {
 79    display: block;
 80    height: 100%;
 81    width: 100%;
 82  }
 83 `,vt=Object.defineProperty,yt=Object.defineProperties,wt=Object.getOwnPropertyDescriptor,_t=Object.getOwnPropertyDescriptors,xt=Object.getOwnPropertySymbols,kt=Object.prototype.hasOwnProperty,Ct=Obj
 84  :host {
 85    box-sizing: border-box;
 86  }
 87
 88  :host *,
 89  :host *::before,
 90  :host *::after {
 91    box-sizing: inherit;
 92  }
 93
 94  [hidden] {
 95    display: none !important;
 96  }
 97 `
 98 /**
 99 * @license
 100 * Copyright 2017 Google LLC
 101 * SPDX-License-Identifier: BSD-3-Clause
 102 */;const Rt=t=>(e,i)=>{void 0!==i?i.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)}
 103 /**
 104 * @license
 105 * Copyright 2017 Google LLC
 106 * SPDX-License-Identifier: BSD-3-Clause
 107 */,Lt={attribute:!0,type:String,converter:y,reflect:!1,hasChanged:w},Ft=(t=Lt,e,i)=>{const{kind:r,metadata:s}=i;let o=globalThis.litPropertyMetadata.get(s);if(void 0===o&&globalThis.litPropertyMeta
 108 /**
 109 * @license
 110 * Copyright 2017 Google LLC
 111 * SPDX-License-Identifier: BSD-3-Clause
 112 */}function Nt(t){return Mt({...t,state:!0,attribute:!1})}
 113 /**
 114 * @license
 115 * Copyright 2017 Google LLC
 116 * SPDX-License-Identifier: BSD-3-Clause
 117 */function Bt(t){return(e,i)=>{const r="function"==typeof e?e:e[i];Object.assign(r,t)}}
 118 /**
 119 * @license
 120 * Copyright 2017 Google LLC
 121 * SPDX-License-Identifier: BSD-3-Clause
 122 */const Ut=(t,e,i)=>(i.configurable=!0,i.enumerable=!0,Reflect.decorate&&"object"!=typeof e&&Object.defineProperty(t,e,i),i)
 123 /**
 124 * @license
 125 * Copyright 2017 Google LLC
 126 * SPDX-License-Identifier: BSD-3-Clause
 127 */;function Vt(t,e){return(e,i,r)=>Ut(e,i,{get(){return(e=>e.renderRoot?.querySelector(t)??null)(this)}})}
 128 /**
 129 * @license
 130 * Copyright 2017 Google LLC
 131 * SPDX-License-Identifier: BSD-3-Clause
 132 */var jt,Ht=class extends ot{constructor(){var t,e,i;super(),t=this,i=!1,(e=jt).has(t)?$t("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,i),this.initialR
 133 /**
 134 * @license
 135 * Copyright 2020 Google LLC
 136 * SPDX-License-Identifier: BSD-3-Clause
 137 */
 138 const Wt=t=>void 0===t.strings,qt={};var Kt,Gt=Symbol(),Yt=Symbol(),Xt=new Map,Jt=class extends Ht{constructor(){super(...arguments),this.initialRender=!1,this.svg=null,this.label="",this.library="d
 139        <use part="use" href="${t}"></use>
 140      </svg>`,this.svg;try{if(r=await fetch(t,{mode:"cors"}),!r.ok)return 410===r.status?Gt:Yt}catch(t){return Yt}try{const t=document.createElement("div");t.innerHTML=await r.text();const e=t.first
 141 /**
 142 * @license
 143 * Copyright 2017 Google LLC
 144 * SPDX-License-Identifier: BSD-3-Clause
 145 */
146 const Qt=1,Zt=2,te=3,ee=4,ie=t=>(...e)=>({_$litDirective$:t,values:e});let re=class{constructor(t){}get _$AU(){return this._$AM._$AU}_$AT(t,e,i){this._$Ct=t,this._$AM=e,this._$Ci=i}_$AS(t,e){return 
147 /**
 148 * @license
 149 * Copyright 2018 Google LLC
 150 * SPDX-License-Identifier: BSD-3-Clause
 151 */const se=ie(class extends re{constructor(t){if(super(t),t.type!==Qt||"class"!==t.name||t.strings?.length>2)throw Error("`classMap()` can only be used in the `class` attribute and must be the only
 152 /**
 153 * @license
 154 * Copyright 2020 Google LLC
 155 * SPDX-License-Identifier: BSD-3-Clause
 156 */var he=class extends Ht{constructor(){super(...arguments),this.hasFocus=!1,this.label="",this.disabled=!1}handleBlur(){this.hasFocus=!1,this.emit("sl-blur")}handleFocus(){this.hasFocus=!0,this.em
 157      <${e}
 158        part="base"
 159        class=${se({"icon-button":!0,"icon-button--disabled":!t&&this.disabled,"icon-button--focused":this.hasFocus})}
 160        ?disabled=${de(t?void 0:this.disabled)}
 161        type=${de(t?void 0:"button")}
 162        href=${de(t?this.href:void 0)}
 163        target=${de(t?this.target:void 0)}
 164        download=${de(t?this.download:void 0)}
 165        rel=${de(t&&this.target?"noreferrer noopener":void 0)}
 166        role=${de(t?void 0:"button")}
 167        aria-disabled=${this.disabled?"true":"false"}
 168        aria-label="${this.label}"
 169        tabindex=${this.disabled?"-1":"0"}
 170        @blur=${this.handleBlur}
 171        @focus=${this.handleFocus}
 172        @click=${this.handleClick}
 173      >
 174        <sl-icon
 175          class="icon-button__icon"
 176          name=${de(this.name)}
 177          library=${de(this.library)}
 178          src=${de(this.src)}
 179          aria-hidden="true"
 180        ></sl-icon>
 181      </${e}>
 182    `}};he.styles=[Pt,nt],he.dependencies={"sl-icon":Jt},At([Vt(".icon-button")],he.prototype,"button",2),At([Nt()],he.prototype,"hasFocus",2),At([Mt()],he.prototype,"name",2),At([Mt()],he.prototype
 183  :host {
 184    display: contents;
 185
 186    /* For better DX, we'll reset the margin here so the base part can inherit it */
 187    margin: 0;
 188  }
 189
 190  .alert {
 191    position: relative;
 192    display: flex;
 193    align-items: stretch;
 194    background-color: var(--sl-panel-background-color);
 195    border: solid var(--sl-panel-border-width) var(--sl-panel-border-color);
 196    border-top-width: calc(var(--sl-panel-border-width) * 3);
 197    border-radius: var(--sl-border-radius-medium);
 198    font-family: var(--sl-font-sans);
 199    font-size: var(--sl-font-size-small);
 200    font-weight: var(--sl-font-weight-normal);
 201    line-height: 1.6;
 202    color: var(--sl-color-neutral-700);
 203    margin: inherit;
 204    overflow: hidden;
 205  }
 206
 207  .alert:not(.alert--has-icon) .alert__icon,
 208  .alert:not(.alert--closable) .alert__close-button {
 209    display: none;
 210  }
 211
 212  .alert__icon {
 213    flex: 0 0 auto;
 214    display: flex;
 215    align-items: center;
 216    font-size: var(--sl-font-size-large);
 217    padding-inline-start: var(--sl-spacing-large);
 218  }
 219
 220  .alert--has-countdown {
 221    border-bottom: none;
 222  }
 223
 224  .alert--primary {
 225    border-top-color: var(--sl-color-primary-600);
 226  }
 227
 228  .alert--primary .alert__icon {
 229    color: var(--sl-color-primary-600);
 230  }
 231
 232  .alert--success {
 233    border-top-color: var(--sl-color-success-600);
 234  }
 235
 236  .alert--success .alert__icon {
 237    color: var(--sl-color-success-600);
 238  }
 239
 240  .alert--neutral {
 241    border-top-color: var(--sl-color-neutral-600);
 242  }
 243
 244  .alert--neutral .alert__icon {
 245    color: var(--sl-color-neutral-600);
 246  }
 247
 248  .alert--warning {
 249    border-top-color: var(--sl-color-warning-600);
 250  }
 251
 252  .alert--warning .alert__icon {
 253    color: var(--sl-color-warning-600);
 254  }
 255
 256  .alert--danger {
 257    border-top-color: var(--sl-color-danger-600);
 258  }
 259
 260  .alert--danger .alert__icon {
 261    color: var(--sl-color-danger-600);
 262  }
 263
 264  .alert__message {
 265    flex: 1 1 auto;
 266    display: block;
 267    padding: var(--sl-spacing-large);
 268    overflow: hidden;
 269  }
 270
 271  .alert__close-button {
 272    flex: 0 0 auto;
 273    display: flex;
 274    align-items: center;
 275    font-size: var(--sl-font-size-medium);
 276    margin-inline-end: var(--sl-spacing-medium);
 277    align-self: center;
 278  }
 279
 280  .alert__countdown {
 281    position: absolute;
 282    bottom: 0;
 283    left: 0;
 284    width: 100%;
 285    height: calc(var(--sl-panel-border-width) * 3);
 286    background-color: var(--sl-panel-border-color);
 287    display: flex;
 288  }
 289
 290  .alert__countdown--ltr {
 291    justify-content: flex-end;
 292  }
293
 294  .alert__countdown .alert__countdown-elapsed {
 295    height: 100%;
 296    width: 0;
 297  }
 298
 299  .alert--primary .alert__countdown-elapsed {
 300    background-color: var(--sl-color-primary-600);
 301  }
 302
 303  .alert--success .alert__countdown-elapsed {
 304    background-color: var(--sl-color-success-600);
 305  }
 306
 307  .alert--neutral .alert__countdown-elapsed {
 308    background-color: var(--sl-color-neutral-600);
 309  }
 310
 311  .alert--warning .alert__countdown-elapsed {
 312    background-color: var(--sl-color-warning-600);
 313  }
 314
 315  .alert--danger .alert__countdown-elapsed {
 316    background-color: var(--sl-color-danger-600);
 317  }
 318
 319  .alert__timer {
 320    display: none;
 321  }
 322 `,Fe=class e extends Ht{constructor(){super(...arguments),this.hasSlotController=new ke(this,"icon","suffix"),this.localize=new Re(this),this.open=!1,this.closable=!1,this.variant="primary",this.dur
 323      <div
 324        part="base"
 325        class=${se({alert:!0,"alert--open":this.open,"alert--closable":this.closable,"alert--has-countdown":!!this.countdown,"alert--has-icon":this.hasSlotController.test("icon"),"alert--primary":"p
 326        role="alert"
 327        aria-hidden=${this.open?"false":"true"}
 328        @mouseenter=${this.pauseAutoHide}
 329        @mouseleave=${this.resumeAutoHide}
 330      >
 331        <div part="icon" class="alert__icon">
 332          <slot name="icon"></slot>
 333        </div>
 334
 335        <div part="message" class="alert__message" aria-live="polite">
 336          <slot></slot>
 337        </div>
 338
 339        ${this.closable?V`
 340              <sl-icon-button
 341                part="close-button"
 342                exportparts="base:close-button__base"
 343                class="alert__close-button"
 344                name="x-lg"
 345                library="system"
 346                label=${this.localize.term("close")}
 347                @click=${this.handleCloseClick}
 348              ></sl-icon-button>
 349            `:""}
 350
 351        <div role="timer" class="alert__timer">${this.remainingTime}</div>
 352
 353        ${this.countdown?V`
 354              <div
 355                class=${se({alert__countdown:!0,"alert__countdown--ltr":"ltr"===this.countdown})}
 356              >
 357                <div class="alert__countdown-elapsed"></div>
 358              </div>
 359            `:""}
 360      </div>
 361    `}};Fe.styles=[Pt,Le],Fe.dependencies={"sl-icon-button":he},At([Vt('[part~="base"]')],Fe.prototype,"base",2),At([Vt(".alert__countdown-elapsed")],Fe.prototype,"countdownElement",2),At([Mt({type:
 362  :host {
 363    --track-width: 2px;
 364    --track-color: rgb(128 128 128 / 25%);
 365    --indicator-color: var(--sl-color-primary-600);
 366    --speed: 2s;
 367
 368    display: inline-flex;
 369    width: 1em;
 370    height: 1em;
 371    flex: none;
 372  }
 373
 374  .spinner {
 375    flex: 1 1 auto;
 376    height: 100%;
 377    width: 100%;
 378  }
 379
 380  .spinner__track,
 381  .spinner__indicator {
 382    fill: none;
 383    stroke-width: var(--track-width);
 384    r: calc(0.5em - var(--track-width) / 2);
 385    cx: 0.5em;
 386    cy: 0.5em;
 387    transform-origin: 50% 50%;
 388  }
 389
 390  .spinner__track {
 391    stroke: var(--track-color);
 392    transform-origin: 0% 0%;
 393  }
 394
 395  .spinner__indicator {
 396    stroke: var(--indicator-color);
 397    stroke-linecap: round;
 398    stroke-dasharray: 150% 75%;
 399    animation: spin var(--speed) linear infinite;
 400  }
 401
 402  @keyframes spin {
 403    0% {
 404      transform: rotate(0deg);
 405      stroke-dasharray: 0.05em, 3em;
 406    }
 407
 408    50% {
 409      transform: rotate(450deg);
 410      stroke-dasharray: 1.375em, 1.375em;
 411    }
 412
 413    100% {
 414      transform: rotate(1080deg);
 415      stroke-dasharray: 0.05em, 3em;
 416    }
 417  }
 418 `,Be=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this)}render(){return V`
 419      <svg part="base" class="spinner" role="progressbar" aria-label=${this.localize.term("loading")}>
 420        <circle class="spinner__track"></circle>
 421        <circle class="spinner__indicator"></circle>
 422      </svg>
 423    `}};Be.styles=[Pt,Ne];var Ue=new WeakMap,Ve=new WeakMap,je=new WeakMap,He=new WeakSet,We=new WeakMap,qe=class{constructor(t,e){this.handleFormData=t=>{const e=this.options.disabled(this.host),i=
 424  :host {
 425    display: inline-block;
 426    position: relative;
 427    width: auto;
 428    cursor: pointer;
 429  }
 430
 431  .button {
 432    display: inline-flex;
 433    align-items: stretch;
 434    justify-content: center;
 435    width: 100%;
 436    border-style: solid;
 437    border-width: var(--sl-input-border-width);
 438    font-family: var(--sl-input-font-family);
 439    font-weight: var(--sl-font-weight-semibold);
440    text-decoration: none;
 441    user-select: none;
 442    -webkit-user-select: none;
 443    white-space: nowrap;
 444    vertical-align: middle;
 445    padding: 0;
 446    transition:
 447      var(--sl-transition-x-fast) background-color,
 448      var(--sl-transition-x-fast) color,
 449      var(--sl-transition-x-fast) border,
 450      var(--sl-transition-x-fast) box-shadow;
 451    cursor: inherit;
 452  }
 453
 454  .button::-moz-focus-inner {
 455    border: 0;
 456  }
 457
 458  .button:focus {
 459    outline: none;
 460  }
 461
 462  .button:focus-visible {
 463    outline: var(--sl-focus-ring);
 464    outline-offset: var(--sl-focus-ring-offset);
 465  }
 466
 467  .button--disabled {
 468    opacity: 0.5;
 469    cursor: not-allowed;
 470  }
 471
 472  /* When disabled, prevent mouse events from bubbling up from children */
 473  .button--disabled * {
 474    pointer-events: none;
 475  }
 476
 477  .button__prefix,
 478  .button__suffix {
 479    flex: 0 0 auto;
 480    display: flex;
 481    align-items: center;
 482    pointer-events: none;
 483  }
 484
 485  .button__label {
 486    display: inline-block;
 487  }
 488
 489  .button__label::slotted(sl-icon) {
 490    vertical-align: -2px;
 491  }
 492
 493  /*
 494   * Standard buttons
 495   */
 496
 497  /* Default */
 498  .button--standard.button--default {
 499    background-color: var(--sl-color-neutral-0);
 500    border-color: var(--sl-input-border-color);
 501    color: var(--sl-color-neutral-700);
 502  }
 503
 504  .button--standard.button--default:hover:not(.button--disabled) {
 505    background-color: var(--sl-color-primary-50);
 506    border-color: var(--sl-color-primary-300);
 507    color: var(--sl-color-primary-700);
 508  }
 509
 510  .button--standard.button--default:active:not(.button--disabled) {
 511    background-color: var(--sl-color-primary-100);
 512    border-color: var(--sl-color-primary-400);
 513    color: var(--sl-color-primary-700);
 514  }
 515
 516  /* Primary */
 517  .button--standard.button--primary {
 518    background-color: var(--sl-color-primary-600);
 519    border-color: var(--sl-color-primary-600);
 520    color: var(--sl-color-neutral-0);
 521  }
 522
 523  .button--standard.button--primary:hover:not(.button--disabled) {
 524    background-color: var(--sl-color-primary-500);
 525    border-color: var(--sl-color-primary-500);
 526    color: var(--sl-color-neutral-0);
 527  }
 528
 529  .button--standard.button--primary:active:not(.button--disabled) {
 530    background-color: var(--sl-color-primary-600);
 531    border-color: var(--sl-color-primary-600);
 532    color: var(--sl-color-neutral-0);
 533  }
 534
 535  /* Success */
 536  .button--standard.button--success {
 537    background-color: var(--sl-color-success-600);
 538    border-color: var(--sl-color-success-600);
 539    color: var(--sl-color-neutral-0);
 540  }
 541
 542  .button--standard.button--success:hover:not(.button--disabled) {
 543    background-color: var(--sl-color-success-500);
 544    border-color: var(--sl-color-success-500);
 545    color: var(--sl-color-neutral-0);
 546  }
 547
 548  .button--standard.button--success:active:not(.button--disabled) {
 549    background-color: var(--sl-color-success-600);
 550    border-color: var(--sl-color-success-600);
 551    color: var(--sl-color-neutral-0);
 552  }
 553
 554  /* Neutral */
 555  .button--standard.button--neutral {
 556    background-color: var(--sl-color-neutral-600);
 557    border-color: var(--sl-color-neutral-600);
 558    color: var(--sl-color-neutral-0);
 559  }
 560
 561  .button--standard.button--neutral:hover:not(.button--disabled) {
 562    background-color: var(--sl-color-neutral-500);
 563    border-color: var(--sl-color-neutral-500);
 564    color: var(--sl-color-neutral-0);
 565  }
 566
 567  .button--standard.button--neutral:active:not(.button--disabled) {
 568    background-color: var(--sl-color-neutral-600);
 569    border-color: var(--sl-color-neutral-600);
 570    color: var(--sl-color-neutral-0);
 571  }
 572
 573  /* Warning */
 574  .button--standard.button--warning {
 575    background-color: var(--sl-color-warning-600);
 576    border-color: var(--sl-color-warning-600);
 577    color: var(--sl-color-neutral-0);
 578  }
 579  .button--standard.button--warning:hover:not(.button--disabled) {
 580    background-color: var(--sl-color-warning-500);
 581    border-color: var(--sl-color-warning-500);
 582    color: var(--sl-color-neutral-0);
 583  }
 584
 585  .button--standard.button--warning:active:not(.button--disabled) {
 586    background-color: var(--sl-color-warning-600);
587    border-color: var(--sl-color-warning-600);
 588    color: var(--sl-color-neutral-0);
 589  }
 590
 591  /* Danger */
 592  .button--standard.button--danger {
 593    background-color: var(--sl-color-danger-600);
 594    border-color: var(--sl-color-danger-600);
 595    color: var(--sl-color-neutral-0);
 596  }
 597
 598  .button--standard.button--danger:hover:not(.button--disabled) {
 599    background-color: var(--sl-color-danger-500);
 600    border-color: var(--sl-color-danger-500);
 601    color: var(--sl-color-neutral-0);
 602  }
 603
 604  .button--standard.button--danger:active:not(.button--disabled) {
 605    background-color: var(--sl-color-danger-600);
 606    border-color: var(--sl-color-danger-600);
 607    color: var(--sl-color-neutral-0);
 608  }
 609
 610  /*
 611   * Outline buttons
 612   */
 613
 614  .button--outline {
 615    background: none;
 616    border: solid 1px;
 617  }
 618
 619  /* Default */
 620  .button--outline.button--default {
 621    border-color: var(--sl-input-border-color);
 622    color: var(--sl-color-neutral-700);
 623  }
 624
 625  .button--outline.button--default:hover:not(.button--disabled),
 626  .button--outline.button--default.button--checked:not(.button--disabled) {
 627    border-color: var(--sl-color-primary-600);
 628    background-color: var(--sl-color-primary-600);
 629    color: var(--sl-color-neutral-0);
 630  }
 631
 632  .button--outline.button--default:active:not(.button--disabled) {
 633    border-color: var(--sl-color-primary-700);
 634    background-color: var(--sl-color-primary-700);
 635    color: var(--sl-color-neutral-0);
 636  }
 637
 638  /* Primary */
 639  .button--outline.button--primary {
 640    border-color: var(--sl-color-primary-600);
 641    color: var(--sl-color-primary-600);
 642  }
 643
 644  .button--outline.button--primary:hover:not(.button--disabled),
 645  .button--outline.button--primary.button--checked:not(.button--disabled) {
 646    background-color: var(--sl-color-primary-600);
 647    color: var(--sl-color-neutral-0);
 648  }
 649
 650  .button--outline.button--primary:active:not(.button--disabled) {
 651    border-color: var(--sl-color-primary-700);
 652    background-color: var(--sl-color-primary-700);
 653    color: var(--sl-color-neutral-0);
 654  }
 655
 656  /* Success */
 657  .button--outline.button--success {
 658    border-color: var(--sl-color-success-600);
 659    color: var(--sl-color-success-600);
 660  }
 661
 662  .button--outline.button--success:hover:not(.button--disabled),
 663  .button--outline.button--success.button--checked:not(.button--disabled) {
 664    background-color: var(--sl-color-success-600);
 665    color: var(--sl-color-neutral-0);
 666  }
 667
 668  .button--outline.button--success:active:not(.button--disabled) {
 669    border-color: var(--sl-color-success-700);
 670    background-color: var(--sl-color-success-700);
 671    color: var(--sl-color-neutral-0);
 672  }
 673
 674  /* Neutral */
 675  .button--outline.button--neutral {
 676    border-color: var(--sl-color-neutral-600);
 677    color: var(--sl-color-neutral-600);
 678  }
 679
 680  .button--outline.button--neutral:hover:not(.button--disabled),
 681  .button--outline.button--neutral.button--checked:not(.button--disabled) {
 682    background-color: var(--sl-color-neutral-600);
 683    color: var(--sl-color-neutral-0);
 684  }
 685
 686  .button--outline.button--neutral:active:not(.button--disabled) {
 687    border-color: var(--sl-color-neutral-700);
 688    background-color: var(--sl-color-neutral-700);
 689    color: var(--sl-color-neutral-0);
 690  }
 691
 692  /* Warning */
 693  .button--outline.button--warning {
 694    border-color: var(--sl-color-warning-600);
 695    color: var(--sl-color-warning-600);
 696  }
 697
 698  .button--outline.button--warning:hover:not(.button--disabled),
 699  .button--outline.button--warning.button--checked:not(.button--disabled) {
 700    background-color: var(--sl-color-warning-600);
 701    color: var(--sl-color-neutral-0);
 702  }
 703
 704  .button--outline.button--warning:active:not(.button--disabled) {
 705    border-color: var(--sl-color-warning-700);
 706    background-color: var(--sl-color-warning-700);
 707    color: var(--sl-color-neutral-0);
 708  }
 709
 710  /* Danger */
 711  .button--outline.button--danger {
 712    border-color: var(--sl-color-danger-600);
 713    color: var(--sl-color-danger-600);
 714  }
 715
 716  .button--outline.button--danger:hover:not(.button--disabled),
 717  .button--outline.button--danger.button--checked:not(.button--disabled) {
 718    background-color: var(--sl-color-danger-600);
 719    color: var(--sl-color-neutral-0);
 720  }
 721
 722  .button--outline.button--danger:active:not(.button--disabled) {
 723    border-color: var(--sl-color-danger-700);
 724    background-color: var(--sl-color-danger-700);
 725    color: var(--sl-color-neutral-0);
 726  }
 727
 728  @media (forced-colors: active) {
 729    .button.button--outline.button--checked:not(.button--disabled) {
 730      outline: solid 2px transparent;
 731    }
 732  }
 733
734  /*
 735   * Text buttons
 736   */
 737
 738  .button--text {
 739    background-color: transparent;
 740    border-color: transparent;
 741    color: var(--sl-color-primary-600);
 742  }
 743
 744  .button--text:hover:not(.button--disabled) {
 745    background-color: transparent;
 746    border-color: transparent;
 747    color: var(--sl-color-primary-500);
 748  }
 749
 750  .button--text:focus-visible:not(.button--disabled) {
 751    background-color: transparent;
 752    border-color: transparent;
 753    color: var(--sl-color-primary-500);
 754  }
 755
 756  .button--text:active:not(.button--disabled) {
 757    background-color: transparent;
 758    border-color: transparent;
 759    color: var(--sl-color-primary-700);
 760  }
 761
 762  /*
 763   * Size modifiers
 764   */
 765
 766  .button--small {
 767    height: auto;
 768    min-height: var(--sl-input-height-small);
 769    font-size: var(--sl-button-font-size-small);
 770    line-height: calc(var(--sl-input-height-small) - var(--sl-input-border-width) * 2);
 771    border-radius: var(--sl-input-border-radius-small);
 772  }
 773
 774  .button--medium {
 775    height: auto;
 776    min-height: var(--sl-input-height-medium);
 777    font-size: var(--sl-button-font-size-medium);
 778    line-height: calc(var(--sl-input-height-medium) - var(--sl-input-border-width) * 2);
 779    border-radius: var(--sl-input-border-radius-medium);
 780  }
 781
 782  .button--large {
 783    height: auto;
 784    min-height: var(--sl-input-height-large);
 785    font-size: var(--sl-button-font-size-large);
 786    line-height: calc(var(--sl-input-height-large) - var(--sl-input-border-width) * 2);
 787    border-radius: var(--sl-input-border-radius-large);
 788  }
 789
 790  /*
 791   * Pill modifier
 792   */
 793
 794  .button--pill.button--small {
 795    border-radius: var(--sl-input-height-small);
 796  }
 797
 798  .button--pill.button--medium {
 799    border-radius: var(--sl-input-height-medium);
 800  }
 801
 802  .button--pill.button--large {
 803    border-radius: var(--sl-input-height-large);
 804  }
 805
 806  /*
 807   * Circle modifier
 808   */
 809
 810  .button--circle {
 811    padding-left: 0;
 812    padding-right: 0;
 813  }
 814
 815  .button--circle.button--small {
 816    width: var(--sl-input-height-small);
 817    border-radius: 50%;
 818  }
 819
 820  .button--circle.button--medium {
 821    width: var(--sl-input-height-medium);
 822    border-radius: 50%;
 823  }
 824
 825  .button--circle.button--large {
 826    width: var(--sl-input-height-large);
 827    border-radius: 50%;
 828  }
 829
 830  .button--circle .button__prefix,
 831  .button--circle .button__suffix,
 832  .button--circle .button__caret {
 833    display: none;
 834  }
 835
 836  /*
 837   * Caret modifier
 838   */
 839
 840  .button--caret .button__suffix {
 841    display: none;
 842  }
 843
 844  .button--caret .button__caret {
 845    height: auto;
 846  }
 847
 848  /*
 849   * Loading modifier
 850   */
 851
 852  .button--loading {
 853    position: relative;
 854    cursor: wait;
 855  }
 856
 857  .button--loading .button__prefix,
 858  .button--loading .button__label,
 859  .button--loading .button__suffix,
 860  .button--loading .button__caret {
 861    visibility: hidden;
 862  }
 863
 864  .button--loading sl-spinner {
 865    --indicator-color: currentColor;
 866    position: absolute;
 867    font-size: 1em;
 868    height: 1em;
 869    width: 1em;
 870    top: calc(50% - 0.5em);
 871    left: calc(50% - 0.5em);
 872  }
 873
 874  /*
 875   * Badges
 876   */
 877
 878  .button ::slotted(sl-badge) {
 879    position: absolute;
 880    top: 0;
881    right: 0;
 882    translate: 50% -50%;
 883    pointer-events: none;
 884  }
 885
 886  .button--rtl ::slotted(sl-badge) {
 887    right: auto;
 888    left: 0;
 889    translate: -50% -50%;
 890  }
 891
 892  /*
 893   * Button spacing
 894   */
 895
 896  .button--has-label.button--small .button__label {
 897    padding: 0 var(--sl-spacing-small);
 898  }
 899
 900  .button--has-label.button--medium .button__label {
 901    padding: 0 var(--sl-spacing-medium);
 902  }
 903
 904  .button--has-label.button--large .button__label {
 905    padding: 0 var(--sl-spacing-large);
 906  }
 907
 908  .button--has-prefix.button--small {
 909    padding-inline-start: var(--sl-spacing-x-small);
 910  }
 911
 912  .button--has-prefix.button--small .button__label {
 913    padding-inline-start: var(--sl-spacing-x-small);
 914  }
 915
 916  .button--has-prefix.button--medium {
 917    padding-inline-start: var(--sl-spacing-small);
 918  }
 919
 920  .button--has-prefix.button--medium .button__label {
 921    padding-inline-start: var(--sl-spacing-small);
 922  }
 923
 924  .button--has-prefix.button--large {
 925    padding-inline-start: var(--sl-spacing-small);
 926  }
 927
 928  .button--has-prefix.button--large .button__label {
 929    padding-inline-start: var(--sl-spacing-small);
 930  }
 931
 932  .button--has-suffix.button--small,
 933  .button--caret.button--small {
 934    padding-inline-end: var(--sl-spacing-x-small);
 935  }
 936
 937  .button--has-suffix.button--small .button__label,
 938  .button--caret.button--small .button__label {
 939    padding-inline-end: var(--sl-spacing-x-small);
 940  }
 941
 942  .button--has-suffix.button--medium,
 943  .button--caret.button--medium {
 944    padding-inline-end: var(--sl-spacing-small);
 945  }
 946
 947  .button--has-suffix.button--medium .button__label,
 948  .button--caret.button--medium .button__label {
 949    padding-inline-end: var(--sl-spacing-small);
 950  }
 951
 952  .button--has-suffix.button--large,
 953  .button--caret.button--large {
 954    padding-inline-end: var(--sl-spacing-small);
 955  }
 956
 957  .button--has-suffix.button--large .button__label,
 958  .button--caret.button--large .button__label {
 959    padding-inline-end: var(--sl-spacing-small);
 960  }
 961
 962  /*
 963   * Button groups support a variety of button types (e.g. buttons with tooltips, buttons as dropdown triggers, etc.).
 964   * This means buttons aren't always direct descendants of the button group, thus we can't target them with the
 965   * ::slotted selector. To work around this, the button group component does some magic to add these special classes to
 966   * buttons and we style them here instead.
 967   */
 968
 969  :host([data-sl-button-group__button--first]:not([data-sl-button-group__button--last])) .button {
 970    border-start-end-radius: 0;
 971    border-end-end-radius: 0;
 972  }
 973
 974  :host([data-sl-button-group__button--inner]) .button {
 975    border-radius: 0;
 976  }
 977
 978  :host([data-sl-button-group__button--last]:not([data-sl-button-group__button--first])) .button {
 979    border-start-start-radius: 0;
 980    border-end-start-radius: 0;
 981  }
 982
 983  /* All except the first */
 984  :host([data-sl-button-group__button]:not([data-sl-button-group__button--first])) {
 985    margin-inline-start: calc(-1 * var(--sl-input-border-width));
 986  }
 987
 988  /* Add a visual separator between solid buttons */
 989  :host(
 990      [data-sl-button-group__button]:not(
 991          [data-sl-button-group__button--first],
 992          [data-sl-button-group__button--radio],
 993          [variant='default']
 994        ):not(:hover)
 995    )
 996    .button:after {
 997    content: '';
 998    position: absolute;
 999    top: 0;
 1000    inset-inline-start: 0;
 1001    bottom: 0;
 1002    border-left: solid 1px rgb(128 128 128 / 33%);
 1003    mix-blend-mode: multiply;
 1004  }
 1005
 1006  /* Bump hovered, focused, and checked buttons up so their focus ring isn't clipped */
 1007  :host([data-sl-button-group__button--hover]) {
 1008    z-index: 1;
 1009  }
 1010
 1011  /* Focus and checked are always on top */
 1012  :host([data-sl-button-group__button--focus]),
 1013  :host([data-sl-button-group__button][checked]) {
 1014    z-index: 2;
 1015  }
 1016 `,Je=class extends Ht{constructor(){super(...arguments),this.formControlController=new qe(this,{assumeInteractionOn:["click"]}),this.hasSlotController=new ke(this,"[default]","prefix","suffix"),this
 1017      <${e}
 1018        part="base"
 1019        class=${se({button:!0,"button--default":"default"===this.variant,"button--primary":"primary"===this.variant,"button--success":"success"===this.variant,"button--neutral":"neutral"===this.vari
 1020        ?disabled=${de(t?void 0:this.disabled)}
 1021        type=${de(t?void 0:this.type)}
 1022        title=${this.title}
 1023        name=${de(t?void 0:this.name)}
 1024        value=${de(t?void 0:this.value)}
 1025        href=${de(t&&!this.disabled?this.href:void 0)}
 1026        target=${de(t?this.target:void 0)}
 1027        download=${de(t?this.download:void 0)}
1028        rel=${de(t?this.rel:void 0)}
 1029        role=${de(t?void 0:"button")}
 1030        aria-disabled=${this.disabled?"true":"false"}
 1031        tabindex=${this.disabled?"-1":"0"}
 1032        @blur=${this.handleBlur}
 1033        @focus=${this.handleFocus}
 1034        @invalid=${this.isButton()?this.handleInvalid:null}
 1035        @click=${this.handleClick}
 1036      >
 1037        <slot name="prefix" part="prefix" class="button__prefix"></slot>
 1038        <slot part="label" class="button__label"></slot>
 1039        <slot name="suffix" part="suffix" class="button__suffix"></slot>
 1040        ${this.caret?ce` <sl-icon part="caret" class="button__caret" library="system" name="caret"></sl-icon> `:""}
 1041        ${this.loading?ce`<sl-spinner part="spinner"></sl-spinner>`:""}
 1042      </${e}>
 1043    `}};Je.styles=[Pt,Xe],Je.dependencies={"sl-icon":Jt,"sl-spinner":Be},At([Vt(".button")],Je.prototype,"button",2),At([Nt()],Je.prototype,"hasFocus",2),At([Nt()],Je.prototype,"invalid",2),At([Mt()
 1044  :host {
 1045    --border-color: var(--sl-color-neutral-200);
 1046    --border-radius: var(--sl-border-radius-medium);
 1047    --border-width: 1px;
 1048    --padding: var(--sl-spacing-large);
 1049
 1050    display: inline-block;
 1051  }
 1052
 1053  .card {
 1054    display: flex;
 1055    flex-direction: column;
 1056    background-color: var(--sl-panel-background-color);
 1057    box-shadow: var(--sl-shadow-x-small);
 1058    border: solid var(--border-width) var(--border-color);
 1059    border-radius: var(--border-radius);
 1060  }
 1061
 1062  .card__image {
 1063    display: flex;
 1064    border-top-left-radius: var(--border-radius);
 1065    border-top-right-radius: var(--border-radius);
 1066    margin: calc(-1 * var(--border-width));
 1067    overflow: hidden;
 1068  }
 1069
 1070  .card__image::slotted(img) {
 1071    display: block;
 1072    width: 100%;
 1073  }
 1074
 1075  .card:not(.card--has-image) .card__image {
 1076    display: none;
 1077  }
 1078
 1079  .card__header {
 1080    display: block;
 1081    border-bottom: solid var(--border-width) var(--border-color);
 1082    padding: calc(var(--padding) / 2) var(--padding);
 1083  }
 1084
 1085  .card:not(.card--has-header) .card__header {
 1086    display: none;
 1087  }
 1088
 1089  .card:not(.card--has-image) .card__header {
 1090    border-top-left-radius: var(--border-radius);
 1091    border-top-right-radius: var(--border-radius);
 1092  }
 1093
 1094  .card__body {
 1095    display: block;
 1096    padding: var(--padding);
 1097  }
 1098
 1099  .card--has-footer .card__footer {
 1100    display: block;
 1101    border-top: solid var(--border-width) var(--border-color);
 1102    padding: var(--padding);
 1103  }
 1104
 1105  .card:not(.card--has-footer) .card__footer {
 1106    display: none;
 1107  }
 1108 `,Ze=class extends Ht{constructor(){super(...arguments),this.hasSlotController=new ke(this,"footer","header","image")}render(){return V`
 1109      <div
 1110        part="base"
 1111        class=${se({card:!0,"card--has-footer":this.hasSlotController.test("footer"),"card--has-image":this.hasSlotController.test("image"),"card--has-header":this.hasSlotController.test("header")})
 1112      >
 1113        <slot name="image" part="image" class="card__image"></slot>
 1114        <slot name="header" part="header" class="card__header"></slot>
 1115        <slot part="body" class="card__body"></slot>
 1116        <slot name="footer" part="footer" class="card__footer"></slot>
 1117      </div>
 1118    `}};Ze.styles=[Pt,Qe],Ze.define("sl-card");var ti=a`
 1119  :host {
 1120    display: inline-block;
 1121  }
 1122
 1123  .checkbox {
 1124    position: relative;
 1125    display: inline-flex;
 1126    align-items: flex-start;
 1127    font-family: var(--sl-input-font-family);
 1128    font-weight: var(--sl-input-font-weight);
 1129    color: var(--sl-input-label-color);
 1130    vertical-align: middle;
 1131    cursor: pointer;
 1132  }
 1133
 1134  .checkbox--small {
 1135    --toggle-size: var(--sl-toggle-size-small);
 1136    font-size: var(--sl-input-font-size-small);
 1137  }
 1138
 1139  .checkbox--medium {
 1140    --toggle-size: var(--sl-toggle-size-medium);
 1141    font-size: var(--sl-input-font-size-medium);
 1142  }
 1143
 1144  .checkbox--large {
 1145    --toggle-size: var(--sl-toggle-size-large);
 1146    font-size: var(--sl-input-font-size-large);
 1147  }
 1148
 1149  .checkbox__control {
 1150    flex: 0 0 auto;
 1151    position: relative;
 1152    display: inline-flex;
 1153    align-items: center;
 1154    justify-content: center;
 1155    width: var(--toggle-size);
 1156    height: var(--toggle-size);
 1157    border: solid var(--sl-input-border-width) var(--sl-input-border-color);
 1158    border-radius: 2px;
 1159    background-color: var(--sl-input-background-color);
 1160    color: var(--sl-color-neutral-0);
 1161    transition:
 1162      var(--sl-transition-fast) border-color,
 1163      var(--sl-transition-fast) background-color,
 1164      var(--sl-transition-fast) color,
 1165      var(--sl-transition-fast) box-shadow;
 1166  }
 1167
 1168  .checkbox__input {
 1169    position: absolute;
 1170    opacity: 0;
 1171    padding: 0;
 1172    margin: 0;
 1173    pointer-events: none;
 1174  }
1175
 1176  .checkbox__checked-icon,
 1177  .checkbox__indeterminate-icon {
 1178    display: inline-flex;
 1179    width: var(--toggle-size);
 1180    height: var(--toggle-size);
 1181  }
 1182
 1183  /* Hover */
 1184  .checkbox:not(.checkbox--checked):not(.checkbox--disabled) .checkbox__control:hover {
 1185    border-color: var(--sl-input-border-color-hover);
 1186    background-color: var(--sl-input-background-color-hover);
 1187  }
 1188
 1189  /* Focus */
 1190  .checkbox:not(.checkbox--checked):not(.checkbox--disabled) .checkbox__input:focus-visible ~ .checkbox__control {
 1191    outline: var(--sl-focus-ring);
 1192    outline-offset: var(--sl-focus-ring-offset);
 1193  }
 1194
 1195  /* Checked/indeterminate */
 1196  .checkbox--checked .checkbox__control,
 1197  .checkbox--indeterminate .checkbox__control {
 1198    border-color: var(--sl-color-primary-600);
 1199    background-color: var(--sl-color-primary-600);
 1200  }
 1201
 1202  /* Checked/indeterminate + hover */
 1203  .checkbox.checkbox--checked:not(.checkbox--disabled) .checkbox__control:hover,
 1204  .checkbox.checkbox--indeterminate:not(.checkbox--disabled) .checkbox__control:hover {
 1205    border-color: var(--sl-color-primary-500);
 1206    background-color: var(--sl-color-primary-500);
 1207  }
 1208
 1209  /* Checked/indeterminate + focus */
 1210  .checkbox.checkbox--checked:not(.checkbox--disabled) .checkbox__input:focus-visible ~ .checkbox__control,
 1211  .checkbox.checkbox--indeterminate:not(.checkbox--disabled) .checkbox__input:focus-visible ~ .checkbox__control {
 1212    outline: var(--sl-focus-ring);
 1213    outline-offset: var(--sl-focus-ring-offset);
 1214  }
 1215
 1216  /* Disabled */
 1217  .checkbox--disabled {
 1218    opacity: 0.5;
 1219    cursor: not-allowed;
 1220  }
 1221
 1222  .checkbox__label {
 1223    display: inline-block;
 1224    color: var(--sl-input-label-color);
 1225    line-height: var(--toggle-size);
 1226    margin-inline-start: 0.5em;
 1227    user-select: none;
 1228    -webkit-user-select: none;
 1229  }
 1230
 1231  :host([required]) .checkbox__label::after {
 1232    content: var(--sl-input-required-content);
 1233    color: var(--sl-input-required-content-color);
 1234    margin-inline-start: var(--sl-input-required-content-offset);
 1235  }
 1236 `,ei=(t="value")=>(e,i)=>{const r=e.constructor,s=r.prototype.attributeChangedCallback;r.prototype.attributeChangedCallback=function(e,o,a){var n;const l=r.getPropertyOptions(t);if(e===("string"==ty
 1237  .form-control .form-control__label {
 1238    display: none;
 1239  }
 1240
 1241  .form-control .form-control__help-text {
 1242    display: none;
 1243  }
 1244
 1245  /* Label */
 1246  .form-control--has-label .form-control__label {
 1247    display: inline-block;
 1248    color: var(--sl-input-label-color);
 1249    margin-bottom: var(--sl-spacing-3x-small);
 1250  }
 1251
 1252  .form-control--has-label.form-control--small .form-control__label {
 1253    font-size: var(--sl-input-label-font-size-small);
 1254  }
 1255
 1256  .form-control--has-label.form-control--medium .form-control__label {
 1257    font-size: var(--sl-input-label-font-size-medium);
 1258  }
 1259
 1260  .form-control--has-label.form-control--large .form-control__label {
 1261    font-size: var(--sl-input-label-font-size-large);
 1262  }
 1263
 1264  :host([required]) .form-control--has-label .form-control__label::after {
 1265    content: var(--sl-input-required-content);
 1266    margin-inline-start: var(--sl-input-required-content-offset);
 1267    color: var(--sl-input-required-content-color);
 1268  }
 1269
 1270  /* Help text */
 1271  .form-control--has-help-text .form-control__help-text {
 1272    display: block;
 1273    color: var(--sl-input-help-text-color);
 1274    margin-top: var(--sl-spacing-3x-small);
 1275  }
 1276
 1277  .form-control--has-help-text.form-control--small .form-control__help-text {
 1278    font-size: var(--sl-input-help-text-font-size-small);
 1279  }
 1280
 1281  .form-control--has-help-text.form-control--medium .form-control__help-text {
 1282    font-size: var(--sl-input-help-text-font-size-medium);
 1283  }
 1284
 1285  .form-control--has-help-text.form-control--large .form-control__help-text {
 1286    font-size: var(--sl-input-help-text-font-size-large);
 1287  }
 1288
 1289  .form-control--has-help-text.form-control--radio-group .form-control__help-text {
 1290    margin-top: var(--sl-spacing-2x-small);
 1291  }
 1292 `
 1293 /**
 1294 * @license
 1295 * Copyright 2020 Google LLC
 1296 * SPDX-License-Identifier: BSD-3-Clause
 1297 */;const ri=ie(class extends re{constructor(t){if(super(t),t.type!==te&&t.type!==Qt&&t.type!==ee)throw Error("The `live` directive is not allowed on child or event bindings");if(!Wt(t))throw Error(
 1298      <div
 1299        class=${se({"form-control":!0,"form-control--small":"small"===this.size,"form-control--medium":"medium"===this.size,"form-control--large":"large"===this.size,"form-control--has-help-text":e}
 1300      >
 1301        <label
 1302          part="base"
 1303          class=${se({checkbox:!0,"checkbox--checked":this.checked,"checkbox--disabled":this.disabled,"checkbox--focused":this.hasFocus,"checkbox--indeterminate":this.indeterminate,"checkbox--small"
 1304        >
 1305          <input
 1306            class="checkbox__input"
 1307            type="checkbox"
 1308            title=${this.title}
 1309            name=${this.name}
 1310            value=${de(this.value)}
 1311            .indeterminate=${ri(this.indeterminate)}
 1312            .checked=${ri(this.checked)}
 1313            .disabled=${this.disabled}
 1314            .required=${this.required}
 1315            aria-checked=${this.checked?"true":"false"}
 1316            aria-describedby="help-text"
 1317            @click=${this.handleClick}
 1318            @input=${this.handleInput}
 1319            @invalid=${this.handleInvalid}
 1320            @blur=${this.handleBlur}
 1321            @focus=${this.handleFocus}
1322          />
 1323
 1324          <span
 1325            part="control${this.checked?" control--checked":""}${this.indeterminate?" control--indeterminate":""}"
 1326            class="checkbox__control"
 1327          >
 1328            ${this.checked?V`
 1329                  <sl-icon part="checked-icon" class="checkbox__checked-icon" library="system" name="check"></sl-icon>
 1330                `:""}
 1331            ${!this.checked&&this.indeterminate?V`
 1332                  <sl-icon
 1333                    part="indeterminate-icon"
 1334                    class="checkbox__indeterminate-icon"
 1335                    library="system"
 1336                    name="indeterminate"
 1337                  ></sl-icon>
 1338                `:""}
 1339          </span>
 1340
 1341          <div part="label" class="checkbox__label">
 1342            <slot></slot>
 1343          </div>
 1344        </label>
 1345
 1346        <div
 1347          aria-hidden=${e?"false":"true"}
 1348          class="form-control__help-text"
 1349          id="help-text"
 1350          part="form-control-help-text"
 1351        >
 1352          <slot name="help-text">${this.helpText}</slot>
 1353        </div>
 1354      </div>
 1355    `}};si.styles=[Pt,ii,ti],si.dependencies={"sl-icon":Jt},At([Vt('input[type="checkbox"]')],si.prototype,"input",2),At([Nt()],si.prototype,"hasFocus",2),At([Mt()],si.prototype,"title",2),At([Mt()]
 1356  :host {
 1357    display: block;
 1358  }
 1359
 1360  .details {
 1361    border: solid 1px var(--sl-color-neutral-200);
 1362    border-radius: var(--sl-border-radius-medium);
 1363    background-color: var(--sl-color-neutral-0);
 1364    overflow-anchor: none;
 1365  }
 1366
 1367  .details--disabled {
 1368    opacity: 0.5;
 1369  }
 1370
 1371  .details__header {
 1372    display: flex;
 1373    align-items: center;
 1374    border-radius: inherit;
 1375    padding: var(--sl-spacing-medium);
 1376    user-select: none;
 1377    -webkit-user-select: none;
 1378    cursor: pointer;
 1379  }
 1380
 1381  .details__header::-webkit-details-marker {
 1382    display: none;
 1383  }
 1384
 1385  .details__header:focus {
 1386    outline: none;
 1387  }
 1388
 1389  .details__header:focus-visible {
 1390    outline: var(--sl-focus-ring);
 1391    outline-offset: calc(1px + var(--sl-focus-ring-offset));
 1392  }
 1393
 1394  .details--disabled .details__header {
 1395    cursor: not-allowed;
 1396  }
 1397
 1398  .details--disabled .details__header:focus-visible {
 1399    outline: none;
 1400    box-shadow: none;
 1401  }
 1402
 1403  .details__summary {
 1404    flex: 1 1 auto;
 1405    display: flex;
 1406    align-items: center;
 1407  }
 1408
 1409  .details__summary-icon {
 1410    flex: 0 0 auto;
 1411    display: flex;
 1412    align-items: center;
 1413    transition: var(--sl-transition-medium) rotate ease;
 1414  }
 1415
 1416  .details--open .details__summary-icon {
 1417    rotate: 90deg;
 1418  }
 1419
 1420  .details--open.details--rtl .details__summary-icon {
 1421    rotate: -90deg;
 1422  }
 1423
 1424  .details--open slot[name='expand-icon'],
 1425  .details:not(.details--open) slot[name='collapse-icon'] {
 1426    display: none;
 1427  }
 1428
 1429  .details__body {
 1430    overflow: hidden;
 1431  }
 1432
 1433  .details__content {
 1434    display: block;
 1435    padding: var(--sl-spacing-medium);
 1436  }
 1437 `,ai=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.open=!1,this.disabled=!1}firstUpdated(){this.body.style.height=this.open?"auto":"0",this.open&&(this.details.o
 1438      <details
 1439        part="base"
 1440        class=${se({details:!0,"details--open":this.open,"details--disabled":this.disabled,"details--rtl":t})}
 1441      >
 1442        <summary
 1443          part="header"
 1444          id="header"
 1445          class="details__header"
 1446          role="button"
 1447          aria-expanded=${this.open?"true":"false"}
 1448          aria-controls="content"
 1449          aria-disabled=${this.disabled?"true":"false"}
 1450          tabindex=${this.disabled?"-1":"0"}
 1451          @click=${this.handleSummaryClick}
 1452          @keydown=${this.handleSummaryKeyDown}
 1453        >
 1454          <slot name="summary" part="summary" class="details__summary">${this.summary}</slot>
 1455
 1456          <span part="summary-icon" class="details__summary-icon">
 1457            <slot name="expand-icon">
 1458              <sl-icon library="system" name=${t?"chevron-left":"chevron-right"}></sl-icon>
 1459            </slot>
 1460            <slot name="collapse-icon">
 1461              <sl-icon library="system" name=${t?"chevron-left":"chevron-right"}></sl-icon>
 1462            </slot>
 1463          </span>
 1464        </summary>
 1465
 1466        <div class="details__body" role="region" aria-labelledby="header">
 1467          <slot part="content" id="content" class="details__content"></slot>
 1468        </div>
1469      </details>
 1470    `}};function*ni(t=document.activeElement){var e,i,r,s,o;null!=t&&(yield t,"shadowRoot"in t&&t.shadowRoot&&"closed"!==t.shadowRoot.mode&&(yield*(e=ni(t.shadowRoot.activeElement),r=e[St("asyncIter
 1471  :host {
 1472    --width: 31rem;
 1473    --header-spacing: var(--sl-spacing-large);
 1474    --body-spacing: var(--sl-spacing-large);
 1475    --footer-spacing: var(--sl-spacing-large);
 1476
 1477    display: contents;
 1478  }
 1479
 1480  .dialog {
 1481    display: flex;
 1482    align-items: center;
 1483    justify-content: center;
 1484    position: fixed;
 1485    top: 0;
 1486    right: 0;
 1487    bottom: 0;
 1488    left: 0;
 1489    z-index: var(--sl-z-index-dialog);
 1490  }
 1491
 1492  .dialog__panel {
 1493    display: flex;
 1494    flex-direction: column;
 1495    z-index: 2;
 1496    width: var(--width);
 1497    max-width: calc(100% - var(--sl-spacing-2x-large));
 1498    max-height: calc(100% - var(--sl-spacing-2x-large));
 1499    background-color: var(--sl-panel-background-color);
 1500    border-radius: var(--sl-border-radius-medium);
 1501    box-shadow: var(--sl-shadow-x-large);
 1502  }
 1503
 1504  .dialog__panel:focus {
 1505    outline: none;
 1506  }
 1507
 1508  /* Ensure there's enough vertical padding for phones that don't update vh when chrome appears (e.g. iPhone) */
 1509  @media screen and (max-width: 420px) {
 1510    .dialog__panel {
 1511      max-height: 80vh;
 1512    }
 1513  }
 1514
 1515  .dialog--open .dialog__panel {
 1516    display: flex;
 1517    opacity: 1;
 1518  }
 1519
 1520  .dialog__header {
 1521    flex: 0 0 auto;
 1522    display: flex;
 1523  }
 1524
 1525  .dialog__title {
 1526    flex: 1 1 auto;
 1527    font: inherit;
 1528    font-size: var(--sl-font-size-large);
 1529    line-height: var(--sl-line-height-dense);
 1530    padding: var(--header-spacing);
 1531    margin: 0;
 1532  }
 1533
 1534  .dialog__header-actions {
 1535    flex-shrink: 0;
 1536    display: flex;
 1537    flex-wrap: wrap;
 1538    justify-content: end;
 1539    gap: var(--sl-spacing-2x-small);
 1540    padding: 0 var(--header-spacing);
 1541  }
 1542
 1543  .dialog__header-actions sl-icon-button,
 1544  .dialog__header-actions ::slotted(sl-icon-button) {
 1545    flex: 0 0 auto;
 1546    display: flex;
 1547    align-items: center;
 1548    font-size: var(--sl-font-size-medium);
 1549  }
 1550
 1551  .dialog__body {
 1552    flex: 1 1 auto;
 1553    display: block;
 1554    padding: var(--body-spacing);
 1555    overflow: auto;
 1556    -webkit-overflow-scrolling: touch;
 1557  }
 1558
 1559  .dialog__footer {
 1560    flex: 0 0 auto;
 1561    text-align: right;
 1562    padding: var(--footer-spacing);
 1563  }
 1564
 1565  .dialog__footer ::slotted(sl-button:not(:first-of-type)) {
 1566    margin-inline-start: var(--sl-spacing-x-small);
 1567  }
 1568
 1569  .dialog:not(.dialog--has-footer) .dialog__footer {
 1570    display: none;
 1571  }
 1572
 1573  .dialog__overlay {
 1574    position: fixed;
 1575    top: 0;
 1576    right: 0;
 1577    bottom: 0;
 1578    left: 0;
 1579    background-color: var(--sl-overlay-background-color);
 1580  }
 1581
 1582  @media (forced-colors: active) {
 1583    .dialog__panel {
 1584      border: solid 1px var(--sl-color-neutral-0);
 1585    }
 1586  }
 1587 `,wi=class extends Ht{constructor(){super(...arguments),this.hasSlotController=new ke(this,"footer"),this.localize=new Re(this),this.modal=new fi(this),this.open=!1,this.label="",this.noHeader=!1,th
 1588      <div
 1589        part="base"
 1590        class=${se({dialog:!0,"dialog--open":this.open,"dialog--has-footer":this.hasSlotController.test("footer")})}
 1591      >
 1592        <div part="overlay" class="dialog__overlay" @click=${()=>this.requestClose("overlay")} tabindex="-1"></div>
 1593
 1594        <div
 1595          part="panel"
 1596          class="dialog__panel"
 1597          role="dialog"
 1598          aria-modal="true"
 1599          aria-hidden=${this.open?"false":"true"}
 1600          aria-label=${de(this.noHeader?this.label:void 0)}
 1601          aria-labelledby=${de(this.noHeader?void 0:"title")}
 1602          tabindex="-1"
 1603        >
 1604          ${this.noHeader?"":V`
 1605                <header part="header" class="dialog__header">
 1606                  <h2 part="title" class="dialog__title" id="title">
 1607                    <slot name="label"> ${this.label.length>0?this.label:String.fromCharCode(65279)} </slot>
 1608                  </h2>
 1609                  <div part="header-actions" class="dialog__header-actions">
 1610                    <slot name="header-actions"></slot>
 1611                    <sl-icon-button
 1612                      part="close-button"
 1613                      exportparts="base:close-button__base"
 1614                      class="dialog__close"
 1615                      name="x-lg"
1616                      label=${this.localize.term("close")}
 1617                      library="system"
 1618                      @click="${()=>this.requestClose("close-button")}"
 1619                    ></sl-icon-button>
 1620                  </div>
 1621                </header>
 1622              `}
 1623          ${""}
 1624          <div part="body" class="dialog__body" tabindex="-1"><slot></slot></div>
 1625
 1626          <footer part="footer" class="dialog__footer">
 1627            <slot name="footer"></slot>
 1628          </footer>
 1629        </div>
 1630      </div>
 1631    `}};wi.styles=[Pt,yi],wi.dependencies={"sl-icon-button":he},At([Vt(".dialog")],wi.prototype,"dialog",2),At([Vt(".dialog__panel")],wi.prototype,"panel",2),At([Vt(".dialog__overlay")],wi.prototype
 1632  :host {
 1633    --color: var(--sl-panel-border-color);
 1634    --width: var(--sl-panel-border-width);
 1635    --spacing: var(--sl-spacing-medium);
 1636  }
 1637
 1638  :host(:not([vertical])) {
 1639    display: block;
 1640    border-top: solid var(--width) var(--color);
 1641    margin: var(--spacing) 0;
 1642  }
 1643
 1644  :host([vertical]) {
 1645    display: inline-block;
 1646    height: 100%;
 1647    border-left: solid var(--width) var(--color);
 1648    margin: 0 var(--spacing);
 1649  }
 1650 `,xi=class extends Ht{constructor(){super(...arguments),this.vertical=!1}connectedCallback(){super.connectedCallback(),this.setAttribute("role","separator")}handleVerticalChange(){this.setAttribute(
 1651  :host {
 1652    --size: 25rem;
 1653    --header-spacing: var(--sl-spacing-large);
 1654    --body-spacing: var(--sl-spacing-large);
 1655    --footer-spacing: var(--sl-spacing-large);
 1656
 1657    display: contents;
 1658  }
 1659
 1660  .drawer {
 1661    top: 0;
 1662    inset-inline-start: 0;
 1663    width: 100%;
 1664    height: 100%;
 1665    pointer-events: none;
 1666    overflow: hidden;
 1667  }
 1668
 1669  .drawer--contained {
 1670    position: absolute;
 1671    z-index: initial;
 1672  }
 1673
 1674  .drawer--fixed {
 1675    position: fixed;
 1676    z-index: var(--sl-z-index-drawer);
 1677  }
 1678
 1679  .drawer__panel {
 1680    position: absolute;
 1681    display: flex;
 1682    flex-direction: column;
 1683    z-index: 2;
 1684    max-width: 100%;
 1685    max-height: 100%;
 1686    background-color: var(--sl-panel-background-color);
 1687    box-shadow: var(--sl-shadow-x-large);
 1688    overflow: auto;
 1689    pointer-events: all;
 1690  }
 1691
 1692  .drawer__panel:focus {
 1693    outline: none;
 1694  }
 1695
 1696  .drawer--top .drawer__panel {
 1697    top: 0;
 1698    inset-inline-end: auto;
 1699    bottom: auto;
 1700    inset-inline-start: 0;
 1701    width: 100%;
 1702    height: var(--size);
 1703  }
 1704
 1705  .drawer--end .drawer__panel {
 1706    top: 0;
 1707    inset-inline-end: 0;
 1708    bottom: auto;
 1709    inset-inline-start: auto;
 1710    width: var(--size);
 1711    height: 100%;
 1712  }
 1713
 1714  .drawer--bottom .drawer__panel {
 1715    top: auto;
 1716    inset-inline-end: auto;
 1717    bottom: 0;
 1718    inset-inline-start: 0;
 1719    width: 100%;
 1720    height: var(--size);
 1721  }
 1722
 1723  .drawer--start .drawer__panel {
 1724    top: 0;
 1725    inset-inline-end: auto;
 1726    bottom: auto;
 1727    inset-inline-start: 0;
 1728    width: var(--size);
 1729    height: 100%;
 1730  }
 1731
 1732  .drawer__header {
 1733    display: flex;
 1734  }
 1735
 1736  .drawer__title {
 1737    flex: 1 1 auto;
 1738    font: inherit;
 1739    font-size: var(--sl-font-size-large);
 1740    line-height: var(--sl-line-height-dense);
 1741    padding: var(--header-spacing);
 1742    margin: 0;
 1743  }
 1744
 1745  .drawer__header-actions {
 1746    flex-shrink: 0;
 1747    display: flex;
 1748    flex-wrap: wrap;
 1749    justify-content: end;
 1750    gap: var(--sl-spacing-2x-small);
 1751    padding: 0 var(--header-spacing);
 1752  }
 1753
 1754  .drawer__header-actions sl-icon-button,
 1755  .drawer__header-actions ::slotted(sl-icon-button) {
 1756    flex: 0 0 auto;
 1757    display: flex;
 1758    align-items: center;
 1759    font-size: var(--sl-font-size-medium);
 1760  }
 1761
 1762  .drawer__body {
1763    flex: 1 1 auto;
 1764    display: block;
 1765    padding: var(--body-spacing);
 1766    overflow: auto;
 1767    -webkit-overflow-scrolling: touch;
 1768  }
 1769
 1770  .drawer__footer {
 1771    text-align: right;
 1772    padding: var(--footer-spacing);
 1773  }
 1774
 1775  .drawer__footer ::slotted(sl-button:not(:last-of-type)) {
 1776    margin-inline-end: var(--sl-spacing-x-small);
 1777  }
 1778
 1779  .drawer:not(.drawer--has-footer) .drawer__footer {
 1780    display: none;
 1781  }
 1782
 1783  .drawer__overlay {
 1784    display: block;
 1785    position: fixed;
 1786    top: 0;
 1787    right: 0;
 1788    bottom: 0;
 1789    left: 0;
 1790    background-color: var(--sl-overlay-background-color);
 1791    pointer-events: all;
 1792  }
 1793
 1794  .drawer--contained .drawer__overlay {
 1795    display: none;
 1796  }
 1797
 1798  @media (forced-colors: active) {
 1799    .drawer__panel {
 1800      border: solid 1px var(--sl-color-neutral-0);
 1801    }
 1802  }
 1803 `;function Ci(t){return t.charAt(0).toUpperCase()+t.slice(1)}var Si=class extends Ht{constructor(){super(...arguments),this.hasSlotController=new ke(this,"footer"),this.localize=new Re(this),this.mo
 1804      <div
 1805        part="base"
 1806        class=${se({drawer:!0,"drawer--open":this.open,"drawer--top":"top"===this.placement,"drawer--end":"end"===this.placement,"drawer--bottom":"bottom"===this.placement,"drawer--start":"start"===
 1807      >
 1808        <div part="overlay" class="drawer__overlay" @click=${()=>this.requestClose("overlay")} tabindex="-1"></div>
 1809
 1810        <div
 1811          part="panel"
 1812          class="drawer__panel"
 1813          role="dialog"
 1814          aria-modal="true"
 1815          aria-hidden=${this.open?"false":"true"}
 1816          aria-label=${de(this.noHeader?this.label:void 0)}
 1817          aria-labelledby=${de(this.noHeader?void 0:"title")}
 1818          tabindex="0"
 1819        >
 1820          ${this.noHeader?"":V`
 1821                <header part="header" class="drawer__header">
 1822                  <h2 part="title" class="drawer__title" id="title">
 1823                    <!-- If there's no label, use an invisible character to prevent the header from collapsing -->
 1824                    <slot name="label"> ${this.label.length>0?this.label:String.fromCharCode(65279)} </slot>
 1825                  </h2>
 1826                  <div part="header-actions" class="drawer__header-actions">
 1827                    <slot name="header-actions"></slot>
 1828                    <sl-icon-button
 1829                      part="close-button"
 1830                      exportparts="base:close-button__base"
 1831                      class="drawer__close"
 1832                      name="x-lg"
 1833                      label=${this.localize.term("close")}
 1834                      library="system"
 1835                      @click=${()=>this.requestClose("close-button")}
 1836                    ></sl-icon-button>
 1837                  </div>
 1838                </header>
 1839              `}
 1840
 1841          <slot part="body" class="drawer__body"></slot>
 1842
 1843          <footer part="footer" class="drawer__footer">
 1844            <slot name="footer"></slot>
 1845          </footer>
 1846        </div>
 1847      </div>
 1848    `}};Si.styles=[Pt,ki],Si.dependencies={"sl-icon-button":he},At([Vt(".drawer")],Si.prototype,"drawer",2),At([Vt(".drawer__panel")],Si.prototype,"panel",2),At([Vt(".drawer__overlay")],Si.prototype
 1849  :host {
 1850    display: inline-block;
 1851  }
 1852
 1853  .dropdown::part(popup) {
 1854    z-index: var(--sl-z-index-dropdown);
 1855  }
 1856
 1857  .dropdown[data-current-placement^='top']::part(popup) {
 1858    transform-origin: bottom;
 1859  }
 1860
 1861  .dropdown[data-current-placement^='bottom']::part(popup) {
 1862    transform-origin: top;
 1863  }
 1864
 1865  .dropdown[data-current-placement^='left']::part(popup) {
 1866    transform-origin: right;
 1867  }
 1868
 1869  .dropdown[data-current-placement^='right']::part(popup) {
 1870    transform-origin: left;
 1871  }
 1872
 1873  .dropdown__trigger {
 1874    display: block;
 1875  }
 1876
 1877  .dropdown__panel {
 1878    font-family: var(--sl-font-sans);
 1879    font-size: var(--sl-font-size-medium);
 1880    font-weight: var(--sl-font-weight-normal);
 1881    box-shadow: var(--sl-shadow-large);
 1882    border-radius: var(--sl-border-radius-medium);
 1883    pointer-events: none;
 1884  }
 1885
 1886  .dropdown--open .dropdown__panel {
 1887    display: block;
 1888    pointer-events: all;
 1889  }
 1890
 1891  /* When users slot a menu, make sure it conforms to the popup's auto-size */
 1892  ::slotted(sl-menu) {
 1893    max-width: var(--auto-size-available-width) !important;
 1894    max-height: var(--auto-size-available-height) !important;
 1895  }
 1896 `,Ei=a`
 1897  :host {
 1898    --arrow-color: var(--sl-color-neutral-1000);
 1899    --arrow-size: 6px;
 1900
 1901    /*
 1902     * These properties are computed to account for the arrow's dimensions after being rotated 45Âº. The constant
 1903     * 0.7071 is derived from sin(45), which is the diagonal size of the arrow's container after rotating.
 1904     */
 1905    --arrow-size-diagonal: calc(var(--arrow-size) * 0.7071);
 1906    --arrow-padding-offset: calc(var(--arrow-size-diagonal) - var(--arrow-size));
 1907
 1908    display: contents;
 1909  }
1910
 1911  .popup {
 1912    position: absolute;
 1913    isolation: isolate;
 1914    max-width: var(--auto-size-available-width, none);
 1915    max-height: var(--auto-size-available-height, none);
 1916  }
 1917
 1918  .popup--fixed {
 1919    position: fixed;
 1920  }
 1921
 1922  .popup:not(.popup--active) {
 1923    display: none;
 1924  }
 1925
 1926  .popup__arrow {
 1927    position: absolute;
 1928    width: calc(var(--arrow-size-diagonal) * 2);
 1929    height: calc(var(--arrow-size-diagonal) * 2);
 1930    rotate: 45deg;
 1931    background: var(--arrow-color);
 1932    z-index: -1;
 1933  }
 1934
 1935  /* Hover bridge */
 1936  .popup-hover-bridge:not(.popup-hover-bridge--visible) {
 1937    display: none;
 1938  }
 1939
 1940  .popup-hover-bridge {
 1941    position: fixed;
 1942    z-index: calc(var(--sl-z-index-dropdown) - 1);
 1943    top: 0;
 1944    right: 0;
 1945    bottom: 0;
 1946    left: 0;
 1947    clip-path: polygon(
 1948      var(--hover-bridge-top-left-x, 0) var(--hover-bridge-top-left-y, 0),
 1949      var(--hover-bridge-top-right-x, 0) var(--hover-bridge-top-right-y, 0),
 1950      var(--hover-bridge-bottom-right-x, 0) var(--hover-bridge-bottom-right-y, 0),
 1951      var(--hover-bridge-bottom-left-x, 0) var(--hover-bridge-bottom-left-y, 0)
 1952    );
 1953  }
 1954 `;const Ii=Math.min,Ti=Math.max,Ai=Math.round,Di=Math.floor,Oi=t=>({x:t,y:t}),zi={left:"right",right:"left",bottom:"top",top:"bottom"},Pi={start:"end",end:"start"};function Ri(t,e,i){return Ti(t,Ii(
 1955      <slot name="anchor" @slotchange=${this.handleAnchorChange}></slot>
 1956
 1957      <span
 1958        part="hover-bridge"
 1959        class=${se({"popup-hover-bridge":!0,"popup-hover-bridge--visible":this.hoverBridge&&this.active})}
 1960      ></span>
 1961
 1962      <div
 1963        part="popup"
 1964        class=${se({popup:!0,"popup--active":this.active,"popup--fixed":"fixed"===this.strategy,"popup--has-arrow":this.arrow})}
 1965      >
 1966        <slot></slot>
 1967        ${this.arrow?V`<div part="arrow" class="popup__arrow" role="presentation"></div>`:""}
 1968      </div>
 1969    `}};Br.styles=[Pt,Ei],At([Vt(".popup")],Br.prototype,"popup",2),At([Vt(".popup__arrow")],Br.prototype,"arrowEl",2),At([Mt()],Br.prototype,"anchor",2),At([Mt({type:Boolean,reflect:!0})],Br.protot
 1970      <sl-popup
 1971        part="base"
 1972        exportparts="popup:base__popup"
 1973        id="dropdown"
 1974        placement=${this.placement}
 1975        distance=${this.distance}
 1976        skidding=${this.skidding}
 1977        strategy=${this.hoist?"fixed":"absolute"}
 1978        flip
 1979        shift
 1980        auto-size="vertical"
 1981        auto-size-padding="10"
 1982        sync=${de(this.sync?this.sync:void 0)}
 1983        class=${se({dropdown:!0,"dropdown--open":this.open})}
 1984      >
 1985        <slot
 1986          name="trigger"
 1987          slot="anchor"
 1988          part="trigger"
 1989          class="dropdown__trigger"
 1990          @click=${this.handleTriggerClick}
 1991          @keydown=${this.handleTriggerKeyDown}
 1992          @keyup=${this.handleTriggerKeyUp}
 1993          @slotchange=${this.handleTriggerSlotChange}
 1994        ></slot>
 1995
 1996        <div aria-hidden=${this.open?"false":"true"} aria-labelledby="dropdown">
 1997          <slot part="panel" class="dropdown__panel"></slot>
 1998        </div>
 1999      </sl-popup>
 2000    `}};Ur.styles=[Pt,$i],Ur.dependencies={"sl-popup":Br},At([Vt(".dropdown")],Ur.prototype,"popup",2),At([Vt(".dropdown__trigger")],Ur.prototype,"trigger",2),At([Vt(".dropdown__panel")],Ur.prototyp
 2001  :host {
 2002    display: block;
 2003  }
 2004
 2005  .input {
 2006    flex: 1 1 auto;
 2007    display: inline-flex;
 2008    align-items: stretch;
 2009    justify-content: start;
 2010    position: relative;
 2011    width: 100%;
 2012    font-family: var(--sl-input-font-family);
 2013    font-weight: var(--sl-input-font-weight);
 2014    letter-spacing: var(--sl-input-letter-spacing);
 2015    vertical-align: middle;
 2016    overflow: hidden;
 2017    cursor: text;
 2018    transition:
 2019      var(--sl-transition-fast) color,
 2020      var(--sl-transition-fast) border,
 2021      var(--sl-transition-fast) box-shadow,
 2022      var(--sl-transition-fast) background-color;
 2023  }
 2024
 2025  /* Standard inputs */
 2026  .input--standard {
 2027    background-color: var(--sl-input-background-color);
 2028    border: solid var(--sl-input-border-width) var(--sl-input-border-color);
 2029  }
 2030
 2031  .input--standard:hover:not(.input--disabled) {
 2032    background-color: var(--sl-input-background-color-hover);
 2033    border-color: var(--sl-input-border-color-hover);
 2034  }
 2035
 2036  .input--standard.input--focused:not(.input--disabled) {
 2037    background-color: var(--sl-input-background-color-focus);
 2038    border-color: var(--sl-input-border-color-focus);
 2039    box-shadow: 0 0 0 var(--sl-focus-ring-width) var(--sl-input-focus-ring-color);
 2040  }
 2041
 2042  .input--standard.input--focused:not(.input--disabled) .input__control {
 2043    color: var(--sl-input-color-focus);
 2044  }
 2045
 2046  .input--standard.input--disabled {
 2047    background-color: var(--sl-input-background-color-disabled);
 2048    border-color: var(--sl-input-border-color-disabled);
 2049    opacity: 0.5;
 2050    cursor: not-allowed;
 2051  }
 2052
 2053  .input--standard.input--disabled .input__control {
 2054    color: var(--sl-input-color-disabled);
 2055  }
 2056
2057  .input--standard.input--disabled .input__control::placeholder {
 2058    color: var(--sl-input-placeholder-color-disabled);
 2059  }
 2060
 2061  /* Filled inputs */
 2062  .input--filled {
 2063    border: none;
 2064    background-color: var(--sl-input-filled-background-color);
 2065    color: var(--sl-input-color);
 2066  }
 2067
 2068  .input--filled:hover:not(.input--disabled) {
 2069    background-color: var(--sl-input-filled-background-color-hover);
 2070  }
 2071
 2072  .input--filled.input--focused:not(.input--disabled) {
 2073    background-color: var(--sl-input-filled-background-color-focus);
 2074    outline: var(--sl-focus-ring);
 2075    outline-offset: var(--sl-focus-ring-offset);
 2076  }
 2077
 2078  .input--filled.input--disabled {
 2079    background-color: var(--sl-input-filled-background-color-disabled);
 2080    opacity: 0.5;
 2081    cursor: not-allowed;
 2082  }
 2083
 2084  .input__control {
 2085    flex: 1 1 auto;
 2086    font-family: inherit;
 2087    font-size: inherit;
 2088    font-weight: inherit;
 2089    min-width: 0;
 2090    height: 100%;
 2091    color: var(--sl-input-color);
 2092    border: none;
 2093    background: inherit;
 2094    box-shadow: none;
 2095    padding: 0;
 2096    margin: 0;
 2097    cursor: inherit;
 2098    -webkit-appearance: none;
 2099  }
 2100
 2101  .input__control::-webkit-search-decoration,
 2102  .input__control::-webkit-search-cancel-button,
 2103  .input__control::-webkit-search-results-button,
 2104  .input__control::-webkit-search-results-decoration {
 2105    -webkit-appearance: none;
 2106  }
 2107
 2108  .input__control:-webkit-autofill,
 2109  .input__control:-webkit-autofill:hover,
 2110  .input__control:-webkit-autofill:focus,
 2111  .input__control:-webkit-autofill:active {
 2112    box-shadow: 0 0 0 var(--sl-input-height-large) var(--sl-input-background-color-hover) inset !important;
 2113    -webkit-text-fill-color: var(--sl-color-primary-500);
 2114    caret-color: var(--sl-input-color);
 2115  }
 2116
 2117  .input--filled .input__control:-webkit-autofill,
 2118  .input--filled .input__control:-webkit-autofill:hover,
 2119  .input--filled .input__control:-webkit-autofill:focus,
 2120  .input--filled .input__control:-webkit-autofill:active {
 2121    box-shadow: 0 0 0 var(--sl-input-height-large) var(--sl-input-filled-background-color) inset !important;
 2122  }
 2123
 2124  .input__control::placeholder {
 2125    color: var(--sl-input-placeholder-color);
 2126    user-select: none;
 2127    -webkit-user-select: none;
 2128  }
 2129
 2130  .input:hover:not(.input--disabled) .input__control {
 2131    color: var(--sl-input-color-hover);
 2132  }
 2133
 2134  .input__control:focus {
 2135    outline: none;
 2136  }
 2137
 2138  .input__prefix,
 2139  .input__suffix {
 2140    display: inline-flex;
 2141    flex: 0 0 auto;
 2142    align-items: center;
 2143    cursor: default;
 2144  }
 2145
 2146  .input__prefix ::slotted(sl-icon),
 2147  .input__suffix ::slotted(sl-icon) {
 2148    color: var(--sl-input-icon-color);
 2149  }
 2150
 2151  /*
 2152   * Size modifiers
 2153   */
 2154
 2155  .input--small {
 2156    border-radius: var(--sl-input-border-radius-small);
 2157    font-size: var(--sl-input-font-size-small);
 2158    height: var(--sl-input-height-small);
 2159  }
 2160
 2161  .input--small .input__control {
 2162    height: calc(var(--sl-input-height-small) - var(--sl-input-border-width) * 2);
 2163    padding: 0 var(--sl-input-spacing-small);
 2164  }
 2165
 2166  .input--small .input__clear,
 2167  .input--small .input__password-toggle {
 2168    width: calc(1em + var(--sl-input-spacing-small) * 2);
 2169  }
 2170
 2171  .input--small .input__prefix ::slotted(*) {
 2172    margin-inline-start: var(--sl-input-spacing-small);
 2173  }
 2174
 2175  .input--small .input__suffix ::slotted(*) {
 2176    margin-inline-end: var(--sl-input-spacing-small);
 2177  }
 2178
 2179  .input--medium {
 2180    border-radius: var(--sl-input-border-radius-medium);
 2181    font-size: var(--sl-input-font-size-medium);
 2182    height: var(--sl-input-height-medium);
 2183  }
 2184
 2185  .input--medium .input__control {
 2186    height: calc(var(--sl-input-height-medium) - var(--sl-input-border-width) * 2);
 2187    padding: 0 var(--sl-input-spacing-medium);
 2188  }
 2189
 2190  .input--medium .input__clear,
 2191  .input--medium .input__password-toggle {
 2192    width: calc(1em + var(--sl-input-spacing-medium) * 2);
 2193  }
 2194
 2195  .input--medium .input__prefix ::slotted(*) {
 2196    margin-inline-start: var(--sl-input-spacing-medium);
 2197  }
 2198
 2199  .input--medium .input__suffix ::slotted(*) {
 2200    margin-inline-end: var(--sl-input-spacing-medium);
 2201  }
 2202
 2203  .input--large {
2204    border-radius: var(--sl-input-border-radius-large);
 2205    font-size: var(--sl-input-font-size-large);
 2206    height: var(--sl-input-height-large);
 2207  }
 2208
 2209  .input--large .input__control {
 2210    height: calc(var(--sl-input-height-large) - var(--sl-input-border-width) * 2);
 2211    padding: 0 var(--sl-input-spacing-large);
 2212  }
 2213
 2214  .input--large .input__clear,
 2215  .input--large .input__password-toggle {
 2216    width: calc(1em + var(--sl-input-spacing-large) * 2);
 2217  }
 2218
 2219  .input--large .input__prefix ::slotted(*) {
 2220    margin-inline-start: var(--sl-input-spacing-large);
 2221  }
 2222
 2223  .input--large .input__suffix ::slotted(*) {
 2224    margin-inline-end: var(--sl-input-spacing-large);
 2225  }
 2226
 2227  /*
 2228   * Pill modifier
 2229   */
 2230
 2231  .input--pill.input--small {
 2232    border-radius: var(--sl-input-height-small);
 2233  }
 2234
 2235  .input--pill.input--medium {
 2236    border-radius: var(--sl-input-height-medium);
 2237  }
 2238
 2239  .input--pill.input--large {
 2240    border-radius: var(--sl-input-height-large);
 2241  }
 2242
 2243  /*
 2244   * Clearable + Password Toggle
 2245   */
 2246
 2247  .input__clear,
 2248  .input__password-toggle {
 2249    display: inline-flex;
 2250    align-items: center;
 2251    justify-content: center;
 2252    font-size: inherit;
 2253    color: var(--sl-input-icon-color);
 2254    border: none;
 2255    background: none;
 2256    padding: 0;
 2257    transition: var(--sl-transition-fast) color;
 2258    cursor: pointer;
 2259  }
 2260
 2261  .input__clear:hover,
 2262  .input__password-toggle:hover {
 2263    color: var(--sl-input-icon-color-hover);
 2264  }
 2265
 2266  .input__clear:focus,
 2267  .input__password-toggle:focus {
 2268    outline: none;
 2269  }
 2270
 2271  /* Don't show the browser's password toggle in Edge */
 2272  ::-ms-reveal {
 2273    display: none;
 2274  }
 2275
 2276  /* Hide the built-in number spinner */
 2277  .input--no-spin-buttons input[type='number']::-webkit-outer-spin-button,
 2278  .input--no-spin-buttons input[type='number']::-webkit-inner-spin-button {
 2279    -webkit-appearance: none;
 2280    display: none;
 2281  }
 2282
 2283  .input--no-spin-buttons input[type='number'] {
 2284    -moz-appearance: textfield;
 2285  }
 2286 `,Hr=class extends Ht{constructor(){super(...arguments),this.formControlController=new qe(this,{assumeInteractionOn:["sl-blur","sl-input"]}),this.hasSlotController=new ke(this,"help-text","label"),t
 2287      <div
 2288        part="form-control"
 2289        class=${se({"form-control":!0,"form-control--small":"small"===this.size,"form-control--medium":"medium"===this.size,"form-control--large":"large"===this.size,"form-control--has-label":i,"for
 2290      >
 2291        <label
 2292          part="form-control-label"
 2293          class="form-control__label"
 2294          for="input"
 2295          aria-hidden=${i?"false":"true"}
 2296        >
 2297          <slot name="label">${this.label}</slot>
 2298        </label>
 2299
 2300        <div part="form-control-input" class="form-control-input">
 2301          <div
 2302            part="base"
 2303            class=${se({input:!0,"input--small":"small"===this.size,"input--medium":"medium"===this.size,"input--large":"large"===this.size,"input--pill":this.pill,"input--standard":!this.filled,"in
 2304          >
 2305            <span part="prefix" class="input__prefix">
 2306              <slot name="prefix"></slot>
 2307            </span>
 2308
 2309            <input
 2310              part="input"
 2311              id="input"
 2312              class="input__control"
 2313              type=${"password"===this.type&&this.passwordVisible?"text":this.type}
 2314              title=${this.title}
 2315              name=${de(this.name)}
 2316              ?disabled=${this.disabled}
 2317              ?readonly=${this.readonly}
 2318              ?required=${this.required}
 2319              placeholder=${de(this.placeholder)}
 2320              minlength=${de(this.minlength)}
 2321              maxlength=${de(this.maxlength)}
 2322              min=${de(this.min)}
 2323              max=${de(this.max)}
 2324              step=${de(this.step)}
 2325              .value=${ri(this.value)}
 2326              autocapitalize=${de(this.autocapitalize)}
 2327              autocomplete=${de(this.autocomplete)}
 2328              autocorrect=${de(this.autocorrect)}
 2329              ?autofocus=${this.autofocus}
 2330              spellcheck=${this.spellcheck}
 2331              pattern=${de(this.pattern)}
 2332              enterkeyhint=${de(this.enterkeyhint)}
 2333              inputmode=${de(this.inputmode)}
 2334              aria-describedby="help-text"
 2335              @change=${this.handleChange}
 2336              @input=${this.handleInput}
 2337              @invalid=${this.handleInvalid}
 2338              @keydown=${this.handleKeyDown}
 2339              @focus=${this.handleFocus}
 2340              @blur=${this.handleBlur}
 2341            />
 2342
 2343            ${s?V`
 2344                  <button
 2345                    part="clear-button"
 2346                    class="input__clear"
 2347                    type="button"
 2348                    aria-label=${this.localize.term("clearEntry")}
 2349                    @click=${this.handleClearClick}
 2350                    tabindex="-1"
2351                  >
 2352                    <slot name="clear-icon">
 2353                      <sl-icon name="x-circle-fill" library="system"></sl-icon>
 2354                    </slot>
 2355                  </button>
 2356                `:""}
 2357            ${this.passwordToggle&&!this.disabled?V`
 2358                  <button
 2359                    part="password-toggle-button"
 2360                    class="input__password-toggle"
 2361                    type="button"
 2362                    aria-label=${this.localize.term(this.passwordVisible?"hidePassword":"showPassword")}
 2363                    @click=${this.handlePasswordToggle}
 2364                    tabindex="-1"
 2365                  >
 2366                    ${this.passwordVisible?V`
 2367                          <slot name="show-password-icon">
 2368                            <sl-icon name="eye-slash" library="system"></sl-icon>
 2369                          </slot>
 2370                        `:V`
 2371                          <slot name="hide-password-icon">
 2372                            <sl-icon name="eye" library="system"></sl-icon>
 2373                          </slot>
 2374                        `}
 2375                  </button>
 2376                `:""}
 2377
 2378            <span part="suffix" class="input__suffix">
 2379              <slot name="suffix"></slot>
 2380            </span>
 2381          </div>
 2382        </div>
 2383
 2384        <div
 2385          part="form-control-help-text"
 2386          id="help-text"
 2387          class="form-control__help-text"
 2388          aria-hidden=${r?"false":"true"}
 2389        >
 2390          <slot name="help-text">${this.helpText}</slot>
 2391        </div>
 2392      </div>
 2393    `}};Hr.styles=[Pt,ii,jr],Hr.dependencies={"sl-icon":Jt},At([Vt(".input__control")],Hr.prototype,"input",2),At([Nt()],Hr.prototype,"hasFocus",2),At([Mt()],Hr.prototype,"title",2),At([Mt({reflect:
 2394  :host {
 2395    display: block;
 2396    position: relative;
 2397    background: var(--sl-panel-background-color);
 2398    border: solid var(--sl-panel-border-width) var(--sl-panel-border-color);
 2399    border-radius: var(--sl-border-radius-medium);
 2400    padding: var(--sl-spacing-x-small) 0;
 2401    overflow: auto;
 2402    overscroll-behavior: none;
 2403  }
 2404
 2405  ::slotted(sl-divider) {
 2406    --spacing: var(--sl-spacing-x-small);
 2407  }
 2408 `,qr=class extends Ht{connectedCallback(){super.connectedCallback(),this.setAttribute("role","menu")}handleClick(t){const e=["menuitem","menuitemcheckbox"],i=t.composedPath(),r=i.find((t=>{var i;ret
 2409      <slot
 2410        @slotchange=${this.handleSlotChange}
 2411        @click=${this.handleClick}
 2412        @keydown=${this.handleKeyDown}
 2413        @mousedown=${this.handleMouseDown}
 2414      ></slot>
 2415    `}};qr.styles=[Pt,Wr],At([Vt("slot")],qr.prototype,"defaultSlot",2),qr.define("sl-menu");var Kr=a`
 2416  :host {
 2417    --submenu-offset: -2px;
 2418
 2419    display: block;
 2420  }
 2421
 2422  :host([inert]) {
 2423    display: none;
 2424  }
 2425
 2426  .menu-item {
 2427    position: relative;
 2428    display: flex;
 2429    align-items: stretch;
 2430    font-family: var(--sl-font-sans);
 2431    font-size: var(--sl-font-size-medium);
 2432    font-weight: var(--sl-font-weight-normal);
 2433    line-height: var(--sl-line-height-normal);
 2434    letter-spacing: var(--sl-letter-spacing-normal);
 2435    color: var(--sl-color-neutral-700);
 2436    padding: var(--sl-spacing-2x-small) var(--sl-spacing-2x-small);
 2437    transition: var(--sl-transition-fast) fill;
 2438    user-select: none;
 2439    -webkit-user-select: none;
 2440    white-space: nowrap;
 2441    cursor: pointer;
 2442  }
 2443
 2444  .menu-item.menu-item--disabled {
 2445    outline: none;
 2446    opacity: 0.5;
 2447    cursor: not-allowed;
 2448  }
 2449
 2450  .menu-item.menu-item--loading {
 2451    outline: none;
 2452    cursor: wait;
 2453  }
 2454
 2455  .menu-item.menu-item--loading *:not(sl-spinner) {
 2456    opacity: 0.5;
 2457  }
 2458
 2459  .menu-item--loading sl-spinner {
 2460    --indicator-color: currentColor;
 2461    --track-width: 1px;
 2462    position: absolute;
 2463    font-size: 0.75em;
 2464    top: calc(50% - 0.5em);
 2465    left: 0.65rem;
 2466    opacity: 1;
 2467  }
 2468
 2469  .menu-item .menu-item__label {
 2470    flex: 1 1 auto;
 2471    display: inline-block;
 2472    text-overflow: ellipsis;
 2473    overflow: hidden;
 2474  }
 2475
 2476  .menu-item .menu-item__prefix {
 2477    flex: 0 0 auto;
 2478    display: flex;
 2479    align-items: center;
 2480  }
 2481
 2482  .menu-item .menu-item__prefix::slotted(*) {
 2483    margin-inline-end: var(--sl-spacing-x-small);
 2484  }
 2485
 2486  .menu-item .menu-item__suffix {
 2487    flex: 0 0 auto;
 2488    display: flex;
 2489    align-items: center;
 2490  }
 2491
 2492  .menu-item .menu-item__suffix::slotted(*) {
 2493    margin-inline-start: var(--sl-spacing-x-small);
 2494  }
 2495
 2496  /* Safe triangle */
 2497  .menu-item--submenu-expanded::after {
2498    content: '';
 2499    position: fixed;
 2500    z-index: calc(var(--sl-z-index-dropdown) - 1);
 2501    top: 0;
 2502    right: 0;
 2503    bottom: 0;
 2504    left: 0;
 2505    clip-path: polygon(
 2506      var(--safe-triangle-cursor-x, 0) var(--safe-triangle-cursor-y, 0),
 2507      var(--safe-triangle-submenu-start-x, 0) var(--safe-triangle-submenu-start-y, 0),
 2508      var(--safe-triangle-submenu-end-x, 0) var(--safe-triangle-submenu-end-y, 0)
 2509    );
 2510  }
 2511
 2512  :host(:focus-visible) {
 2513    outline: none;
 2514  }
 2515
 2516  :host(:hover:not([aria-disabled='true'], :focus-visible)) .menu-item,
 2517  .menu-item--submenu-expanded {
 2518    background-color: var(--sl-color-neutral-100);
 2519    color: var(--sl-color-neutral-1000);
 2520  }
 2521
 2522  :host(:focus-visible) .menu-item {
 2523    outline: none;
 2524    background-color: var(--sl-color-primary-600);
 2525    color: var(--sl-color-neutral-0);
 2526    opacity: 1;
 2527  }
 2528
 2529  .menu-item .menu-item__check,
 2530  .menu-item .menu-item__chevron {
 2531    flex: 0 0 auto;
 2532    display: flex;
 2533    align-items: center;
 2534    justify-content: center;
 2535    width: 1.5em;
 2536    visibility: hidden;
 2537  }
 2538
 2539  .menu-item--checked .menu-item__check,
 2540  .menu-item--has-submenu .menu-item__chevron {
 2541    visibility: visible;
 2542  }
 2543
 2544  /* Add elevation and z-index to submenus */
 2545  sl-popup::part(popup) {
 2546    box-shadow: var(--sl-shadow-large);
 2547    z-index: var(--sl-z-index-dropdown);
 2548    margin-left: var(--submenu-offset);
 2549  }
 2550
 2551  .menu-item--rtl sl-popup::part(popup) {
 2552    margin-left: calc(-1 * var(--submenu-offset));
 2553  }
 2554
 2555  @media (forced-colors: active) {
 2556    :host(:hover:not([aria-disabled='true'])) .menu-item,
 2557    :host(:focus-visible) .menu-item {
 2558      outline: dashed 1px SelectedItem;
 2559      outline-offset: -1px;
 2560    }
 2561  }
 2562
 2563  ::slotted(sl-menu) {
 2564    max-width: var(--auto-size-available-width) !important;
 2565    max-height: var(--auto-size-available-height) !important;
 2566  }
 2567 `
 2568 /**
 2569 * @license
 2570 * Copyright 2017 Google LLC
 2571 * SPDX-License-Identifier: BSD-3-Clause
 2572 */;const Gr=(t,e)=>{const i=t._$AN;if(void 0===i)return!1;for(const t of i)t._$AO?.(e,!1),Gr(t,e);return!0},Yr=t=>{let e,i;do{if(void 0===(e=t._$AM))break;i=e._$AN,i.delete(t),t=e}while(0===i?.size
 2573 /**
 2574 * @license
 2575 * Copyright 2020 Google LLC
 2576 * SPDX-License-Identifier: BSD-3-Clause
 2577 */const es=()=>new is;let is=class{};const rs=new WeakMap,ss=ie(class extends ts{render(t){return H}update(t,[e]){const i=e!==this.Y;return i&&void 0!==this.Y&&this.rt(void 0),(i||this.lt!==this.ct
 2578      <sl-popup
 2579        ${ss(this.popupRef)}
 2580        placement=${t?"left-start":"right-start"}
 2581        anchor="anchor"
 2582        flip
 2583        flip-fallback-strategy="best-fit"
 2584        skidding="${this.skidding}"
 2585        strategy="fixed"
 2586        auto-size="vertical"
 2587        auto-size-padding="10"
 2588      >
 2589        <slot name="submenu"></slot>
 2590      </sl-popup>
 2591    `:V` <slot name="submenu" hidden></slot> `}},as=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.type="normal",this.checked=!1,this.value="",this.loading=!1,thi
 2592      <div
 2593        id="anchor"
 2594        part="base"
 2595        class=${se({"menu-item":!0,"menu-item--rtl":t,"menu-item--checked":this.checked,"menu-item--disabled":this.disabled,"menu-item--loading":this.loading,"menu-item--has-submenu":this.isSubmenu(
 2596        ?aria-haspopup="${this.isSubmenu()}"
 2597        ?aria-expanded="${!!e}"
 2598      >
 2599        <span part="checked-icon" class="menu-item__check">
 2600          <sl-icon name="check" library="system" aria-hidden="true"></sl-icon>
 2601        </span>
 2602
 2603        <slot name="prefix" part="prefix" class="menu-item__prefix"></slot>
 2604
 2605        <slot part="label" class="menu-item__label" @slotchange=${this.handleDefaultSlotChange}></slot>
 2606
 2607        <slot name="suffix" part="suffix" class="menu-item__suffix"></slot>
 2608
 2609        <span part="submenu-icon" class="menu-item__chevron">
 2610          <sl-icon name=${t?"chevron-left":"chevron-right"} library="system" aria-hidden="true"></sl-icon>
 2611        </span>
 2612
 2613        ${this.submenuController.renderSubmenu()}
 2614        ${this.loading?V` <sl-spinner part="spinner" exportparts="base:spinner__base"></sl-spinner> `:""}
 2615      </div>
 2616    `}};as.styles=[Pt,Kr],as.dependencies={"sl-icon":Jt,"sl-popup":Br,"sl-spinner":Be},At([Vt("slot:not([name])")],as.prototype,"defaultSlot",2),At([Vt(".menu-item")],as.prototype,"menuItem",2),At([
 2617  :host {
 2618    display: block;
 2619    user-select: none;
 2620    -webkit-user-select: none;
 2621  }
 2622
 2623  :host(:focus) {
 2624    outline: none;
 2625  }
 2626
 2627  .option {
 2628    position: relative;
 2629    display: flex;
 2630    align-items: center;
 2631    font-family: var(--sl-font-sans);
 2632    font-size: var(--sl-font-size-medium);
 2633    font-weight: var(--sl-font-weight-normal);
 2634    line-height: var(--sl-line-height-normal);
 2635    letter-spacing: var(--sl-letter-spacing-normal);
 2636    color: var(--sl-color-neutral-700);
 2637    padding: var(--sl-spacing-x-small) var(--sl-spacing-medium) var(--sl-spacing-x-small) var(--sl-spacing-x-small);
 2638    transition: var(--sl-transition-fast) fill;
 2639    cursor: pointer;
 2640  }
 2641
 2642  .option--hover:not(.option--current):not(.option--disabled) {
 2643    background-color: var(--sl-color-neutral-100);
 2644    color: var(--sl-color-neutral-1000);
2645  }
 2646
 2647  .option--current,
 2648  .option--current.option--disabled {
 2649    background-color: var(--sl-color-primary-600);
 2650    color: var(--sl-color-neutral-0);
 2651    opacity: 1;
 2652  }
 2653
 2654  .option--disabled {
 2655    outline: none;
 2656    opacity: 0.5;
 2657    cursor: not-allowed;
 2658  }
 2659
 2660  .option__label {
 2661    flex: 1 1 auto;
 2662    display: inline-block;
 2663    line-height: var(--sl-line-height-dense);
 2664  }
 2665
 2666  .option .option__check {
 2667    flex: 0 0 auto;
 2668    display: flex;
 2669    align-items: center;
 2670    justify-content: center;
 2671    visibility: hidden;
 2672    padding-inline-end: var(--sl-spacing-2x-small);
 2673  }
 2674
 2675  .option--selected .option__check {
 2676    visibility: visible;
 2677  }
 2678
 2679  .option__prefix,
 2680  .option__suffix {
 2681    flex: 0 0 auto;
 2682    display: flex;
 2683    align-items: center;
 2684  }
 2685
 2686  .option__prefix::slotted(*) {
 2687    margin-inline-end: var(--sl-spacing-x-small);
 2688  }
 2689
 2690  .option__suffix::slotted(*) {
 2691    margin-inline-start: var(--sl-spacing-x-small);
 2692  }
 2693
 2694  @media (forced-colors: active) {
 2695    :host(:hover:not([aria-disabled='true'])) .option {
 2696      outline: dashed 1px SelectedItem;
 2697      outline-offset: -1px;
 2698    }
 2699  }
 2700 `,ls=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.isInitialized=!1,this.current=!1,this.selected=!1,this.hasHover=!1,this.value="",this.disabled=!1}connectedCal
 2701      <div
 2702        part="base"
 2703        class=${se({option:!0,"option--current":this.current,"option--disabled":this.disabled,"option--selected":this.selected,"option--hover":this.hasHover})}
 2704        @mouseenter=${this.handleMouseEnter}
 2705        @mouseleave=${this.handleMouseLeave}
 2706      >
 2707        <sl-icon part="checked-icon" class="option__check" name="check" library="system" aria-hidden="true"></sl-icon>
 2708        <slot part="prefix" name="prefix" class="option__prefix"></slot>
 2709        <slot part="label" class="option__label" @slotchange=${this.handleDefaultSlotChange}></slot>
 2710        <slot part="suffix" name="suffix" class="option__suffix"></slot>
 2711      </div>
 2712    `}};ls.styles=[Pt,ns],ls.dependencies={"sl-icon":Jt},At([Vt(".option__label")],ls.prototype,"defaultSlot",2),At([Nt()],ls.prototype,"current",2),At([Nt()],ls.prototype,"selected",2),At([Nt()],ls
 2713  ${Xe}
 2714
 2715  .button__prefix,
 2716  .button__suffix,
 2717  .button__label {
 2718    display: inline-flex;
 2719    position: relative;
 2720    align-items: center;
 2721  }
 2722
 2723  /* We use a hidden input so constraint validation errors work, since they don't appear to show when used with buttons.
 2724    We can't actually hide it, though, otherwise the messages will be suppressed by the browser. */
 2725  .hidden-input {
 2726    all: unset;
 2727    position: absolute;
 2728    top: 0;
 2729    left: 0;
 2730    bottom: 0;
 2731    right: 0;
 2732    outline: dotted 1px red;
 2733    opacity: 0;
 2734    z-index: -1;
 2735  }
 2736 `,ds=class extends Ht{constructor(){super(...arguments),this.hasSlotController=new ke(this,"[default]","prefix","suffix"),this.hasFocus=!1,this.checked=!1,this.disabled=!1,this.size="medium",this.pi
 2737      <div part="base" role="presentation">
 2738        <button
 2739          part="${"button"+(this.checked?" button--checked":"")}"
 2740          role="radio"
 2741          aria-checked="${this.checked}"
 2742          class=${se({button:!0,"button--default":!0,"button--small":"small"===this.size,"button--medium":"medium"===this.size,"button--large":"large"===this.size,"button--checked":this.checked,"but
 2743          aria-disabled=${this.disabled}
 2744          type="button"
 2745          value=${de(this.value)}
 2746          @blur=${this.handleBlur}
 2747          @focus=${this.handleFocus}
 2748          @click=${this.handleClick}
 2749        >
 2750          <slot name="prefix" part="prefix" class="button__prefix"></slot>
 2751          <slot part="label" class="button__label"></slot>
 2752          <slot name="suffix" part="suffix" class="button__suffix"></slot>
 2753        </button>
 2754      </div>
 2755    `}};ds.styles=[Pt,cs],At([Vt(".button")],ds.prototype,"input",2),At([Vt(".hidden-input")],ds.prototype,"hiddenInput",2),At([Nt()],ds.prototype,"hasFocus",2),At([Mt({type:Boolean,reflect:!0})],ds
 2756  :host {
 2757    display: block;
 2758  }
 2759
 2760  .form-control {
 2761    position: relative;
 2762    border: none;
 2763    padding: 0;
 2764    margin: 0;
 2765  }
 2766
 2767  .form-control__label {
 2768    padding: 0;
 2769  }
 2770
 2771  .radio-group--required .radio-group__label::after {
 2772    content: var(--sl-input-required-content);
 2773    margin-inline-start: var(--sl-input-required-content-offset);
 2774  }
 2775
 2776  .visually-hidden {
 2777    position: absolute;
 2778    width: 1px;
 2779    height: 1px;
 2780    padding: 0;
 2781    margin: -1px;
 2782    overflow: hidden;
 2783    clip: rect(0, 0, 0, 0);
 2784    white-space: nowrap;
 2785    border: 0;
 2786  }
 2787 `,us=a`
 2788  :host {
 2789    display: inline-block;
 2790  }
 2791
2792  .button-group {
 2793    display: flex;
 2794    flex-wrap: nowrap;
 2795  }
 2796 `,ps=class extends Ht{constructor(){super(...arguments),this.disableRole=!1,this.label=""}handleFocus(t){const e=fs(t.target);null==e||e.toggleAttribute("data-sl-button-group__button--focus",!0)}han
 2797      <div
 2798        part="base"
 2799        class="button-group"
 2800        role="${this.disableRole?"presentation":"group"}"
 2801        aria-label=${this.label}
 2802        @focusout=${this.handleBlur}
 2803        @focusin=${this.handleFocus}
 2804        @mouseover=${this.handleMouseOver}
 2805        @mouseout=${this.handleMouseOut}
 2806      >
 2807        <slot @slotchange=${this.handleSlotChange}></slot>
 2808      </div>
 2809    `}};function fs(t){var e;const i="sl-button, sl-radio-button";return null!=(e=t.closest(i))?e:t.querySelector(i)}ps.styles=[Pt,us],At([Vt("slot")],ps.prototype,"defaultSlot",2),At([Nt()],ps.prot
 2810      <slot @slotchange=${this.syncRadios} @click=${this.handleRadioClick} @keydown=${this.handleKeyDown}></slot>
 2811    `;return V`
 2812      <fieldset
 2813        part="form-control"
 2814        class=${se({"form-control":!0,"form-control--small":"small"===this.size,"form-control--medium":"medium"===this.size,"form-control--large":"large"===this.size,"form-control--radio-group":!0,"
 2815        role="radiogroup"
 2816        aria-labelledby="label"
 2817        aria-describedby="help-text"
 2818        aria-errormessage="error-message"
 2819      >
 2820        <label
 2821          part="form-control-label"
 2822          id="label"
 2823          class="form-control__label"
 2824          aria-hidden=${i?"false":"true"}
 2825          @click=${this.handleLabelClick}
 2826        >
 2827          <slot name="label">${this.label}</slot>
 2828        </label>
 2829
 2830        <div part="form-control-input" class="form-control-input">
 2831          <div class="visually-hidden">
 2832            <div id="error-message" aria-live="assertive">${this.errorMessage}</div>
 2833            <label class="radio-group__validation">
 2834              <input
 2835                type="text"
 2836                class="radio-group__validation-input"
 2837                ?required=${this.required}
 2838                tabindex="-1"
 2839                hidden
 2840                @invalid=${this.handleInvalid}
 2841              />
 2842            </label>
 2843          </div>
 2844
 2845          ${this.hasButtonGroup?V`
 2846                <sl-button-group part="button-group" exportparts="base:button-group__base" role="presentation">
 2847                  ${s}
 2848                </sl-button-group>
 2849              `:s}
 2850        </div>
 2851
 2852        <div
 2853          part="form-control-help-text"
 2854          id="help-text"
 2855          class="form-control__help-text"
 2856          aria-hidden=${r?"false":"true"}
 2857        >
 2858          <slot name="help-text">${this.helpText}</slot>
 2859        </div>
 2860      </fieldset>
 2861    `}};ms.styles=[Pt,ii,hs],ms.dependencies={"sl-button-group":ps},At([Vt("slot:not([name])")],ms.prototype,"defaultSlot",2),At([Vt(".radio-group__validation-input")],ms.prototype,"validationInput"
 2862  :host {
 2863    display: inline-block;
 2864  }
 2865
 2866  .tag {
 2867    display: flex;
 2868    align-items: center;
 2869    border: solid 1px;
 2870    line-height: 1;
 2871    white-space: nowrap;
 2872    user-select: none;
 2873    -webkit-user-select: none;
 2874  }
 2875
 2876  .tag__remove::part(base) {
 2877    color: inherit;
 2878    padding: 0;
 2879  }
 2880
 2881  /*
 2882   * Variant modifiers
 2883   */
 2884
 2885  .tag--primary {
 2886    background-color: var(--sl-color-primary-50);
 2887    border-color: var(--sl-color-primary-200);
 2888    color: var(--sl-color-primary-800);
 2889  }
 2890
 2891  .tag--primary:active > sl-icon-button {
 2892    color: var(--sl-color-primary-600);
 2893  }
 2894
 2895  .tag--success {
 2896    background-color: var(--sl-color-success-50);
 2897    border-color: var(--sl-color-success-200);
 2898    color: var(--sl-color-success-800);
 2899  }
 2900
 2901  .tag--success:active > sl-icon-button {
 2902    color: var(--sl-color-success-600);
 2903  }
 2904
 2905  .tag--neutral {
 2906    background-color: var(--sl-color-neutral-50);
 2907    border-color: var(--sl-color-neutral-200);
 2908    color: var(--sl-color-neutral-800);
 2909  }
 2910
 2911  .tag--neutral:active > sl-icon-button {
 2912    color: var(--sl-color-neutral-600);
 2913  }
 2914
 2915  .tag--warning {
 2916    background-color: var(--sl-color-warning-50);
 2917    border-color: var(--sl-color-warning-200);
 2918    color: var(--sl-color-warning-800);
 2919  }
 2920
 2921  .tag--warning:active > sl-icon-button {
 2922    color: var(--sl-color-warning-600);
 2923  }
 2924
 2925  .tag--danger {
 2926    background-color: var(--sl-color-danger-50);
 2927    border-color: var(--sl-color-danger-200);
 2928    color: var(--sl-color-danger-800);
 2929  }
 2930
 2931  .tag--danger:active > sl-icon-button {
 2932    color: var(--sl-color-danger-600);
 2933  }
 2934
 2935  /*
 2936   * Size modifiers
 2937   */
 2938
2939  .tag--small {
 2940    font-size: var(--sl-button-font-size-small);
 2941    height: calc(var(--sl-input-height-small) * 0.8);
 2942    line-height: calc(var(--sl-input-height-small) - var(--sl-input-border-width) * 2);
 2943    border-radius: var(--sl-input-border-radius-small);
 2944    padding: 0 var(--sl-spacing-x-small);
 2945  }
 2946
 2947  .tag--medium {
 2948    font-size: var(--sl-button-font-size-medium);
 2949    height: calc(var(--sl-input-height-medium) * 0.8);
 2950    line-height: calc(var(--sl-input-height-medium) - var(--sl-input-border-width) * 2);
 2951    border-radius: var(--sl-input-border-radius-medium);
 2952    padding: 0 var(--sl-spacing-small);
 2953  }
 2954
 2955  .tag--large {
 2956    font-size: var(--sl-button-font-size-large);
 2957    height: calc(var(--sl-input-height-large) * 0.8);
 2958    line-height: calc(var(--sl-input-height-large) - var(--sl-input-border-width) * 2);
 2959    border-radius: var(--sl-input-border-radius-large);
 2960    padding: 0 var(--sl-spacing-medium);
 2961  }
 2962
 2963  .tag__remove {
 2964    margin-inline-start: var(--sl-spacing-x-small);
 2965  }
 2966
 2967  /*
 2968   * Pill modifier
 2969   */
 2970
 2971  .tag--pill {
 2972    border-radius: var(--sl-border-radius-pill);
 2973  }
 2974 `,bs=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.variant="neutral",this.size="medium",this.pill=!1,this.removable=!1}handleRemoveClick(){this.emit("sl-remove")
 2975      <span
 2976        part="base"
 2977        class=${se({tag:!0,"tag--primary":"primary"===this.variant,"tag--success":"success"===this.variant,"tag--neutral":"neutral"===this.variant,"tag--warning":"warning"===this.variant,"tag--dange
 2978      >
 2979        <slot part="content" class="tag__content"></slot>
 2980
 2981        ${this.removable?V`
 2982              <sl-icon-button
 2983                part="remove-button"
 2984                exportparts="base:remove-button__base"
 2985                name="x-lg"
 2986                library="system"
 2987                label=${this.localize.term("remove")}
 2988                class="tag__remove"
 2989                @click=${this.handleRemoveClick}
 2990                tabindex="-1"
 2991              ></sl-icon-button>
 2992            `:""}
 2993      </span>
 2994    `}};bs.styles=[Pt,gs],bs.dependencies={"sl-icon-button":he},At([Mt({reflect:!0})],bs.prototype,"variant",2),At([Mt({reflect:!0})],bs.prototype,"size",2),At([Mt({type:Boolean,reflect:!0})],bs.pro
 2995  :host {
 2996    display: block;
 2997  }
 2998
 2999  /** The popup */
 3000  .select {
 3001    flex: 1 1 auto;
 3002    display: inline-flex;
 3003    width: 100%;
 3004    position: relative;
 3005    vertical-align: middle;
 3006  }
 3007
 3008  .select::part(popup) {
 3009    z-index: var(--sl-z-index-dropdown);
 3010  }
 3011
 3012  .select[data-current-placement^='top']::part(popup) {
 3013    transform-origin: bottom;
 3014  }
 3015
 3016  .select[data-current-placement^='bottom']::part(popup) {
 3017    transform-origin: top;
 3018  }
 3019
 3020  /* Combobox */
 3021  .select__combobox {
 3022    flex: 1;
 3023    display: flex;
 3024    width: 100%;
 3025    min-width: 0;
 3026    position: relative;
 3027    align-items: center;
 3028    justify-content: start;
 3029    font-family: var(--sl-input-font-family);
 3030    font-weight: var(--sl-input-font-weight);
 3031    letter-spacing: var(--sl-input-letter-spacing);
 3032    vertical-align: middle;
 3033    overflow: hidden;
 3034    cursor: pointer;
 3035    transition:
 3036      var(--sl-transition-fast) color,
 3037      var(--sl-transition-fast) border,
 3038      var(--sl-transition-fast) box-shadow,
 3039      var(--sl-transition-fast) background-color;
 3040  }
 3041
 3042  .select__display-input {
 3043    position: relative;
 3044    width: 100%;
 3045    font: inherit;
 3046    border: none;
 3047    background: none;
 3048    color: var(--sl-input-color);
 3049    cursor: inherit;
 3050    overflow: hidden;
 3051    padding: 0;
 3052    margin: 0;
 3053    -webkit-appearance: none;
 3054  }
 3055
 3056  .select__display-input::placeholder {
 3057    color: var(--sl-input-placeholder-color);
 3058  }
 3059
 3060  .select:not(.select--disabled):hover .select__display-input {
 3061    color: var(--sl-input-color-hover);
 3062  }
 3063
 3064  .select__display-input:focus {
 3065    outline: none;
 3066  }
 3067
 3068  /* Visually hide the display input when multiple is enabled */
 3069  .select--multiple:not(.select--placeholder-visible) .select__display-input {
 3070    position: absolute;
 3071    z-index: -1;
 3072    top: 0;
 3073    left: 0;
 3074    width: 100%;
 3075    height: 100%;
 3076    opacity: 0;
 3077  }
 3078
 3079  .select__value-input {
 3080    position: absolute;
 3081    top: 0;
 3082    left: 0;
 3083    width: 100%;
 3084    height: 100%;
 3085    padding: 0;
3086    margin: 0;
 3087    opacity: 0;
 3088    z-index: -1;
 3089  }
 3090
 3091  .select__tags {
 3092    display: flex;
 3093    flex: 1;
 3094    align-items: center;
 3095    flex-wrap: wrap;
 3096    margin-inline-start: var(--sl-spacing-2x-small);
 3097  }
 3098
 3099  .select__tags::slotted(sl-tag) {
 3100    cursor: pointer !important;
 3101  }
 3102
 3103  .select--disabled .select__tags,
 3104  .select--disabled .select__tags::slotted(sl-tag) {
 3105    cursor: not-allowed !important;
 3106  }
 3107
 3108  /* Standard selects */
 3109  .select--standard .select__combobox {
 3110    background-color: var(--sl-input-background-color);
 3111    border: solid var(--sl-input-border-width) var(--sl-input-border-color);
 3112  }
 3113
 3114  .select--standard.select--disabled .select__combobox {
 3115    background-color: var(--sl-input-background-color-disabled);
 3116    border-color: var(--sl-input-border-color-disabled);
 3117    color: var(--sl-input-color-disabled);
 3118    opacity: 0.5;
 3119    cursor: not-allowed;
 3120    outline: none;
 3121  }
 3122
 3123  .select--standard:not(.select--disabled).select--open .select__combobox,
 3124  .select--standard:not(.select--disabled).select--focused .select__combobox {
 3125    background-color: var(--sl-input-background-color-focus);
 3126    border-color: var(--sl-input-border-color-focus);
 3127    box-shadow: 0 0 0 var(--sl-focus-ring-width) var(--sl-input-focus-ring-color);
 3128  }
 3129
 3130  /* Filled selects */
 3131  .select--filled .select__combobox {
 3132    border: none;
 3133    background-color: var(--sl-input-filled-background-color);
 3134    color: var(--sl-input-color);
 3135  }
 3136
 3137  .select--filled:hover:not(.select--disabled) .select__combobox {
 3138    background-color: var(--sl-input-filled-background-color-hover);
 3139  }
 3140
 3141  .select--filled.select--disabled .select__combobox {
 3142    background-color: var(--sl-input-filled-background-color-disabled);
 3143    opacity: 0.5;
 3144    cursor: not-allowed;
 3145  }
 3146
 3147  .select--filled:not(.select--disabled).select--open .select__combobox,
 3148  .select--filled:not(.select--disabled).select--focused .select__combobox {
 3149    background-color: var(--sl-input-filled-background-color-focus);
 3150    outline: var(--sl-focus-ring);
 3151  }
 3152
 3153  /* Sizes */
 3154  .select--small .select__combobox {
 3155    border-radius: var(--sl-input-border-radius-small);
 3156    font-size: var(--sl-input-font-size-small);
 3157    min-height: var(--sl-input-height-small);
 3158    padding-block: 0;
 3159    padding-inline: var(--sl-input-spacing-small);
 3160  }
 3161
 3162  .select--small .select__clear {
 3163    margin-inline-start: var(--sl-input-spacing-small);
 3164  }
 3165
 3166  .select--small .select__prefix::slotted(*) {
 3167    margin-inline-end: var(--sl-input-spacing-small);
 3168  }
 3169
 3170  .select--small.select--multiple:not(.select--placeholder-visible) .select__prefix::slotted(*) {
 3171    margin-inline-start: var(--sl-input-spacing-small);
 3172  }
 3173
 3174  .select--small.select--multiple:not(.select--placeholder-visible) .select__combobox {
 3175    padding-block: 2px;
 3176    padding-inline-start: 0;
 3177  }
 3178
 3179  .select--small .select__tags {
 3180    gap: 2px;
 3181  }
 3182
 3183  .select--medium .select__combobox {
 3184    border-radius: var(--sl-input-border-radius-medium);
 3185    font-size: var(--sl-input-font-size-medium);
 3186    min-height: var(--sl-input-height-medium);
 3187    padding-block: 0;
 3188    padding-inline: var(--sl-input-spacing-medium);
 3189  }
 3190
 3191  .select--medium .select__clear {
 3192    margin-inline-start: var(--sl-input-spacing-medium);
 3193  }
 3194
 3195  .select--medium .select__prefix::slotted(*) {
 3196    margin-inline-end: var(--sl-input-spacing-medium);
 3197  }
 3198
 3199  .select--medium.select--multiple:not(.select--placeholder-visible) .select__prefix::slotted(*) {
 3200    margin-inline-start: var(--sl-input-spacing-medium);
 3201  }
 3202
 3203  .select--medium.select--multiple:not(.select--placeholder-visible) .select__combobox {
 3204    padding-inline-start: 0;
 3205    padding-block: 3px;
 3206  }
 3207
 3208  .select--medium .select__tags {
 3209    gap: 3px;
 3210  }
 3211
 3212  .select--large .select__combobox {
 3213    border-radius: var(--sl-input-border-radius-large);
 3214    font-size: var(--sl-input-font-size-large);
 3215    min-height: var(--sl-input-height-large);
 3216    padding-block: 0;
 3217    padding-inline: var(--sl-input-spacing-large);
 3218  }
 3219
 3220  .select--large .select__clear {
 3221    margin-inline-start: var(--sl-input-spacing-large);
 3222  }
 3223
 3224  .select--large .select__prefix::slotted(*) {
 3225    margin-inline-end: var(--sl-input-spacing-large);
 3226  }
 3227
 3228  .select--large.select--multiple:not(.select--placeholder-visible) .select__prefix::slotted(*) {
 3229    margin-inline-start: var(--sl-input-spacing-large);
 3230  }
 3231
 3232  .select--large.select--multiple:not(.select--placeholder-visible) .select__combobox {
3233    padding-inline-start: 0;
 3234    padding-block: 4px;
 3235  }
 3236
 3237  .select--large .select__tags {
 3238    gap: 4px;
 3239  }
 3240
 3241  /* Pills */
 3242  .select--pill.select--small .select__combobox {
 3243    border-radius: var(--sl-input-height-small);
 3244  }
 3245
 3246  .select--pill.select--medium .select__combobox {
 3247    border-radius: var(--sl-input-height-medium);
 3248  }
 3249
 3250  .select--pill.select--large .select__combobox {
 3251    border-radius: var(--sl-input-height-large);
 3252  }
 3253
 3254  /* Prefix and Suffix */
 3255  .select__prefix,
 3256  .select__suffix {
 3257    flex: 0;
 3258    display: inline-flex;
 3259    align-items: center;
 3260    color: var(--sl-input-placeholder-color);
 3261  }
 3262
 3263  .select__suffix::slotted(*) {
 3264    margin-inline-start: var(--sl-spacing-small);
 3265  }
 3266
 3267  /* Clear button */
 3268  .select__clear {
 3269    display: inline-flex;
 3270    align-items: center;
 3271    justify-content: center;
 3272    font-size: inherit;
 3273    color: var(--sl-input-icon-color);
 3274    border: none;
 3275    background: none;
 3276    padding: 0;
 3277    transition: var(--sl-transition-fast) color;
 3278    cursor: pointer;
 3279  }
 3280
 3281  .select__clear:hover {
 3282    color: var(--sl-input-icon-color-hover);
 3283  }
 3284
 3285  .select__clear:focus {
 3286    outline: none;
 3287  }
 3288
 3289  /* Expand icon */
 3290  .select__expand-icon {
 3291    flex: 0 0 auto;
 3292    display: flex;
 3293    align-items: center;
 3294    transition: var(--sl-transition-medium) rotate ease;
 3295    rotate: 0;
 3296    margin-inline-start: var(--sl-spacing-small);
 3297  }
 3298
 3299  .select--open .select__expand-icon {
 3300    rotate: -180deg;
 3301  }
 3302
 3303  /* Listbox */
 3304  .select__listbox {
 3305    display: block;
 3306    position: relative;
 3307    font-family: var(--sl-font-sans);
 3308    font-size: var(--sl-font-size-medium);
 3309    font-weight: var(--sl-font-weight-normal);
 3310    box-shadow: var(--sl-shadow-large);
 3311    background: var(--sl-panel-background-color);
 3312    border: solid var(--sl-panel-border-width) var(--sl-panel-border-color);
 3313    border-radius: var(--sl-border-radius-medium);
 3314    padding-block: var(--sl-spacing-x-small);
 3315    padding-inline: 0;
 3316    overflow: auto;
 3317    overscroll-behavior: none;
 3318
 3319    /* Make sure it adheres to the popup's auto size */
 3320    max-width: var(--auto-size-available-width);
 3321    max-height: var(--auto-size-available-height);
 3322  }
 3323
 3324  .select__listbox ::slotted(sl-divider) {
 3325    --spacing: var(--sl-spacing-x-small);
 3326  }
 3327
 3328  .select__listbox ::slotted(small) {
 3329    display: block;
 3330    font-size: var(--sl-font-size-small);
 3331    font-weight: var(--sl-font-weight-semibold);
 3332    color: var(--sl-color-neutral-500);
 3333    padding-block: var(--sl-spacing-2x-small);
 3334    padding-inline: var(--sl-spacing-x-large);
 3335  }
 3336 `
 3337 /**
 3338 * @license
 3339 * Copyright 2017 Google LLC
 3340 * SPDX-License-Identifier: BSD-3-Clause
 3341 */;let ys=class extends re{constructor(t){if(super(t),this.it=H,t.type!==Zt)throw Error(this.constructor.directiveName+"() can only be used in child bindings")}render(t){if(t===H||null==t)return th
 3342      <sl-tag
 3343        part="tag"
 3344        exportparts="
 3345              base:tag__base,
 3346              content:tag__content,
 3347              remove-button:tag__remove-button,
 3348              remove-button__base:tag__remove-button__base
 3349            "
 3350        ?pill=${this.pill}
 3351        size=${this.size}
 3352        removable
 3353        @sl-remove=${e=>this.handleTagRemove(e,t)}
 3354      >
 3355        ${t.getTextLabel()}
 3356      </sl-tag>
 3357    `,this.handleDocumentFocusIn=t=>{const e=t.composedPath();this&&!e.includes(this)&&this.hide()},this.handleDocumentKeyDown=t=>{const e=t.target,i=null!==e.closest(".select__clear"),r=null!==e.cl
 3358          ${"string"==typeof i?ws(i):i}
 3359        </div>`}return e===this.maxOptionsVisible?V`<sl-tag size=${this.size}>+${this.selectedOptions.length-e}</sl-tag>`:V``}))}handleInvalid(t){this.formControlController.setValidity(!1),this.form
 3360      <div
 3361        part="form-control"
 3362        class=${se({"form-control":!0,"form-control--small":"small"===this.size,"form-control--medium":"medium"===this.size,"form-control--large":"large"===this.size,"form-control--has-label":i,"for
 3363      >
 3364        <label
 3365          id="label"
 3366          part="form-control-label"
 3367          class="form-control__label"
 3368          aria-hidden=${i?"false":"true"}
 3369          @click=${this.handleLabelClick}
 3370        >
 3371          <slot name="label">${this.label}</slot>
 3372        </label>
 3373
 3374        <div part="form-control-input" class="form-control-input">
 3375          <sl-popup
 3376            class=${se({select:!0,"select--standard":!0,"select--filled":this.filled,"select--pill":this.pill,"select--open":this.open,"select--disabled":this.disabled,"select--multiple":this.multip
 3377            placement=${this.placement}
 3378            strategy=${this.hoist?"fixed":"absolute"}
 3379            flip
3380            shift
 3381            sync="width"
 3382            auto-size="vertical"
 3383            auto-size-padding="10"
 3384          >
 3385            <div
 3386              part="combobox"
 3387              class="select__combobox"
 3388              slot="anchor"
 3389              @keydown=${this.handleComboboxKeyDown}
 3390              @mousedown=${this.handleComboboxMouseDown}
 3391            >
 3392              <slot part="prefix" name="prefix" class="select__prefix"></slot>
 3393
 3394              <input
 3395                part="display-input"
 3396                class="select__display-input"
 3397                type="text"
 3398                placeholder=${this.placeholder}
 3399                .disabled=${this.disabled}
 3400                .value=${this.displayLabel}
 3401                autocomplete="off"
 3402                spellcheck="false"
 3403                autocapitalize="off"
 3404                readonly
 3405                aria-controls="listbox"
 3406                aria-expanded=${this.open?"true":"false"}
 3407                aria-haspopup="listbox"
 3408                aria-labelledby="label"
 3409                aria-disabled=${this.disabled?"true":"false"}
 3410                aria-describedby="help-text"
 3411                role="combobox"
 3412                tabindex="0"
 3413                @focus=${this.handleFocus}
 3414                @blur=${this.handleBlur}
 3415              />
 3416
 3417              ${this.multiple?V`<div part="tags" class="select__tags">${this.tags}</div>`:""}
 3418
 3419              <input
 3420                class="select__value-input"
 3421                type="text"
 3422                ?disabled=${this.disabled}
 3423                ?required=${this.required}
 3424                .value=${Array.isArray(this.value)?this.value.join(", "):this.value}
 3425                tabindex="-1"
 3426                aria-hidden="true"
 3427                @focus=${()=>this.focus()}
 3428                @invalid=${this.handleInvalid}
 3429              />
 3430
 3431              ${s?V`
 3432                    <button
 3433                      part="clear-button"
 3434                      class="select__clear"
 3435                      type="button"
 3436                      aria-label=${this.localize.term("clearEntry")}
 3437                      @mousedown=${this.handleClearMouseDown}
 3438                      @click=${this.handleClearClick}
 3439                      tabindex="-1"
 3440                    >
 3441                      <slot name="clear-icon">
 3442                        <sl-icon name="x-circle-fill" library="system"></sl-icon>
 3443                      </slot>
 3444                    </button>
 3445                  `:""}
 3446
 3447              <slot name="suffix" part="suffix" class="select__suffix"></slot>
 3448
 3449              <slot name="expand-icon" part="expand-icon" class="select__expand-icon">
 3450                <sl-icon library="system" name="chevron-down"></sl-icon>
 3451              </slot>
 3452            </div>
 3453
 3454            <div
 3455              id="listbox"
 3456              role="listbox"
 3457              aria-expanded=${this.open?"true":"false"}
 3458              aria-multiselectable=${this.multiple?"true":"false"}
 3459              aria-labelledby="label"
 3460              part="listbox"
 3461              class="select__listbox"
 3462              tabindex="-1"
 3463              @mouseup=${this.handleOptionClick}
 3464              @slotchange=${this.handleDefaultSlotChange}
 3465            >
 3466              <slot></slot>
 3467            </div>
 3468          </sl-popup>
 3469        </div>
 3470
 3471        <div
 3472          part="form-control-help-text"
 3473          id="help-text"
 3474          class="form-control__help-text"
 3475          aria-hidden=${r?"false":"true"}
 3476        >
 3477          <slot name="help-text">${this.helpText}</slot>
 3478        </div>
 3479      </div>
 3480    `}};_s.styles=[Pt,ii,vs],_s.dependencies={"sl-icon":Jt,"sl-popup":Br,"sl-tag":bs},At([Vt(".select")],_s.prototype,"popup",2),At([Vt(".select__combobox")],_s.prototype,"combobox",2),At([Vt(".sele
 3481  :host {
 3482    --border-radius: var(--sl-border-radius-pill);
 3483    --color: var(--sl-color-neutral-200);
 3484    --sheen-color: var(--sl-color-neutral-300);
 3485
 3486    display: block;
 3487    position: relative;
 3488  }
 3489
 3490  .skeleton {
 3491    display: flex;
 3492    width: 100%;
 3493    height: 100%;
 3494    min-height: 1rem;
 3495  }
 3496
 3497  .skeleton__indicator {
 3498    flex: 1 1 auto;
 3499    background: var(--color);
 3500    border-radius: var(--border-radius);
 3501  }
 3502
 3503  .skeleton--sheen .skeleton__indicator {
 3504    background: linear-gradient(270deg, var(--sheen-color), var(--color), var(--color), var(--sheen-color));
 3505    background-size: 400% 100%;
 3506    animation: sheen 8s ease-in-out infinite;
 3507  }
 3508
 3509  .skeleton--pulse .skeleton__indicator {
 3510    animation: pulse 2s ease-in-out 0.5s infinite;
 3511  }
 3512
 3513  /* Forced colors mode */
 3514  @media (forced-colors: active) {
 3515    :host {
 3516      --color: GrayText;
 3517    }
 3518  }
 3519
 3520  @keyframes sheen {
 3521    0% {
 3522      background-position: 200% 0;
 3523    }
 3524    to {
 3525      background-position: -200% 0;
 3526    }
3527  }
 3528
 3529  @keyframes pulse {
 3530    0% {
 3531      opacity: 1;
 3532    }
 3533    50% {
 3534      opacity: 0.4;
 3535    }
 3536    100% {
 3537      opacity: 1;
 3538    }
 3539  }
 3540 `,ks=class extends Ht{constructor(){super(...arguments),this.effect="none"}render(){return V`
 3541      <div
 3542        part="base"
 3543        class=${se({skeleton:!0,"skeleton--pulse":"pulse"===this.effect,"skeleton--sheen":"sheen"===this.effect})}
 3544      >
 3545        <div part="indicator" class="skeleton__indicator"></div>
 3546      </div>
 3547    `}};ks.styles=[Pt,xs],At([Mt()],ks.prototype,"effect",2),ks.define("sl-skeleton");var Cs=a`
 3548  :host {
 3549    --max-width: 20rem;
 3550    --hide-delay: 0ms;
 3551    --show-delay: 150ms;
 3552
 3553    display: contents;
 3554  }
 3555
 3556  .tooltip {
 3557    --arrow-size: var(--sl-tooltip-arrow-size);
 3558    --arrow-color: var(--sl-tooltip-background-color);
 3559  }
 3560
 3561  .tooltip::part(popup) {
 3562    z-index: var(--sl-z-index-tooltip);
 3563  }
 3564
 3565  .tooltip[placement^='top']::part(popup) {
 3566    transform-origin: bottom;
 3567  }
 3568
 3569  .tooltip[placement^='bottom']::part(popup) {
 3570    transform-origin: top;
 3571  }
 3572
 3573  .tooltip[placement^='left']::part(popup) {
 3574    transform-origin: right;
 3575  }
 3576
 3577  .tooltip[placement^='right']::part(popup) {
 3578    transform-origin: left;
 3579  }
 3580
 3581  .tooltip__body {
 3582    display: block;
 3583    width: max-content;
 3584    max-width: var(--max-width);
 3585    border-radius: var(--sl-tooltip-border-radius);
 3586    background-color: var(--sl-tooltip-background-color);
 3587    font-family: var(--sl-tooltip-font-family);
 3588    font-size: var(--sl-tooltip-font-size);
 3589    font-weight: var(--sl-tooltip-font-weight);
 3590    line-height: var(--sl-tooltip-line-height);
 3591    text-align: start;
 3592    white-space: normal;
 3593    color: var(--sl-tooltip-color);
 3594    padding: var(--sl-tooltip-padding);
 3595    pointer-events: none;
 3596    user-select: none;
 3597    -webkit-user-select: none;
 3598  }
 3599 `,Ss=class extends Ht{constructor(){super(),this.localize=new Re(this),this.content="",this.placement="top",this.disabled=!1,this.distance=8,this.open=!1,this.skidding=0,this.trigger="hover focus",t
 3600      <sl-popup
 3601        part="base"
 3602        exportparts="
 3603          popup:base__popup,
 3604          arrow:base__arrow
 3605        "
 3606        class=${se({tooltip:!0,"tooltip--open":this.open})}
 3607        placement=${this.placement}
 3608        distance=${this.distance}
 3609        skidding=${this.skidding}
 3610        strategy=${this.hoist?"fixed":"absolute"}
 3611        flip
 3612        shift
 3613        arrow
 3614        hover-bridge
 3615      >
 3616        ${""}
 3617        <slot slot="anchor" aria-describedby="tooltip"></slot>
 3618
 3619        ${""}
 3620        <div part="body" id="tooltip" class="tooltip__body" role="tooltip" aria-live=${this.open?"polite":"off"}>
 3621          <slot name="content">${this.content}</slot>
 3622        </div>
 3623      </sl-popup>
 3624    `}};Ss.styles=[Pt,Cs],Ss.dependencies={"sl-popup":Br},At([Vt("slot:not([name])")],Ss.prototype,"defaultSlot",2),At([Vt(".tooltip__body")],Ss.prototype,"body",2),At([Vt("sl-popup")],Ss.prototype,
 3625  :host {
 3626    display: block;
 3627    outline: 0;
 3628    z-index: 0;
 3629  }
 3630
 3631  :host(:focus) {
 3632    outline: none;
 3633  }
 3634
 3635  slot:not([name])::slotted(sl-icon) {
 3636    margin-inline-end: var(--sl-spacing-x-small);
 3637  }
 3638
 3639  .tree-item {
 3640    position: relative;
 3641    display: flex;
 3642    align-items: stretch;
 3643    flex-direction: column;
 3644    color: var(--sl-color-neutral-700);
 3645    cursor: pointer;
 3646    user-select: none;
 3647    -webkit-user-select: none;
 3648  }
 3649
 3650  .tree-item__checkbox {
 3651    pointer-events: none;
 3652  }
 3653
 3654  .tree-item__expand-button,
 3655  .tree-item__checkbox,
 3656  .tree-item__label {
 3657    font-family: var(--sl-font-sans);
 3658    font-size: var(--sl-font-size-medium);
 3659    font-weight: var(--sl-font-weight-normal);
 3660    line-height: var(--sl-line-height-dense);
 3661    letter-spacing: var(--sl-letter-spacing-normal);
 3662  }
 3663
 3664  .tree-item__checkbox::part(base) {
 3665    display: flex;
 3666    align-items: center;
 3667  }
 3668
 3669  .tree-item__indentation {
 3670    display: block;
 3671    width: 1em;
 3672    flex-shrink: 0;
 3673  }
3674
 3675  .tree-item__expand-button {
 3676    display: flex;
 3677    align-items: center;
 3678    justify-content: center;
 3679    box-sizing: content-box;
 3680    color: var(--sl-color-neutral-500);
 3681    padding: var(--sl-spacing-x-small);
 3682    width: 1rem;
 3683    height: 1rem;
 3684    flex-shrink: 0;
 3685    cursor: pointer;
 3686  }
 3687
 3688  .tree-item__expand-button {
 3689    transition: var(--sl-transition-medium) rotate ease;
 3690  }
 3691
 3692  .tree-item--expanded .tree-item__expand-button {
 3693    rotate: 90deg;
 3694  }
 3695
 3696  .tree-item--expanded.tree-item--rtl .tree-item__expand-button {
 3697    rotate: -90deg;
 3698  }
 3699
 3700  .tree-item--expanded slot[name='expand-icon'],
 3701  .tree-item:not(.tree-item--expanded) slot[name='collapse-icon'] {
 3702    display: none;
 3703  }
 3704
 3705  .tree-item:not(.tree-item--has-expand-button) .tree-item__expand-icon-slot {
 3706    display: none;
 3707  }
 3708
 3709  .tree-item__expand-button--visible {
 3710    cursor: pointer;
 3711  }
 3712
 3713  .tree-item__item {
 3714    display: flex;
 3715    align-items: center;
 3716    border-inline-start: solid 3px transparent;
 3717  }
 3718
 3719  .tree-item--disabled .tree-item__item {
 3720    opacity: 0.5;
 3721    outline: none;
 3722    cursor: not-allowed;
 3723  }
 3724
 3725  :host(:focus-visible) .tree-item__item {
 3726    outline: var(--sl-focus-ring);
 3727    outline-offset: var(--sl-focus-ring-offset);
 3728    z-index: 2;
 3729  }
 3730
 3731  :host(:not([aria-disabled='true'])) .tree-item--selected .tree-item__item {
 3732    background-color: var(--sl-color-neutral-100);
 3733    border-inline-start-color: var(--sl-color-primary-600);
 3734  }
 3735
 3736  :host(:not([aria-disabled='true'])) .tree-item__expand-button {
 3737    color: var(--sl-color-neutral-600);
 3738  }
 3739
 3740  .tree-item__label {
 3741    display: flex;
 3742    align-items: center;
 3743    transition: var(--sl-transition-fast) color;
 3744  }
 3745
 3746  .tree-item__children {
 3747    display: block;
 3748    font-size: calc(1em + var(--indent-size, var(--sl-spacing-medium)));
 3749  }
 3750
 3751  /* Indentation lines */
 3752  .tree-item__children {
 3753    position: relative;
 3754  }
 3755
 3756  .tree-item__children::before {
 3757    content: '';
 3758    position: absolute;
 3759    top: var(--indent-guide-offset);
 3760    bottom: var(--indent-guide-offset);
 3761    left: calc(1em - (var(--indent-guide-width) / 2) - 1px);
 3762    border-inline-end: var(--indent-guide-width) var(--indent-guide-style) var(--indent-guide-color);
 3763    z-index: 1;
 3764  }
 3765
 3766  .tree-item--rtl .tree-item__children::before {
 3767    left: auto;
 3768    right: 1em;
 3769  }
 3770
 3771  @media (forced-colors: active) {
 3772    :host(:not([aria-disabled='true'])) .tree-item--selected .tree-item__item {
 3773      outline: dashed 1px SelectedItem;
 3774    }
 3775  }
 3776 `
 3777 /**
 3778 * @license
 3779 * Copyright 2021 Google LLC
 3780 * SPDX-License-Identifier: BSD-3-Clause
 3781 */;function Es(t,e,i){return t?e(t):i?.(t)}var Is=class t extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.indeterminate=!1,this.isLeaf=!1,this.loading=!1,this.selectabl
 3782      <div
 3783        part="base"
 3784        class="${se({"tree-item":!0,"tree-item--expanded":this.expanded,"tree-item--selected":this.selected,"tree-item--disabled":this.disabled,"tree-item--leaf":this.isLeaf,"tree-item--has-expand-b
 3785      >
 3786        <div
 3787          class="tree-item__item"
 3788          part="
 3789            item
 3790            ${this.disabled?"item--disabled":""}
 3791            ${this.expanded?"item--expanded":""}
 3792            ${this.indeterminate?"item--indeterminate":""}
 3793            ${this.selected?"item--selected":""}
 3794          "
 3795        >
 3796          <div class="tree-item__indentation" part="indentation"></div>
 3797
 3798          <div
 3799            part="expand-button"
 3800            class=${se({"tree-item__expand-button":!0,"tree-item__expand-button--visible":e})}
 3801            aria-hidden="true"
 3802          >
 3803            ${Es(this.loading,(()=>V` <sl-spinner part="spinner" exportparts="base:spinner__base"></sl-spinner> `))}
 3804            <slot class="tree-item__expand-icon-slot" name="expand-icon">
 3805              <sl-icon library="system" name=${t?"chevron-left":"chevron-right"}></sl-icon>
 3806            </slot>
 3807            <slot class="tree-item__expand-icon-slot" name="collapse-icon">
 3808              <sl-icon library="system" name=${t?"chevron-left":"chevron-right"}></sl-icon>
 3809            </slot>
 3810          </div>
 3811
 3812          ${Es(this.selectable,(()=>V`
 3813              <sl-checkbox
 3814                part="checkbox"
 3815                exportparts="
 3816                    base:checkbox__base,
 3817                    control:checkbox__control,
 3818                    control--checked:checkbox__control--checked,
 3819                    control--indeterminate:checkbox__control--indeterminate,
 3820                    checked-icon:checkbox__checked-icon,
3821                    indeterminate-icon:checkbox__indeterminate-icon,
 3822                    label:checkbox__label
 3823                  "
 3824                class="tree-item__checkbox"
 3825                ?disabled="${this.disabled}"
 3826                ?checked="${ri(this.selected)}"
 3827                ?indeterminate="${this.indeterminate}"
 3828                tabindex="-1"
 3829              ></sl-checkbox>
 3830            `))}
 3831
 3832          <slot class="tree-item__label" part="label"></slot>
 3833        </div>
 3834
 3835        <div class="tree-item__children" part="children" role="group">
 3836          <slot name="children" @slotchange="${this.handleChildrenSlotChange}"></slot>
 3837        </div>
 3838      </div>
 3839    `}};Is.styles=[Pt,$s],Is.dependencies={"sl-checkbox":si,"sl-icon":Jt,"sl-spinner":Be},At([Nt()],Is.prototype,"indeterminate",2),At([Nt()],Is.prototype,"isLeaf",2),At([Nt()],Is.prototype,"loading
 3840  :host {
 3841    /*
 3842     * These are actually used by tree item, but we define them here so they can more easily be set and all tree items
 3843     * stay consistent.
 3844     */
 3845    --indent-guide-color: var(--sl-color-neutral-200);
 3846    --indent-guide-offset: 0;
 3847    --indent-guide-style: solid;
 3848    --indent-guide-width: 0;
 3849    --indent-size: var(--sl-spacing-large);
 3850
 3851    display: block;
 3852
 3853    /*
 3854     * Tree item indentation uses the "em" unit to increment its width on each level, so setting the font size to zero
 3855     * here removes the indentation for all the nodes on the first level.
 3856     */
 3857    font-size: 0;
 3858  }
 3859 `;function Ds(t,e,i){const r=t=>Object.is(t,-0)?0:t;return r(t<e?e:t>i?i:t)}function Os(t,e=!1){function i(t){const e=t.getChildrenItems({includeDisabled:!1});if(e.length){const i=e.every((t=>t.sele
 3860      <div
 3861        part="base"
 3862        class="tree"
 3863        @click=${this.handleClick}
 3864        @keydown=${this.handleKeyDown}
 3865        @mousedown=${this.handleMouseDown}
 3866      >
 3867        <slot @slotchange=${this.handleSlotChange}></slot>
 3868        <span hidden aria-hidden="true"><slot name="expand-icon"></slot></span>
 3869        <span hidden aria-hidden="true"><slot name="collapse-icon"></slot></span>
 3870      </div>
 3871    `}};zs.styles=[Pt,As],At([Vt("slot:not([name])")],zs.prototype,"defaultSlot",2),At([Vt("slot[name=expand-icon]")],zs.prototype,"expandedIconSlot",2),At([Vt("slot[name=collapse-icon]")],zs.protot
 3872 /**
 3873 * @license
 3874 * Copyright 2021 Google LLC
 3875 * SPDX-License-Identifier: BSD-3-Clause
 3876 */
 3877 let Ps=class extends Event{constructor(t,e,i,r){super("context-request",{bubbles:!0,composed:!0}),this.context=t,this.contextTarget=e,this.callback=i,this.subscribe=r??!1}};
 3878 /**
 3879 * @license
 3880 * Copyright 2021 Google LLC
 3881 * SPDX-License-Identifier: BSD-3-Clause
 3882 */
 3883 /**
 3884 * @license
 3885 * Copyright 2021 Google LLC
 3886 * SPDX-License-Identifier: BSD-3-Clause
 3887 */
 3888 let Rs=class{constructor(t,e,i,r){if(this.subscribe=!1,this.provided=!1,this.value=void 0,this.t=(t,e)=>{this.unsubscribe&&(this.unsubscribe!==e&&(this.provided=!1,this.unsubscribe()),this.subscribe
 3889 /**
 3890 * @license
 3891 * Copyright 2021 Google LLC
 3892 * SPDX-License-Identifier: BSD-3-Clause
 3893 */
 3894 /**
 3895 * @license
 3896 * Copyright 2017 Google LLC
 3897 * SPDX-License-Identifier: BSD-3-Clause
 3898 */
 3899 function Ns({context:t}){return(e,i)=>{const r=new WeakMap;if("object"==typeof i)return i.addInitializer((function(){r.set(this,new Ms(this,{context:t}))})),{get(){return e.get.call(this)},set(t){re
 3900 /**
 3901 * @license
 3902 * Copyright 2022 Google LLC
 3903 * SPDX-License-Identifier: BSD-3-Clause
 3904 */function Bs({context:t,subscribe:e}){return(i,r)=>{"object"==typeof r?r.addInitializer((function(){new Rs(this,{context:t,callback:t=>{i.set.call(this,t)},subscribe:e})})):i.constructor.addInitia
 3905  html,
 3906  body {
 3907    margin: 0;
 3908    padding: 0;
 3909    border: 0;
 3910    font-weight: inherit;
 3911    font-style: inherit;
 3912    font-size: 100%;
 3913    font-family: inherit;
 3914    vertical-align: baseline;
 3915  }
 3916
 3917  div,
 3918  span,
 3919  object,
 3920  iframe,
 3921  h1,
 3922  h2,
 3923  h3,
 3924  h4,
 3925  h5,
 3926  h6,
 3927  p,
 3928  pre,
 3929  a,
 3930  abbr,
 3931  acronym,
 3932  address,
 3933  code,
 3934  del,
 3935  dfn,
 3936  em,
 3937  img,
 3938  dl,
 3939  dt,
 3940  dd,
 3941  ol,
 3942  ul,
 3943  li,
 3944  fieldset,
 3945  form,
 3946  label,
 3947  legend,
 3948  caption,
 3949  tbody,
 3950  tfoot,
 3951  thead,
 3952  tr {
 3953    margin: 0;
 3954    padding: 0;
 3955    border: 0;
 3956    font-weight: inherit;
 3957    font-style: inherit;
 3958    font-size: 100%;
 3959    font-family: inherit;
 3960    vertical-align: baseline;
 3961  }
 3962
 3963  blockquote,
 3964  q {
 3965    margin: 0;
 3966    padding: 0;
 3967    border: 0;
3968
 3969
 3970
 3971
 3972
 3973
 3974  }
 3975
 3976
 3977
 3978
 3979
    font-weight: inherit;
    font-style: inherit;
    font-size: 100%;
    font-family: inherit;
    vertical-align: baseline;
    quotes: '' '';
  blockquote:before,
  q:before,
  blockquote:after,
  q:after {
    content: '';
 3980  }
 3981
 3982  th,
 3983  td,
 3984
  caption {
    margin: 0;
    padding: 0;
    border: 0;
    font-weight: inherit;
    font-style: inherit;
    font-size: 100%;
    font-family: inherit;
    vertical-align: baseline;
    text-align: left;
    font-weight: normal;
    vertical-align: middle;
  table {
    margin: 0;
    padding: 0;
    border: 0;
    font-weight: inherit;
    font-style: inherit;
    font-size: 100%;
    font-family: inherit;
    vertical-align: baseline;
    border-collapse: separate;
    border-spacing: 0;
    vertical-align: middle;
  a img {
    border: none;
  :host {
    --color-primary: var(--sl-color-primary-600);
    --color-strong-primary: var(--sl-color-primary-800);
    --color-strongest: var(--sl-color-gray-900);
    --color-strong: var(--sl-color-gray-600);
    --color-medium: var(--sl-color-gray-400);
    --color-light: var(--sl-color-gray-200);
    --color-lightest: var(--sl-color-gray-50);
    --color-background: white;
    --color-highlight-1: var(--sl-color-gray-100);
    --color-highlight-2: var(--sl-color-gray-300);
    --color-gray-bg: var(--sl-color-gray-100);
    --color-gray-fg: var(--sl-color-gray-600);
    --color-green-bg: var(--sl-color-green-100);
    --color-green-fg: var(--sl-color-green-600);
    --color-blue-bg: var(--sl-color-blue-100);
    --color-blue-fg: var(--sl-color-blue-600);
    --color-red-bg: var(--sl-color-red-100);
    --color-red-fg: var(--sl-color-red-600);
    --color-yellow-fg: var(--sl-color-yellow-800);
  :host {
    --default-color: var(--color-strongest);
    --unimportant-text-color: var(--color-strong);
    --content-padding-large: 24px;
    --content-padding: 16px;
    --content-padding-half: 8px;
    --content-padding-quarter: 4px;
    --border-radius: 8px;
 3985
 3986
 3987
 3988
 3989
 3990
 3991
 3992
 3993
 3994
 3995
 3996  }
 3997
 3998
 3999
 4000
 4001
 4002
 4003
 4004
 4005
 4006
 4007
 4008
 4009
 4010  }
 4011
 4012
 4013
 4014  }
 4015 `,a`
 4016
 4017
 4018
 4019
 4020
 4021
 4022
 4023
 4024
 4025
 4026
 4027
 4028
 4029
 4030
 4031
 4032
 4033
 4034
 4035
 4036
 4037  }
 4038
 4039
 4040
 4041
 4042
 4043
 4044
 4045
 4046
 4047
 4048
 4049
 4050
 4051
 4052
 4053
 4054
 4055
 4056
 4057
 4058
 4059
 4060
 4061
 4062
 4063
 4064
 4065
 4066
 4067
 4068
 4069
 4070
 4071
 4072
 4073
 4074
 4075
 4076
 4077
 4078
 4079
 4080
 4081
 4082
 4083
 4084
 4085
 4086
 4087
 4088
 4089
 4090  }
 4091 `,a`
 4092
 4093
 4094
 4095  }
 4096
 4097
 4098
 4099  }
 4100
 4101
 4102  }
 4103
 4104
 4105
 4106
 4107  }
 4108
 4109
 4110
 4111
 4112
 4113
    --logo-color: var(--default-color);
    --logo-size: 32px;
    --icon-size: 22px;
    --link-color: var(--color-strong-primary);
    --link-hover-color: var(--link-color);
    --default-border: 1px solid var(--color-light);
    --card-background: white;
    --card-border-width: 1px;
    --card-border-color: var(--color-light);
    --card-radius: var(--border-radius);
    --table-header-background: var(--color-lightest);
    --table-header-hover-background: var(--color-blue-bg);
    --table-row-background: var(--color-background);
    --table-divider: var(--default-border);
    --table-border: var(--default-border);
    --table-radius: var(--border-radius);
    --pagination-active-background: var(--color-light);
    --pagination-hover-background: var(--color-blue-bg);
    --chip-border: none;
    --chip-radius: 9999px;
    --chip-background-limited: var(--color-gray-bg);
    --chip-color-limited: var(--color-gray-fg);
    --chip-background-newly: var(--color-blue-bg);
    --chip-color-newly: var(--color-blue-fg);
    --chip-background-widely: var(--color-green-bg);
    --chip-color-widely: var(--color-green-fg);
    --icon-color-avail-unavailable: var(--color-red-fg);
    --chip-small-font-size: 60%;
    --chip-background-unchanged: var(--color-gray-bg);
    --chip-color-unchanged: var(--color-gray-fg);
    --chip-background-increased: var(--color-green-bg);
    --chip-color-incresed: var(--color-green-fg);
    --chip-background-decreased: var(--color-red-bg);
    --chip-color-decresed: var(--color-red-fg);
  .hbox,
  .vbox {
    display: flex;
  .hbox {
    flex-direction: row;
  .vbox {
    flex-direction: column;
  .hbox.wrap,
  .vbox.wrap {
    flex-wrap: wrap;
  /* Flexbox alignment */
  .hbox.halign-items-start,
  .vbox.valign-items-start {
    justify-content: flex-start;
 4114  }
4115  .hbox.halign-items-center,
 4116  .vbox.valign-items-center {
 4117    justify-content: center;
 4118  }
 4119  .hbox.halign-items-end,
 4120  .vbox.valign-items-end {
 4121    justify-content: flex-end;
 4122  }
 4123
 4124  /* Alignment in cross-axis. */
 4125  .hbox.valign-items-start,
 4126  .vbox.halign-items-start {
 4127    align-items: flex-start;
 4128  }
 4129
 4130  .hbox.valign-items-center,
 4131  .vbox.halign-items-center {
 4132    align-items: center;
 4133  }
 4134
 4135  .hbox.valign-items-end,
 4136  .vbox.halign-items-end {
 4137    align-items: flex-end;
 4138  }
 4139
 4140  /* Self/item alignment. */
 4141
 4142  .hbox > .valign-start,
 4143  .vbox > .halign-start,
 4144  .hbox.valign-items-start > *,
 4145  .vbox.halign-items-start > * {
 4146    align-self: flex-start;
 4147  }
 4148
 4149  .hbox > .valign-center,
 4150  .vbox > .halign-center,
 4151  .hbox.valign-items-center > *,
 4152  .vbox.halign-items-center > * {
 4153    align-self: center;
 4154  }
 4155
 4156  .hbox > .valign-end,
 4157  .vbox > .halign-end,
 4158  .hbox.valign-items-end > *,
 4159  .vbox.halign-items-end > * {
 4160    align-self: flex-end;
 4161  }
 4162
 4163  /* Stretch "alignment" */
 4164
 4165  .hbox > .halign-stretch,
 4166  .vbox > .valign-stretch,
 4167  .hbox.halign-items-stretch > *,
 4168  .vbox.valign-items-stretch > * {
 4169    flex-grow: 1;
 4170  }
 4171  .hbox > .halign-stretch-2,
 4172  .vbox > .valign-stretch-2 {
 4173    flex-grow: 2;
 4174  }
 4175  .hbox > .halign-stretch-3,
 4176  .vbox > .valign-stretch-3 {
 4177    flex-grow: 3;
 4178  }
 4179
 4180  .hbox.valign-items-stretch,
 4181  .vbox.halign-items-stretch {
 4182    align-items: stretch;
 4183  }
 4184
 4185  .hbox > .valign-stretch,
 4186  .vbox > .halign-stretch,
 4187  .hbox.valign-items-stretch > *,
 4188  .vbox.halign-items-stretch > * {
 4189    align-self: stretch;
 4190  }
 4191
 4192  .hbox > .halign-shrink-0,
 4193  .vbox > .valign-shrink-0 {
 4194    flex-shrink: 0;
 4195  }
 4196
 4197  /* Space distribution */
 4198
 4199  .hbox.halign-items-space-around,
 4200  .vbox.valign-items-space-around {
 4201    justify-content: space-around;
 4202  }
 4203  .hbox.valign-items-space-around,
 4204  .vbox.halign-items-space-around {
 4205    align-content: space-around;
 4206  }
 4207
 4208  .hbox.halign-items-space-between,
 4209  .vbox.valign-items-space-between {
 4210    justify-content: space-between;
 4211  }
 4212  .hbox.valign-items-space-between,
 4213  .vbox.halign-items-space-between {
 4214    align-content: space-between;
 4215  }
 4216
 4217  .hbox.halign-items-space-evenly,
 4218  .vbox.valign-items-space-evenly {
 4219    justify-content: space-evenly;
 4220  }
 4221  .hbox.valign-items-space-evenly,
 4222  .vbox.halign-items-space-evenly {
 4223    align-content: space-evenly;
 4224  }
 4225
 4226  .hbox > .spacer,
 4227  .hbox > .spacer-1,
 4228  .vbox > .spacer,
 4229  .vbox > .spacer-1 {
 4230    flex-grow: 1;
 4231    visibility: hidden;
 4232  }
 4233  .hbox > .spacer-2,
 4234  .vbox > .spacer-2 {
 4235    flex-grow: 2;
 4236    visibility: hidden;
 4237  }
 4238  .hbox > .spacer-3,
 4239  .vbox > .spacer-3 {
 4240    flex-grow: 3;
 4241    visibility: hidden;
 4242  }
 4243 `,a`
 4244    :host {
 4245      font-family:
 4246        ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
 4247        'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
 4248      color: var(--default-color);
 4249    }
 4250
 4251    .data-table colgroup {
 4252      border: var(--default-border);
 4253    }
 4254    .data-table {
 4255      width: 100%;
 4256      border: var(--default-border);
 4257      border-radius: var(--border-radius);
 4258      border-collapse: collapse;
 4259    }
 4260    .data-table th {
 4261      text-align: left;
4262      background: var(--table-header-background);
 4263      padding: var(--content-padding-half) var(--content-padding);
 4264    }
 4265    .data-table td {
 4266      border-top: var(--default-border);
 4267      padding: var(--content-padding-half) var(--content-padding);
 4268    }
 4269
 4270    .chip {
 4271      border: var(--chip-border);
 4272      border-radius: var(--chip-radius);
 4273      white-space: nowrap;
 4274      padding: var(--content-padding-quarter) var(--content-padding-half);
 4275    }
 4276
 4277    .chip.small {
 4278      font-size: var(--chip-small-font-size);
 4279    }
 4280
 4281    h1 {
 4282      font-weight: 700;
 4283      font-size: 32px;
 4284    }
 4285
 4286    h2 {
 4287      font-weight: 700;
 4288      font-size: 24px;
 4289    }
 4290
 4291    h3,
 4292    h4 {
 4293      font-weight: 300;
 4294    }
 4295
 4296    h2,
 4297    h3,
 4298    h4 {
 4299      background: var(--heading-background);
 4300      color: var(--heading-color);
 4301    }
 4302
 4303    h3 {
 4304      font-size: 20px;
 4305    }
 4306
 4307    a {
 4308      text-decoration: none;
 4309      color: var(--link-color);
 4310    }
 4311    a:hover {
 4312      text-decoration: underline;
 4313      color: var(--link-hover-color);
 4314      cursor: pointer;
 4315    }
 4316
 4317    sl-card {
 4318      --background-color: var(--card-background);
 4319      --padding: var(--content-padding);
 4320      --border-color: var(--card-border-color);
 4321      --border-width: var(--card-border-width);
 4322      --border-radius: var(--card-radius);
 4323    }
 4324
 4325    sl-details::part(base) {
 4326      background: var(--card-background);
 4327      border: none;
 4328    }
 4329
 4330    sl-details::part(header) {
 4331      padding: var(--content-padding);
 4332    }
 4333
 4334    .under-construction {
 4335      background: repeating-linear-gradient(
 4336        45deg,
 4337        var(--sl-color-cyan-50),
 4338        var(--sl-color-cyan-50) 10px,
 4339        transparent 10px,
 4340        transparent 20px
 4341      );
 4342    }
 4343  `];function Vs(t,e){void 0===e&&(e={});for(var i=function(t){for(var e=[],i=0;i<t.length;){var r=t[i];if("*"!==r&&"+"!==r&&"?"!==r)if("\\"!==r)if("{"!==r)if("}"!==r)if(":"!==r)if("("!==r)e.push({t
 4344 /*! vaadin-dev-mode:start
 4345  (function () {
 4346 'use strict';
 4347
 4348 var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
 4349  return typeof obj;
 4350 } : function (obj) {
 4351  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
 4352 };
 4353
 4354 var classCallCheck = function (instance, Constructor) {
 4355  if (!(instance instanceof Constructor)) {
 4356    throw new TypeError("Cannot call a class as a function");
 4357  }
 4358 };
 4359
 4360 var createClass = function () {
 4361  function defineProperties(target, props) {
 4362    for (var i = 0; i < props.length; i++) {
 4363      var descriptor = props[i];
 4364      descriptor.enumerable = descriptor.enumerable || false;
 4365      descriptor.configurable = true;
 4366      if ("value" in descriptor) descriptor.writable = true;
 4367      Object.defineProperty(target, descriptor.key, descriptor);
 4368    }
 4369  }
 4370
 4371  return function (Constructor, protoProps, staticProps) {
 4372    if (protoProps) defineProperties(Constructor.prototype, protoProps);
 4373    if (staticProps) defineProperties(Constructor, staticProps);
 4374    return Constructor;
 4375  };
 4376 }();
 4377
 4378 var getPolymerVersion = function getPolymerVersion() {
 4379  return window.Polymer && window.Polymer.version;
 4380 };
 4381
 4382 var StatisticsGatherer = function () {
 4383  function StatisticsGatherer(logger) {
 4384    classCallCheck(this, StatisticsGatherer);
 4385
 4386    this.now = new Date().getTime();
 4387    this.logger = logger;
 4388  }
 4389
 4390  createClass(StatisticsGatherer, [{
 4391    key: 'frameworkVersionDetectors',
 4392    value: function frameworkVersionDetectors() {
 4393      return {
 4394        'Flow': function Flow() {
 4395          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {
 4396            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {
 4397              return window.Vaadin.Flow.clients[key];
 4398            }).filter(function (client) {
 4399              return client.getVersionInfo;
 4400            }).map(function (client) {
 4401              return client.getVersionInfo().flow;
 4402            });
 4403            if (flowVersions.length > 0) {
 4404              return flowVersions[0];
 4405            }
 4406          }
 4407        },
 4408        'Vaadin Framework': function VaadinFramework() {
4409          if (window.vaadin && window.vaadin.clients) {
 4410            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {
 4411              return client.getVersionInfo;
 4412            }).map(function (client) {
 4413              return client.getVersionInfo().vaadinVersion;
 4414            });
 4415            if (frameworkVersions.length > 0) {
 4416              return frameworkVersions[0];
 4417            }
 4418          }
 4419        },
 4420        'AngularJs': function AngularJs() {
 4421          if (window.angular && window.angular.version && window.angular.version) {
 4422            return window.angular.version.full;
 4423          }
 4424        },
 4425        'Angular': function Angular() {
 4426          if (window.ng) {
 4427            var tags = document.querySelectorAll("[ng-version]");
 4428            if (tags.length > 0) {
 4429              return tags[0].getAttribute("ng-version");
 4430            }
 4431            return "Unknown";
 4432          }
 4433        },
 4434        'Backbone.js': function BackboneJs() {
 4435          if (window.Backbone) {
 4436            return window.Backbone.VERSION;
 4437          }
 4438        },
 4439        'React': function React() {
 4440          var reactSelector = '[data-reactroot], [data-reactid]';
 4441          if (!!document.querySelector(reactSelector)) {
 4442            // React does not publish the version by default
 4443            return "unknown";
 4444          }
 4445        },
 4446        'Ember': function Ember() {
 4447          if (window.Em && window.Em.VERSION) {
 4448            return window.Em.VERSION;
 4449          } else if (window.Ember && window.Ember.VERSION) {
 4450            return window.Ember.VERSION;
 4451          }
 4452        },
 4453        'jQuery': function (_jQuery) {
 4454          function jQuery() {
 4455            return _jQuery.apply(this, arguments);
 4456          }
 4457
 4458          jQuery.toString = function () {
 4459            return _jQuery.toString();
 4460          };
 4461
 4462          return jQuery;
 4463        }(function () {
 4464          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {
 4465            return jQuery.prototype.jquery;
 4466          }
 4467        }),
 4468        'Polymer': function Polymer() {
 4469          var version = getPolymerVersion();
 4470          if (version) {
 4471            return version;
 4472          }
 4473        },
 4474        'LitElement': function LitElement() {
 4475          var version = window.litElementVersions && window.litElementVersions[0];
 4476          if (version) {
 4477            return version;
 4478          }
 4479        },
 4480        'LitHtml': function LitHtml() {
 4481          var version = window.litHtmlVersions && window.litHtmlVersions[0];
 4482          if (version) {
 4483            return version;
 4484          }
 4485        },
 4486        'Vue.js': function VueJs() {
 4487          if (window.Vue) {
 4488            return window.Vue.version;
 4489          }
 4490        }
 4491      };
 4492    }
 4493  }, {
 4494    key: 'getUsedVaadinElements',
 4495    value: function getUsedVaadinElements(elements) {
 4496      var version = getPolymerVersion();
 4497      var elementClasses = void 0;
 4498      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.
 4499      // Check all locations calling the method getEntries() in
 4500      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106
 4501      // Currently it is only used by BootstrapHandler.
 4502      if (version && version.indexOf('2') === 0) {
 4503        // Polymer 2: components classes are stored in window.Vaadin
 4504        elementClasses = Object.keys(window.Vaadin).map(function (c) {
 4505          return window.Vaadin[c];
 4506        }).filter(function (c) {
 4507          return c.is;
 4508        });
 4509      } else {
 4510        // Polymer 3: components classes are stored in window.Vaadin.registrations
 4511        elementClasses = window.Vaadin.registrations || [];
 4512      }
 4513      elementClasses.forEach(function (klass) {
 4514        var version = klass.version ? klass.version : "0.0.0";
 4515        elements[klass.is] = { version: version };
 4516      });
 4517    }
 4518  }, {
 4519    key: 'getUsedVaadinThemes',
 4520    value: function getUsedVaadinThemes(themes) {
 4521      ['Lumo', 'Material'].forEach(function (themeName) {
 4522        var theme;
 4523        var version = getPolymerVersion();
 4524        if (version && version.indexOf('2') === 0) {
 4525          // Polymer 2: themes are stored in window.Vaadin
 4526          theme = window.Vaadin[themeName];
 4527        } else {
 4528          // Polymer 3: themes are stored in custom element registry
 4529          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');
 4530        }
 4531        if (theme && theme.version) {
 4532          themes[themeName] = { version: theme.version };
 4533        }
 4534      });
 4535    }
 4536  }, {
 4537    key: 'getFrameworks',
 4538    value: function getFrameworks(frameworks) {
 4539      var detectors = this.frameworkVersionDetectors();
 4540      Object.keys(detectors).forEach(function (framework) {
 4541        var detector = detectors[framework];
 4542        try {
 4543          var version = detector();
 4544          if (version) {
 4545            frameworks[framework] = { version: version };
 4546          }
 4547        } catch (e) {}
 4548      });
 4549    }
 4550  }, {
 4551    key: 'gather',
 4552    value: function gather(storage) {
 4553      var storedStats = storage.read();
 4554      var gatheredStats = {};
 4555      var types = ["elements", "frameworks", "themes"];
4556
 4557      types.forEach(function (type) {
 4558        gatheredStats[type] = {};
 4559        if (!storedStats[type]) {
 4560          storedStats[type] = {};
 4561        }
 4562      });
 4563
 4564      var previousStats = JSON.stringify(storedStats);
 4565
 4566      this.getUsedVaadinElements(gatheredStats.elements);
 4567      this.getFrameworks(gatheredStats.frameworks);
 4568      this.getUsedVaadinThemes(gatheredStats.themes);
 4569
 4570      var now = this.now;
 4571      types.forEach(function (type) {
 4572        var keys = Object.keys(gatheredStats[type]);
 4573        keys.forEach(function (key) {
 4574          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {
 4575            storedStats[type][key] = { firstUsed: now };
 4576          }
 4577          // Discards any previously logged version number
 4578          storedStats[type][key].version = gatheredStats[type][key].version;
 4579          storedStats[type][key].lastUsed = now;
 4580        });
 4581      });
 4582
 4583      var newStats = JSON.stringify(storedStats);
 4584      storage.write(newStats);
 4585      if (newStats != previousStats && Object.keys(storedStats).length > 0) {
 4586        this.logger.debug("New stats: " + newStats);
 4587      }
 4588    }
 4589  }]);
 4590  return StatisticsGatherer;
 4591 }();
 4592
 4593 var StatisticsStorage = function () {
 4594  function StatisticsStorage(key) {
 4595    classCallCheck(this, StatisticsStorage);
 4596
 4597    this.key = key;
 4598  }
 4599
 4600  createClass(StatisticsStorage, [{
 4601    key: 'read',
 4602    value: function read() {
 4603      var localStorageStatsString = localStorage.getItem(this.key);
 4604      try {
 4605        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');
 4606      } catch (e) {
 4607        return {};
 4608      }
 4609    }
 4610  }, {
 4611    key: 'write',
 4612    value: function write(data) {
 4613      localStorage.setItem(this.key, data);
 4614    }
 4615  }, {
 4616    key: 'clear',
 4617    value: function clear() {
 4618      localStorage.removeItem(this.key);
 4619    }
 4620  }, {
 4621    key: 'isEmpty',
 4622    value: function isEmpty() {
 4623      var storedStats = this.read();
 4624      var empty = true;
 4625      Object.keys(storedStats).forEach(function (key) {
 4626        if (Object.keys(storedStats[key]).length > 0) {
 4627          empty = false;
 4628        }
 4629      });
 4630
 4631      return empty;
 4632    }
 4633  }]);
 4634  return StatisticsStorage;
 4635 }();
 4636
 4637 var StatisticsSender = function () {
 4638  function StatisticsSender(url, logger) {
 4639    classCallCheck(this, StatisticsSender);
 4640
 4641    this.url = url;
 4642    this.logger = logger;
 4643  }
 4644
 4645  createClass(StatisticsSender, [{
 4646    key: 'send',
 4647    value: function send(data, errorHandler) {
 4648      var logger = this.logger;
 4649
 4650      if (navigator.onLine === false) {
 4651        logger.debug("Offline, can't send");
 4652        errorHandler();
 4653        return;
 4654      }
 4655      logger.debug("Sending data to " + this.url);
 4656
 4657      var req = new XMLHttpRequest();
 4658      req.withCredentials = true;
 4659      req.addEventListener("load", function () {
 4660        // Stats sent, nothing more to do
 4661        logger.debug("Response: " + req.responseText);
 4662      });
 4663      req.addEventListener("error", function () {
 4664        logger.debug("Send failed");
 4665        errorHandler();
 4666      });
 4667      req.addEventListener("abort", function () {
 4668        logger.debug("Send aborted");
 4669        errorHandler();
 4670      });
 4671      req.open("POST", this.url);
 4672      req.setRequestHeader("Content-Type", "application/json");
 4673      req.send(data);
 4674    }
 4675  }]);
 4676  return StatisticsSender;
 4677 }();
 4678
 4679 var StatisticsLogger = function () {
 4680  function StatisticsLogger(id) {
 4681    classCallCheck(this, StatisticsLogger);
 4682
 4683    this.id = id;
 4684  }
 4685
 4686  createClass(StatisticsLogger, [{
 4687    key: '_isDebug',
 4688    value: function _isDebug() {
 4689      return localStorage.getItem("vaadin." + this.id + ".debug");
 4690    }
 4691  }, {
 4692    key: 'debug',
 4693    value: function debug(msg) {
 4694      if (this._isDebug()) {
 4695        console.info(this.id + ": " + msg);
 4696      }
 4697    }
 4698  }]);
 4699  return StatisticsLogger;
 4700 }();
 4701
 4702 var UsageStatistics = function () {
4703  function UsageStatistics() {
 4704    classCallCheck(this, UsageStatistics);
 4705
 4706    this.now = new Date();
 4707    this.timeNow = this.now.getTime();
 4708    this.gatherDelay = 10; // Delay between loading this file and gathering stats
 4709    this.initialDelay = 24 * 60 * 60;
 4710
 4711    this.logger = new StatisticsLogger("statistics");
 4712    this.storage = new StatisticsStorage("vaadin.statistics.basket");
 4713    this.gatherer = new StatisticsGatherer(this.logger);
 4714    this.sender = new StatisticsSender("https://tools.vaadin.com/usage-stats/submit", this.logger);
 4715  }
 4716
 4717  createClass(UsageStatistics, [{
 4718    key: 'maybeGatherAndSend',
 4719    value: function maybeGatherAndSend() {
 4720      var _this = this;
 4721
 4722      if (localStorage.getItem(UsageStatistics.optOutKey)) {
 4723        return;
 4724      }
 4725      this.gatherer.gather(this.storage);
 4726      setTimeout(function () {
 4727        _this.maybeSend();
 4728      }, this.gatherDelay * 1000);
 4729    }
 4730  }, {
 4731    key: 'lottery',
 4732    value: function lottery() {
 4733      return true;
 4734    }
 4735  }, {
 4736    key: 'currentMonth',
 4737    value: function currentMonth() {
 4738      return this.now.getYear() * 12 + this.now.getMonth();
 4739    }
 4740  }, {
 4741    key: 'maybeSend',
 4742    value: function maybeSend() {
 4743      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));
 4744      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));
 4745
 4746      if (!firstUse) {
 4747        // Use a grace period to avoid interfering with tests, incognito mode etc
 4748        firstUse = this.timeNow;
 4749        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);
 4750      }
 4751
 4752      if (this.timeNow < firstUse + this.initialDelay * 1000) {
 4753        this.logger.debug("No statistics will be sent until the initial delay of " + this.initialDelay + "s has passed");
 4754        return;
 4755      }
 4756      if (this.currentMonth() <= monthProcessed) {
 4757        this.logger.debug("This month has already been processed");
 4758        return;
 4759      }
 4760      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());
 4761      // Use random sampling
 4762      if (this.lottery()) {
 4763        this.logger.debug("Congratulations, we have a winner!");
 4764      } else {
 4765        this.logger.debug("Sorry, no stats from you this time");
 4766        return;
 4767      }
 4768
 4769      this.send();
 4770    }
 4771  }, {
 4772    key: 'send',
 4773    value: function send() {
 4774      // Ensure we have the latest data
 4775      this.gatherer.gather(this.storage);
 4776
 4777      // Read, send and clean up
 4778      var data = this.storage.read();
 4779      data["firstUse"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));
 4780      data["usageStatisticsVersion"] = UsageStatistics.version;
 4781      var info = 'This request contains usage statistics gathered from the application running in development mode. \n\nStatistics gathering is automatically disabled and excluded from production bu
 4782      var self = this;
 4783      this.sender.send(info + JSON.stringify(data), function () {
 4784        // Revert the 'month processed' flag
 4785        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);
 4786      });
 4787    }
 4788  }], [{
 4789    key: 'version',
 4790    get: function get$1() {
 4791      return '2.1.2';
 4792    }
 4793  }, {
 4794    key: 'firstUseKey',
 4795    get: function get$1() {
 4796      return 'vaadin.statistics.firstuse';
 4797    }
 4798  }, {
 4799    key: 'monthProcessedKey',
 4800    get: function get$1() {
 4801      return 'vaadin.statistics.monthProcessed';
 4802    }
 4803  }, {
 4804    key: 'optOutKey',
 4805    get: function get$1() {
 4806      return 'vaadin.statistics.optout';
 4807    }
 4808  }]);
 4809  return UsageStatistics;
 4810 }();
 4811
 4812 try {
 4813  window.Vaadin = window.Vaadin || {};
 4814  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();
 4815  window.Vaadin.usageStatsChecker.maybeGatherAndSend();
 4816 } catch (e) {
 4817  // Intentionally ignored as this is not a problem in the app being developed
 4818 }
 4819
 4820 }());
 4821
 4822  vaadin-dev-mode:end **/}void 0===window.Vaadin.developmentMode&&(window.Vaadin.developmentMode=function(){try{return!!localStorage.getItem("vaadin.developmentmode.force")||["localhost","127.0.0.1"
 4823 /**
 4824 * @license
 4825 * Copyright 2017 Google LLC
 4826 * SPDX-License-Identifier: BSD-3-Clause
 4827 */const Bo=0,Uo=1,Vo=2,jo=3,Ho=Symbol();class Wo{get taskComplete(){return this.t||(1===this.i?this.t=new Promise(((t,e)=>{this.o=t,this.h=e})):3===this.i?this.t=Promise.reject(this.l):this.t=Promi
 4828    <div class="browser-impl-${s}">
 4829      <sl-tooltip
 4830        content=${o?`Since version ${o}`:"Not available"}
 4831      >
 4832        <img src="/public/img/${i}_24x24.png" />
 4833      </sl-tooltip>
 4834    </div>
 4835  `};function ba(){return V`<span class="missing percent">${na}</span>`}function va(t){if(void 0===t)return ba();let e=Number(100*t).toFixed(1);return"100.0"===e&&(e="100"),V`<span class="percent">$
 4836    class="missing percent"
 4837    content="WPT metrics are not applicable to TC39 features."
 4838  >
 4839    <sl-icon-button name="info-circle" label="TC39 feature"></sl-icon-button>
 4840  </sl-tooltip>`),n=t.feature_id,["avif","counter-set","declarative-shadow-dom","device-orientation-events","preserves-pitch","storage-access","webtransport","webvtt"].includes(n)&&(s=V` <sl-tooltip
 4841    class="missing percent"
 4842    content="Insufficient test coverage."
 4843  >
 4844    <sl-icon-button
 4845      name="info-circle"
 4846      label="insufficent-test-coverage"
 4847    ></sl-icon-button>
 4848  </sl-tooltip>`),l=t.wpt?.stable?.[i]?.metadata,l&&"status"in l&&"C"===l.status&&(s=V` <sl-tooltip
 4849    class="missing percent"
4850    content="Feature's WPT run metrics are incomplete due to a crash. See wpt.fyi for more information."
 4851  >
 4852    <sl-icon-button
 4853      name="exclamation-triangle"
 4854      label="feature-crash-warning"
 4855    ></sl-icon-button>
 4856  </sl-tooltip>`),V`
 4857      ${s}
 4858    </div>
 4859  `},wa=(t,e,{browser:i})=>{const r=t.wpt?.experimental?.[i]?.score;return va(r)},_a=t=>{const e=xa[t].options.browser;if(!e)throw new Error("browser is undefined");const i=xa[t].options.channel;if(
 4860      class="baseline-date-block baseline-date-block-${i}"
 4861    >
 4862      <span class="baseline-date-header">${t}:</span>
 4863      <span class="baseline-date">${e}</span>
 4864    </div>`}let c=V``;const d=t.baseline?.low_date;d&&n&&(c=l("Newly available",fa(d),"newly"));let h=V``;const u=t.baseline?.high_date;if(u&&a)h=l("Widely available",fa(u),"widely");else if(d&&a){c
 4865    <img
 4866      height="16"
 4867      src="/public/img/${s.icon}"
 4868      title=${s.word}
 4869    />
 4870    ${c} ${h}
 4871  `},options:{columnOptions:[{nameInDialog:"Show Baseline status low date",columnOptionKey:da.BaselineStatusLowDate},{nameInDialog:"Show Baseline status high date",columnOptionKey:da.BaselineStatusH
 4872    <th title="Click to sort" class="${o?.cellClass||""} sortable">
 4873      <a href=${s}> ${r} ${o?.headerHtml} </a>
 4874    </th>
 4875  `}(t,e,i)}function Sa(t,e){const i=xa[t];return V`
 4876    <th
 4877      title=${de(e)}
 4878      class="${i?.cellClass||""} unsortable"
 4879    >
 4880      ${i?.headerHtml}
 4881    </th>
 4882  `}function $a(t){let e=t.toLowerCase().split(",");e=e.map((t=>t.trim())).filter((t=>t));const i=[];for(const t of e)ca[t]&&i.push(ca[t]);return i.length>0?i:ua}function Ea(t){let e=t.toLowerCase()
 4883        #checkboxes {
 4884          gap: var(--content-padding);
 4885        }
 4886        #button-row {
 4887          padding-top: var(--content-padding);
 4888        }
 4889
 4890        sl-dialog::part(body) {
 4891          padding-top: 0;
 4892        }
 4893      `]}async openWithContext(t){this.location=t;const e=this.shadowRoot?.querySelector("sl-dialog");e?.show&&await e.show()}async hide(){const t=this.shadowRoot?.querySelector("sl-dialog");t?.hide
 4894        <sl-tree-item expanded>
 4895          <sl-checkbox
 4896            value="${o}"
 4897            class="column"
 4898            ?checked=${t.includes(la[s])}
 4899          >
 4900            ${a}
 4901          </sl-checkbox>
 4902          ${n?.map((i=>V`
 4903              <sl-tree-item expanded>
 4904                <sl-checkbox
 4905                  value=${i.columnOptionKey}
 4906                  class="column-option"
 4907                  ?checked=${t.includes(la[s])&&e.includes(i.columnOptionKey)}
 4908                  >${i.nameInDialog}</sl-checkbox
 4909                >
 4910              </sl-tree-item>
 4911            `))}
 4912        </sl-tree-item>
 4913      `;i.push(l)}const r=V`<sl-tree>${i}</sl-tree>`;return V`
 4914      <div class="vbox" id="checkboxes">${r}</div>
 4915      <div id="button-row">
 4916        <sl-button
 4917          id="columns-save-button"
 4918          size="small"
 4919          variant="primary"
 4920          @click=${this.handleSave}
 4921          >Save
 4922        </sl-button>
 4923      </div>
 4924    `}render(){return V`
 4925      <sl-dialog label="Select table columns" style="--width:fit-content">
 4926        ${this.renderDialogContent()}
 4927      </sl-dialog>
 4928    `}};Ta([Nt()],Aa.prototype,"location",void 0),Aa=Ta([Rt("webstatus-columns-dialog")],Aa);let Da=null;var Oa=a`
 4929  :host(:not(:focus-within)) {
 4930    position: absolute !important;
 4931    width: 1px !important;
 4932    height: 1px !important;
 4933    clip: rect(0 0 0 0) !important;
 4934    clip-path: inset(50%) !important;
 4935    border: none !important;
 4936    overflow: hidden !important;
 4937    white-space: nowrap !important;
 4938    padding: 0 !important;
 4939  }
 4940 `,za=class extends Ht{render(){return V` <slot></slot> `}};za.styles=[Pt,Oa],za.define("sl-visually-hidden");var Pa=a`
 4941  :host {
 4942    --padding: 0;
 4943
 4944    display: none;
 4945  }
 4946
 4947  :host([active]) {
 4948    display: block;
 4949  }
 4950
 4951  .tab-panel {
 4952    display: block;
 4953    padding: var(--padding);
 4954  }
 4955 `,Ra=0,La=class extends Ht{constructor(){super(...arguments),this.attrId=++Ra,this.componentId=`sl-tab-panel-${this.attrId}`,this.name="",this.active=!1}connectedCallback(){super.connectedCallback()
 4956      <slot
 4957        part="base"
 4958        class=${se({"tab-panel":!0,"tab-panel--active":this.active})}
 4959      ></slot>
 4960    `}};La.styles=[Pt,Pa],At([Mt({reflect:!0})],La.prototype,"name",2),At([Mt({type:Boolean,reflect:!0})],La.prototype,"active",2),At([zt("active")],La.prototype,"handleActiveChange",1),La.define("s
 4961  :host {
 4962    display: block;
 4963  }
 4964
 4965  .textarea {
 4966    display: grid;
 4967    align-items: center;
 4968    position: relative;
 4969    width: 100%;
 4970    font-family: var(--sl-input-font-family);
 4971    font-weight: var(--sl-input-font-weight);
 4972    line-height: var(--sl-line-height-normal);
 4973    letter-spacing: var(--sl-input-letter-spacing);
 4974    vertical-align: middle;
 4975    transition:
 4976      var(--sl-transition-fast) color,
 4977      var(--sl-transition-fast) border,
 4978      var(--sl-transition-fast) box-shadow,
 4979      var(--sl-transition-fast) background-color;
 4980    cursor: text;
 4981  }
 4982
 4983  /* Standard textareas */
 4984  .textarea--standard {
 4985    background-color: var(--sl-input-background-color);
 4986    border: solid var(--sl-input-border-width) var(--sl-input-border-color);
 4987  }
 4988
 4989  .textarea--standard:hover:not(.textarea--disabled) {
 4990    background-color: var(--sl-input-background-color-hover);
 4991    border-color: var(--sl-input-border-color-hover);
 4992  }
 4993  .textarea--standard:hover:not(.textarea--disabled) .textarea__control {
 4994    color: var(--sl-input-color-hover);
 4995  }
 4996
4997  .textarea--standard.textarea--focused:not(.textarea--disabled) {
 4998    background-color: var(--sl-input-background-color-focus);
 4999    border-color: var(--sl-input-border-color-focus);
 5000    color: var(--sl-input-color-focus);
 5001    box-shadow: 0 0 0 var(--sl-focus-ring-width) var(--sl-input-focus-ring-color);
 5002  }
 5003
 5004  .textarea--standard.textarea--focused:not(.textarea--disabled) .textarea__control {
 5005    color: var(--sl-input-color-focus);
 5006  }
 5007
 5008  .textarea--standard.textarea--disabled {
 5009    background-color: var(--sl-input-background-color-disabled);
 5010    border-color: var(--sl-input-border-color-disabled);
 5011    opacity: 0.5;
 5012    cursor: not-allowed;
 5013  }
 5014
 5015  .textarea__control,
 5016  .textarea__size-adjuster {
 5017    grid-area: 1 / 1 / 2 / 2;
 5018  }
 5019
 5020  .textarea__size-adjuster {
 5021    visibility: hidden;
 5022    pointer-events: none;
 5023    opacity: 0;
 5024  }
 5025
 5026  .textarea--standard.textarea--disabled .textarea__control {
 5027    color: var(--sl-input-color-disabled);
 5028  }
 5029
 5030  .textarea--standard.textarea--disabled .textarea__control::placeholder {
 5031    color: var(--sl-input-placeholder-color-disabled);
 5032  }
 5033
 5034  /* Filled textareas */
 5035  .textarea--filled {
 5036    border: none;
 5037    background-color: var(--sl-input-filled-background-color);
 5038    color: var(--sl-input-color);
 5039  }
 5040
 5041  .textarea--filled:hover:not(.textarea--disabled) {
 5042    background-color: var(--sl-input-filled-background-color-hover);
 5043  }
 5044
 5045  .textarea--filled.textarea--focused:not(.textarea--disabled) {
 5046    background-color: var(--sl-input-filled-background-color-focus);
 5047    outline: var(--sl-focus-ring);
 5048    outline-offset: var(--sl-focus-ring-offset);
 5049  }
 5050
 5051  .textarea--filled.textarea--disabled {
 5052    background-color: var(--sl-input-filled-background-color-disabled);
 5053    opacity: 0.5;
 5054    cursor: not-allowed;
 5055  }
 5056
 5057  .textarea__control {
 5058    font-family: inherit;
 5059    font-size: inherit;
 5060    font-weight: inherit;
 5061    line-height: 1.4;
 5062    color: var(--sl-input-color);
 5063    border: none;
 5064    background: none;
 5065    box-shadow: none;
 5066    cursor: inherit;
 5067    -webkit-appearance: none;
 5068  }
 5069
 5070  .textarea__control::-webkit-search-decoration,
 5071  .textarea__control::-webkit-search-cancel-button,
 5072  .textarea__control::-webkit-search-results-button,
 5073  .textarea__control::-webkit-search-results-decoration {
 5074    -webkit-appearance: none;
 5075  }
 5076
 5077  .textarea__control::placeholder {
 5078    color: var(--sl-input-placeholder-color);
 5079    user-select: none;
 5080    -webkit-user-select: none;
 5081  }
 5082
 5083  .textarea__control:focus {
 5084    outline: none;
 5085  }
 5086
 5087  /*
 5088   * Size modifiers
 5089   */
 5090
 5091  .textarea--small {
 5092    border-radius: var(--sl-input-border-radius-small);
 5093    font-size: var(--sl-input-font-size-small);
 5094  }
 5095
 5096  .textarea--small .textarea__control {
 5097    padding: 0.5em var(--sl-input-spacing-small);
 5098  }
 5099
 5100  .textarea--medium {
 5101    border-radius: var(--sl-input-border-radius-medium);
 5102    font-size: var(--sl-input-font-size-medium);
 5103  }
 5104
 5105  .textarea--medium .textarea__control {
 5106    padding: 0.5em var(--sl-input-spacing-medium);
 5107  }
 5108
 5109  .textarea--large {
 5110    border-radius: var(--sl-input-border-radius-large);
 5111    font-size: var(--sl-input-font-size-large);
 5112  }
 5113
 5114  .textarea--large .textarea__control {
 5115    padding: 0.5em var(--sl-input-spacing-large);
 5116  }
 5117
 5118  /*
 5119   * Resize types
 5120   */
 5121
 5122  .textarea--resize-none .textarea__control {
 5123    resize: none;
 5124  }
 5125
 5126  .textarea--resize-vertical .textarea__control {
 5127    resize: vertical;
 5128  }
 5129
 5130  .textarea--resize-auto .textarea__control {
 5131    height: auto;
 5132    resize: none;
 5133    overflow-y: hidden;
 5134  }
 5135 `,Ma=class extends Ht{constructor(){super(...arguments),this.formControlController=new qe(this,{assumeInteractionOn:["sl-blur","sl-input"]}),this.hasSlotController=new ke(this,"help-text","label"),t
 5136      <div
 5137        part="form-control"
 5138        class=${se({"form-control":!0,"form-control--small":"small"===this.size,"form-control--medium":"medium"===this.size,"form-control--large":"large"===this.size,"form-control--has-label":i,"for
 5139      >
 5140        <label
 5141          part="form-control-label"
 5142          class="form-control__label"
 5143          for="input"
5144          aria-hidden=${i?"false":"true"}
 5145        >
 5146          <slot name="label">${this.label}</slot>
 5147        </label>
 5148
 5149        <div part="form-control-input" class="form-control-input">
 5150          <div
 5151            part="base"
 5152            class=${se({textarea:!0,"textarea--small":"small"===this.size,"textarea--medium":"medium"===this.size,"textarea--large":"large"===this.size,"textarea--standard":!this.filled,"textarea--f
 5153          >
 5154            <textarea
 5155              part="textarea"
 5156              id="input"
 5157              class="textarea__control"
 5158              title=${this.title}
 5159              name=${de(this.name)}
 5160              .value=${ri(this.value)}
 5161              ?disabled=${this.disabled}
 5162              ?readonly=${this.readonly}
 5163              ?required=${this.required}
 5164              placeholder=${de(this.placeholder)}
 5165              rows=${de(this.rows)}
 5166              minlength=${de(this.minlength)}
 5167              maxlength=${de(this.maxlength)}
 5168              autocapitalize=${de(this.autocapitalize)}
 5169              autocorrect=${de(this.autocorrect)}
 5170              ?autofocus=${this.autofocus}
 5171              spellcheck=${de(this.spellcheck)}
 5172              enterkeyhint=${de(this.enterkeyhint)}
 5173              inputmode=${de(this.inputmode)}
 5174              aria-describedby="help-text"
 5175              @change=${this.handleChange}
 5176              @input=${this.handleInput}
 5177              @invalid=${this.handleInvalid}
 5178              @focus=${this.handleFocus}
 5179              @blur=${this.handleBlur}
 5180            ></textarea>
 5181            <!-- This "adjuster" exists to prevent layout shifting. https://github.com/shoelace-style/shoelace/issues/2180 -->
 5182            <div part="textarea-adjuster" class="textarea__size-adjuster" ?hidden=${"auto"!==this.resize}></div>
 5183          </div>
 5184        </div>
 5185
 5186        <div
 5187          part="form-control-help-text"
 5188          id="help-text"
 5189          class="form-control__help-text"
 5190          aria-hidden=${r?"false":"true"}
 5191        >
 5192          <slot name="help-text">${this.helpText}</slot>
 5193        </div>
 5194      </div>
 5195    `}};Ma.styles=[Pt,ii,Fa],At([Vt(".textarea__control")],Ma.prototype,"input",2),At([Vt(".textarea__size-adjuster")],Ma.prototype,"sizeAdjuster",2),At([Nt()],Ma.prototype,"hasFocus",2),At([Mt()],M
 5196  :host {
 5197    display: inline-block;
 5198  }
 5199
 5200  .tab {
 5201    display: inline-flex;
 5202    align-items: center;
 5203    font-family: var(--sl-font-sans);
 5204    font-size: var(--sl-font-size-small);
 5205    font-weight: var(--sl-font-weight-semibold);
 5206    border-radius: var(--sl-border-radius-medium);
 5207    color: var(--sl-color-neutral-600);
 5208    padding: var(--sl-spacing-medium) var(--sl-spacing-large);
 5209    white-space: nowrap;
 5210    user-select: none;
 5211    -webkit-user-select: none;
 5212    cursor: pointer;
 5213    transition:
 5214      var(--transition-speed) box-shadow,
 5215      var(--transition-speed) color;
 5216  }
 5217
 5218  .tab:hover:not(.tab--disabled) {
 5219    color: var(--sl-color-primary-600);
 5220  }
 5221
 5222  :host(:focus) {
 5223    outline: transparent;
 5224  }
 5225
 5226  :host(:focus-visible) {
 5227    color: var(--sl-color-primary-600);
 5228    outline: var(--sl-focus-ring);
 5229    outline-offset: calc(-1 * var(--sl-focus-ring-width) - var(--sl-focus-ring-offset));
 5230  }
 5231
 5232  .tab.tab--active:not(.tab--disabled) {
 5233    color: var(--sl-color-primary-600);
 5234  }
 5235
 5236  .tab.tab--closable {
 5237    padding-inline-end: var(--sl-spacing-small);
 5238  }
 5239
 5240  .tab.tab--disabled {
 5241    opacity: 0.5;
 5242    cursor: not-allowed;
 5243  }
 5244
 5245  .tab__close-button {
 5246    font-size: var(--sl-font-size-small);
 5247    margin-inline-start: var(--sl-spacing-small);
 5248  }
 5249
 5250  .tab__close-button::part(base) {
 5251    padding: var(--sl-spacing-3x-small);
 5252  }
 5253
 5254  @media (forced-colors: active) {
 5255    .tab.tab--active:not(.tab--disabled) {
 5256      outline: solid 1px transparent;
 5257      outline-offset: -3px;
 5258    }
 5259  }
 5260 `,Ba=0,Ua=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.attrId=++Ba,this.componentId=`sl-tab-${this.attrId}`,this.panel="",this.active=!1,this.closable=!1,this.d
 5261      <div
 5262        part="base"
 5263        class=${se({tab:!0,"tab--active":this.active,"tab--closable":this.closable,"tab--disabled":this.disabled})}
 5264      >
 5265        <slot></slot>
 5266        ${this.closable?V`
 5267              <sl-icon-button
 5268                part="close-button"
 5269                exportparts="base:close-button__base"
 5270                name="x-lg"
 5271                library="system"
 5272                label=${this.localize.term("close")}
 5273                class="tab__close-button"
 5274                @click=${this.handleCloseClick}
 5275                tabindex="-1"
 5276              ></sl-icon-button>
 5277            `:""}
 5278      </div>
 5279    `}};Ua.styles=[Pt,Na],Ua.dependencies={"sl-icon-button":he},At([Vt(".tab")],Ua.prototype,"tab",2),At([Mt({reflect:!0})],Ua.prototype,"panel",2),At([Mt({type:Boolean,reflect:!0})],Ua.prototype,"a
 5280  :host {
 5281    --indicator-color: var(--sl-color-primary-600);
 5282    --track-color: var(--sl-color-neutral-200);
 5283    --track-width: 2px;
 5284
 5285    display: block;
 5286  }
 5287
 5288  .tab-group {
 5289    display: flex;
 5290    border-radius: 0;
5291  }
 5292
 5293  .tab-group__tabs {
 5294    display: flex;
 5295    position: relative;
 5296  }
 5297
 5298  .tab-group__indicator {
 5299    position: absolute;
 5300    transition:
 5301      var(--sl-transition-fast) translate ease,
 5302      var(--sl-transition-fast) width ease;
 5303  }
 5304
 5305  .tab-group--has-scroll-controls .tab-group__nav-container {
 5306    position: relative;
 5307    padding: 0 var(--sl-spacing-x-large);
 5308  }
 5309
 5310  .tab-group--has-scroll-controls .tab-group__scroll-button--start--hidden,
 5311  .tab-group--has-scroll-controls .tab-group__scroll-button--end--hidden {
 5312    visibility: hidden;
 5313  }
 5314
 5315  .tab-group__body {
 5316    display: block;
 5317    overflow: auto;
 5318  }
 5319
 5320  .tab-group__scroll-button {
 5321    display: flex;
 5322    align-items: center;
 5323    justify-content: center;
 5324    position: absolute;
 5325    top: 0;
 5326    bottom: 0;
 5327    width: var(--sl-spacing-x-large);
 5328  }
 5329
 5330  .tab-group__scroll-button--start {
 5331    left: 0;
 5332  }
 5333
 5334  .tab-group__scroll-button--end {
 5335    right: 0;
 5336  }
 5337
 5338  .tab-group--rtl .tab-group__scroll-button--start {
 5339    left: auto;
 5340    right: 0;
 5341  }
 5342
 5343  .tab-group--rtl .tab-group__scroll-button--end {
 5344    left: 0;
 5345    right: auto;
 5346  }
 5347
 5348  /*
 5349   * Top
 5350   */
 5351
 5352  .tab-group--top {
 5353    flex-direction: column;
 5354  }
 5355
 5356  .tab-group--top .tab-group__nav-container {
 5357    order: 1;
 5358  }
 5359
 5360  .tab-group--top .tab-group__nav {
 5361    display: flex;
 5362    overflow-x: auto;
 5363
 5364    /* Hide scrollbar in Firefox */
 5365    scrollbar-width: none;
 5366  }
 5367
 5368  /* Hide scrollbar in Chrome/Safari */
 5369  .tab-group--top .tab-group__nav::-webkit-scrollbar {
 5370    width: 0;
 5371    height: 0;
 5372  }
 5373
 5374  .tab-group--top .tab-group__tabs {
 5375    flex: 1 1 auto;
 5376    position: relative;
 5377    flex-direction: row;
 5378    border-bottom: solid var(--track-width) var(--track-color);
 5379  }
 5380
 5381  .tab-group--top .tab-group__indicator {
 5382    bottom: calc(-1 * var(--track-width));
 5383    border-bottom: solid var(--track-width) var(--indicator-color);
 5384  }
 5385
 5386  .tab-group--top .tab-group__body {
 5387    order: 2;
 5388  }
 5389
 5390  .tab-group--top ::slotted(sl-tab-panel) {
 5391    --padding: var(--sl-spacing-medium) 0;
 5392  }
 5393
 5394  /*
 5395   * Bottom
 5396   */
 5397
 5398  .tab-group--bottom {
 5399    flex-direction: column;
 5400  }
 5401
 5402  .tab-group--bottom .tab-group__nav-container {
 5403    order: 2;
 5404  }
 5405
 5406  .tab-group--bottom .tab-group__nav {
 5407    display: flex;
 5408    overflow-x: auto;
 5409
 5410    /* Hide scrollbar in Firefox */
 5411    scrollbar-width: none;
 5412  }
 5413
 5414  /* Hide scrollbar in Chrome/Safari */
 5415  .tab-group--bottom .tab-group__nav::-webkit-scrollbar {
 5416    width: 0;
 5417    height: 0;
 5418  }
 5419
 5420  .tab-group--bottom .tab-group__tabs {
 5421    flex: 1 1 auto;
 5422    position: relative;
 5423    flex-direction: row;
 5424    border-top: solid var(--track-width) var(--track-color);
 5425  }
 5426
 5427  .tab-group--bottom .tab-group__indicator {
 5428    top: calc(-1 * var(--track-width));
 5429    border-top: solid var(--track-width) var(--indicator-color);
 5430  }
 5431
 5432  .tab-group--bottom .tab-group__body {
 5433    order: 1;
 5434  }
 5435
 5436  .tab-group--bottom ::slotted(sl-tab-panel) {
 5437    --padding: var(--sl-spacing-medium) 0;
5438  }
 5439
 5440  /*
 5441   * Start
 5442   */
 5443
 5444  .tab-group--start {
 5445    flex-direction: row;
 5446  }
 5447
 5448  .tab-group--start .tab-group__nav-container {
 5449    order: 1;
 5450  }
 5451
 5452  .tab-group--start .tab-group__tabs {
 5453    flex: 0 0 auto;
 5454    flex-direction: column;
 5455    border-inline-end: solid var(--track-width) var(--track-color);
 5456  }
 5457
 5458  .tab-group--start .tab-group__indicator {
 5459    right: calc(-1 * var(--track-width));
 5460    border-right: solid var(--track-width) var(--indicator-color);
 5461  }
 5462
 5463  .tab-group--start.tab-group--rtl .tab-group__indicator {
 5464    right: auto;
 5465    left: calc(-1 * var(--track-width));
 5466  }
 5467
 5468  .tab-group--start .tab-group__body {
 5469    flex: 1 1 auto;
 5470    order: 2;
 5471  }
 5472
 5473  .tab-group--start ::slotted(sl-tab-panel) {
 5474    --padding: 0 var(--sl-spacing-medium);
 5475  }
 5476
 5477  /*
 5478   * End
 5479   */
 5480
 5481  .tab-group--end {
 5482    flex-direction: row;
 5483  }
 5484
 5485  .tab-group--end .tab-group__nav-container {
 5486    order: 2;
 5487  }
 5488
 5489  .tab-group--end .tab-group__tabs {
 5490    flex: 0 0 auto;
 5491    flex-direction: column;
 5492    border-left: solid var(--track-width) var(--track-color);
 5493  }
 5494
 5495  .tab-group--end .tab-group__indicator {
 5496    left: calc(-1 * var(--track-width));
 5497    border-inline-start: solid var(--track-width) var(--indicator-color);
 5498  }
 5499
 5500  .tab-group--end.tab-group--rtl .tab-group__indicator {
 5501    right: calc(-1 * var(--track-width));
 5502    left: auto;
 5503  }
 5504
 5505  .tab-group--end .tab-group__body {
 5506    flex: 1 1 auto;
 5507    order: 1;
 5508  }
 5509
 5510  .tab-group--end ::slotted(sl-tab-panel) {
 5511    --padding: 0 var(--sl-spacing-medium);
 5512  }
 5513 `,ja=a`
 5514  :host {
 5515    display: contents;
 5516  }
 5517 `,Ha=class extends Ht{constructor(){super(...arguments),this.observedElements=[],this.disabled=!1}connectedCallback(){super.connectedCallback(),this.resizeObserver=new ResizeObserver((t=>{this.emit(
 5518      <div
 5519        part="base"
 5520        class=${se({"tab-group":!0,"tab-group--top":"top"===this.placement,"tab-group--bottom":"bottom"===this.placement,"tab-group--start":"start"===this.placement,"tab-group--end":"end"===this.pla
 5521        @click=${this.handleClick}
 5522        @keydown=${this.handleKeyDown}
 5523      >
 5524        <div class="tab-group__nav-container" part="nav">
 5525          ${this.hasScrollControls?V`
 5526                <sl-icon-button
 5527                  part="scroll-button scroll-button--start"
 5528                  exportparts="base:scroll-button__base"
 5529                  class=${se({"tab-group__scroll-button":!0,"tab-group__scroll-button--start":!0,"tab-group__scroll-button--start--hidden":this.shouldHideScrollStartButton})}
 5530                  name=${t?"chevron-right":"chevron-left"}
 5531                  library="system"
 5532                  tabindex="-1"
 5533                  aria-hidden="true"
 5534                  label=${this.localize.term("scrollToStart")}
 5535                  @click=${this.handleScrollToStart}
 5536                ></sl-icon-button>
 5537              `:""}
 5538
 5539          <div class="tab-group__nav" @scrollend=${this.updateScrollButtons}>
 5540            <div part="tabs" class="tab-group__tabs" role="tablist">
 5541              <div part="active-tab-indicator" class="tab-group__indicator"></div>
 5542              <sl-resize-observer @sl-resize=${this.syncIndicator}>
 5543                <slot name="nav" @slotchange=${this.syncTabsAndPanels}></slot>
 5544              </sl-resize-observer>
 5545            </div>
 5546          </div>
 5547
 5548          ${this.hasScrollControls?V`
 5549                <sl-icon-button
 5550                  part="scroll-button scroll-button--end"
 5551                  exportparts="base:scroll-button__base"
 5552                  class=${se({"tab-group__scroll-button":!0,"tab-group__scroll-button--end":!0,"tab-group__scroll-button--end--hidden":this.shouldHideScrollEndButton})}
 5553                  name=${t?"chevron-left":"chevron-right"}
 5554                  library="system"
 5555                  tabindex="-1"
 5556                  aria-hidden="true"
 5557                  label=${this.localize.term("scrollToEnd")}
 5558                  @click=${this.handleScrollToEnd}
 5559                ></sl-icon-button>
 5560              `:""}
 5561        </div>
 5562
 5563        <slot part="body" class="tab-group__body" @slotchange=${this.syncTabsAndPanels}></slot>
 5564      </div>
 5565    `}};Wa.styles=[Pt,Va],Wa.dependencies={"sl-icon-button":he,"sl-resize-observer":Ha},At([Vt(".tab-group")],Wa.prototype,"tabGroup",2),At([Vt(".tab-group__body")],Wa.prototype,"body",2),At([Vt(".t
 5566  :host {
 5567    --divider-width: 4px;
 5568    --divider-hit-area: 12px;
 5569    --min: 0%;
 5570    --max: 100%;
 5571
 5572    display: grid;
 5573  }
 5574
 5575  .start,
 5576  .end {
 5577    overflow: hidden;
 5578  }
 5579
 5580  .divider {
 5581    flex: 0 0 var(--divider-width);
 5582    display: flex;
 5583    position: relative;
 5584    align-items: center;
5585    justify-content: center;
 5586    background-color: var(--sl-color-neutral-200);
 5587    color: var(--sl-color-neutral-900);
 5588    z-index: 1;
 5589  }
 5590
 5591  .divider:focus {
 5592    outline: none;
 5593  }
 5594
 5595  :host(:not([disabled])) .divider:focus-visible {
 5596    background-color: var(--sl-color-primary-600);
 5597    color: var(--sl-color-neutral-0);
 5598  }
 5599
 5600  :host([disabled]) .divider {
 5601    cursor: not-allowed;
 5602  }
 5603
 5604  /* Horizontal */
 5605  :host(:not([vertical], [disabled])) .divider {
 5606    cursor: col-resize;
 5607  }
 5608
 5609  :host(:not([vertical])) .divider::after {
 5610    display: flex;
 5611    content: '';
 5612    position: absolute;
 5613    height: 100%;
 5614    left: calc(var(--divider-hit-area) / -2 + var(--divider-width) / 2);
 5615    width: var(--divider-hit-area);
 5616  }
 5617
 5618  /* Vertical */
 5619  :host([vertical]) {
 5620    flex-direction: column;
 5621  }
 5622
 5623  :host([vertical]:not([disabled])) .divider {
 5624    cursor: row-resize;
 5625  }
 5626
 5627  :host([vertical]) .divider::after {
 5628    content: '';
 5629    position: absolute;
 5630    width: 100%;
 5631    top: calc(var(--divider-hit-area) / -2 + var(--divider-width) / 2);
 5632    height: var(--divider-hit-area);
 5633  }
 5634
 5635  @media (forced-colors: active) {
 5636    .divider {
 5637      outline: solid 1px transparent;
 5638    }
 5639  }
 5640 `;function Ka(t,e){function i(i){const r=t.getBoundingClientRect(),s=t.ownerDocument.defaultView,o=r.left+s.scrollX,a=r.top+s.scrollY,n=i.pageX-o,l=i.pageY-a;(null==e?void 0:e.onMove)&&e.onMove(n,l)
 5641      <slot name="start" part="panel start" class="start"></slot>
 5642
 5643      <div
 5644        part="divider"
 5645        class="divider"
 5646        tabindex=${de(this.disabled?void 0:"0")}
 5647        role="separator"
 5648        aria-valuenow=${this.position}
 5649        aria-valuemin="0"
 5650        aria-valuemax="100"
 5651        aria-label=${this.localize.term("resize")}
 5652        @keydown=${this.handleKeyDown}
 5653        @mousedown=${this.handleDrag}
 5654        @touchstart=${this.handleDrag}
 5655      >
 5656        <slot name="divider"></slot>
 5657      </div>
 5658
 5659      <slot name="end" part="panel end" class="end"></slot>
 5660    `}};Ya.styles=[Pt,qa],At([Vt(".divider")],Ya.prototype,"divider",2),At([Mt({type:Number,reflect:!0})],Ya.prototype,"position",2),At([Mt({attribute:"position-in-pixels",type:Number})],Ya.prototyp
 5661  :host {
 5662    display: inline-block;
 5663  }
 5664
 5665  :host([size='small']) {
 5666    --height: var(--sl-toggle-size-small);
 5667    --thumb-size: calc(var(--sl-toggle-size-small) + 4px);
 5668    --width: calc(var(--height) * 2);
 5669
 5670    font-size: var(--sl-input-font-size-small);
 5671  }
 5672
 5673  :host([size='medium']) {
 5674    --height: var(--sl-toggle-size-medium);
 5675    --thumb-size: calc(var(--sl-toggle-size-medium) + 4px);
 5676    --width: calc(var(--height) * 2);
 5677
 5678    font-size: var(--sl-input-font-size-medium);
 5679  }
 5680
 5681  :host([size='large']) {
 5682    --height: var(--sl-toggle-size-large);
 5683    --thumb-size: calc(var(--sl-toggle-size-large) + 4px);
 5684    --width: calc(var(--height) * 2);
 5685
 5686    font-size: var(--sl-input-font-size-large);
 5687  }
 5688
 5689  .switch {
 5690    position: relative;
 5691    display: inline-flex;
 5692    align-items: center;
 5693    font-family: var(--sl-input-font-family);
 5694    font-size: inherit;
 5695    font-weight: var(--sl-input-font-weight);
 5696    color: var(--sl-input-label-color);
 5697    vertical-align: middle;
 5698    cursor: pointer;
 5699  }
 5700
 5701  .switch__control {
 5702    flex: 0 0 auto;
 5703    position: relative;
 5704    display: inline-flex;
 5705    align-items: center;
 5706    justify-content: center;
 5707    width: var(--width);
 5708    height: var(--height);
 5709    background-color: var(--sl-color-neutral-400);
 5710    border: solid var(--sl-input-border-width) var(--sl-color-neutral-400);
 5711    border-radius: var(--height);
 5712    transition:
 5713      var(--sl-transition-fast) border-color,
 5714      var(--sl-transition-fast) background-color;
 5715  }
 5716
 5717  .switch__control .switch__thumb {
 5718    width: var(--thumb-size);
 5719    height: var(--thumb-size);
 5720    background-color: var(--sl-color-neutral-0);
 5721    border-radius: 50%;
 5722    border: solid var(--sl-input-border-width) var(--sl-color-neutral-400);
 5723    translate: calc((var(--width) - var(--height)) / -2);
 5724    transition:
 5725      var(--sl-transition-fast) translate ease,
 5726      var(--sl-transition-fast) background-color,
 5727      var(--sl-transition-fast) border-color,
 5728      var(--sl-transition-fast) box-shadow;
 5729  }
 5730
 5731  .switch__input {
5732    position: absolute;
 5733    opacity: 0;
 5734    padding: 0;
 5735    margin: 0;
 5736    pointer-events: none;
 5737  }
 5738
 5739  /* Hover */
 5740  .switch:not(.switch--checked):not(.switch--disabled) .switch__control:hover {
 5741    background-color: var(--sl-color-neutral-400);
 5742    border-color: var(--sl-color-neutral-400);
 5743  }
 5744
 5745  .switch:not(.switch--checked):not(.switch--disabled) .switch__control:hover .switch__thumb {
 5746    background-color: var(--sl-color-neutral-0);
 5747    border-color: var(--sl-color-neutral-400);
 5748  }
 5749
 5750  /* Focus */
 5751  .switch:not(.switch--checked):not(.switch--disabled) .switch__input:focus-visible ~ .switch__control {
 5752    background-color: var(--sl-color-neutral-400);
 5753    border-color: var(--sl-color-neutral-400);
 5754  }
 5755
 5756  .switch:not(.switch--checked):not(.switch--disabled) .switch__input:focus-visible ~ .switch__control .switch__thumb {
 5757    background-color: var(--sl-color-neutral-0);
 5758    border-color: var(--sl-color-primary-600);
 5759    outline: var(--sl-focus-ring);
 5760    outline-offset: var(--sl-focus-ring-offset);
 5761  }
 5762
 5763  /* Checked */
 5764  .switch--checked .switch__control {
 5765    background-color: var(--sl-color-primary-600);
 5766    border-color: var(--sl-color-primary-600);
 5767  }
 5768
 5769  .switch--checked .switch__control .switch__thumb {
 5770    background-color: var(--sl-color-neutral-0);
 5771    border-color: var(--sl-color-primary-600);
 5772    translate: calc((var(--width) - var(--height)) / 2);
 5773  }
 5774
 5775  /* Checked + hover */
 5776  .switch.switch--checked:not(.switch--disabled) .switch__control:hover {
 5777    background-color: var(--sl-color-primary-600);
 5778    border-color: var(--sl-color-primary-600);
 5779  }
 5780
 5781  .switch.switch--checked:not(.switch--disabled) .switch__control:hover .switch__thumb {
 5782    background-color: var(--sl-color-neutral-0);
 5783    border-color: var(--sl-color-primary-600);
 5784  }
 5785
 5786  /* Checked + focus */
 5787  .switch.switch--checked:not(.switch--disabled) .switch__input:focus-visible ~ .switch__control {
 5788    background-color: var(--sl-color-primary-600);
 5789    border-color: var(--sl-color-primary-600);
 5790  }
 5791
 5792  .switch.switch--checked:not(.switch--disabled) .switch__input:focus-visible ~ .switch__control .switch__thumb {
 5793    background-color: var(--sl-color-neutral-0);
 5794    border-color: var(--sl-color-primary-600);
 5795    outline: var(--sl-focus-ring);
 5796    outline-offset: var(--sl-focus-ring-offset);
 5797  }
 5798
 5799  /* Disabled */
 5800  .switch--disabled {
 5801    opacity: 0.5;
 5802    cursor: not-allowed;
 5803  }
 5804
 5805  .switch__label {
 5806    display: inline-block;
 5807    line-height: var(--height);
 5808    margin-inline-start: 0.5em;
 5809    user-select: none;
 5810    -webkit-user-select: none;
 5811  }
 5812
 5813  :host([required]) .switch__label::after {
 5814    content: var(--sl-input-required-content);
 5815    color: var(--sl-input-required-content-color);
 5816    margin-inline-start: var(--sl-input-required-content-offset);
 5817  }
 5818
 5819  @media (forced-colors: active) {
 5820    .switch.switch--checked:not(.switch--disabled) .switch__control:hover .switch__thumb,
 5821    .switch--checked .switch__control .switch__thumb {
 5822      background-color: ButtonText;
 5823    }
 5824  }
 5825 `,Ja=class extends Ht{constructor(){super(...arguments),this.formControlController=new qe(this,{value:t=>t.checked?t.value||"on":void 0,defaultValue:t=>t.defaultChecked,setValue:(t,e)=>t.checked=e})
 5826      <div
 5827        class=${se({"form-control":!0,"form-control--small":"small"===this.size,"form-control--medium":"medium"===this.size,"form-control--large":"large"===this.size,"form-control--has-help-text":e}
 5828      >
 5829        <label
 5830          part="base"
 5831          class=${se({switch:!0,"switch--checked":this.checked,"switch--disabled":this.disabled,"switch--focused":this.hasFocus,"switch--small":"small"===this.size,"switch--medium":"medium"===this.s
 5832        >
 5833          <input
 5834            class="switch__input"
 5835            type="checkbox"
 5836            title=${this.title}
 5837            name=${this.name}
 5838            value=${de(this.value)}
 5839            .checked=${ri(this.checked)}
 5840            .disabled=${this.disabled}
 5841            .required=${this.required}
 5842            role="switch"
 5843            aria-checked=${this.checked?"true":"false"}
 5844            aria-describedby="help-text"
 5845            @click=${this.handleClick}
 5846            @input=${this.handleInput}
 5847            @invalid=${this.handleInvalid}
 5848            @blur=${this.handleBlur}
 5849            @focus=${this.handleFocus}
 5850            @keydown=${this.handleKeyDown}
 5851          />
 5852
 5853          <span part="control" class="switch__control">
 5854            <span part="thumb" class="switch__thumb"></span>
 5855          </span>
 5856
 5857          <div part="label" class="switch__label">
 5858            <slot></slot>
 5859          </div>
 5860        </label>
 5861
 5862        <div
 5863          aria-hidden=${e?"false":"true"}
 5864          class="form-control__help-text"
 5865          id="help-text"
 5866          part="form-control-help-text"
 5867        >
 5868          <slot name="help-text">${this.helpText}</slot>
 5869        </div>
 5870      </div>
 5871    `}};Ja.styles=[Pt,ii,Xa],At([Vt('input[type="checkbox"]')],Ja.prototype,"input",2),At([Nt()],Ja.prototype,"hasFocus",2),At([Mt()],Ja.prototype,"title",2),At([Mt()],Ja.prototype,"name",2),At([Mt(
 5872  :host {
 5873    --thumb-size: 20px;
 5874    --tooltip-offset: 10px;
 5875    --track-color-active: var(--sl-color-neutral-200);
 5876    --track-color-inactive: var(--sl-color-neutral-200);
 5877    --track-active-offset: 0%;
 5878    --track-height: 6px;
5879
 5880    display: block;
 5881  }
 5882
 5883  .range {
 5884    position: relative;
 5885  }
 5886
 5887  .range__control {
 5888    --percent: 0%;
 5889    -webkit-appearance: none;
 5890    border-radius: 3px;
 5891    width: 100%;
 5892    height: var(--track-height);
 5893    background: transparent;
 5894    line-height: var(--sl-input-height-medium);
 5895    vertical-align: middle;
 5896    margin: 0;
 5897
 5898    background-image: linear-gradient(
 5899      to right,
 5900      var(--track-color-inactive) 0%,
 5901      var(--track-color-inactive) min(var(--percent), var(--track-active-offset)),
 5902      var(--track-color-active) min(var(--percent), var(--track-active-offset)),
 5903      var(--track-color-active) max(var(--percent), var(--track-active-offset)),
 5904      var(--track-color-inactive) max(var(--percent), var(--track-active-offset)),
 5905      var(--track-color-inactive) 100%
 5906    );
 5907  }
 5908
 5909  .range--rtl .range__control {
 5910    background-image: linear-gradient(
 5911      to left,
 5912      var(--track-color-inactive) 0%,
 5913      var(--track-color-inactive) min(var(--percent), var(--track-active-offset)),
 5914      var(--track-color-active) min(var(--percent), var(--track-active-offset)),
 5915      var(--track-color-active) max(var(--percent), var(--track-active-offset)),
 5916      var(--track-color-inactive) max(var(--percent), var(--track-active-offset)),
 5917      var(--track-color-inactive) 100%
 5918    );
 5919  }
 5920
 5921  /* Webkit */
 5922  .range__control::-webkit-slider-runnable-track {
 5923    width: 100%;
 5924    height: var(--track-height);
 5925    border-radius: 3px;
 5926    border: none;
 5927  }
 5928
 5929  .range__control::-webkit-slider-thumb {
 5930    border: none;
 5931    width: var(--thumb-size);
 5932    height: var(--thumb-size);
 5933    border-radius: 50%;
 5934    background-color: var(--sl-color-primary-600);
 5935    border: solid var(--sl-input-border-width) var(--sl-color-primary-600);
 5936    -webkit-appearance: none;
 5937    margin-top: calc(var(--thumb-size) / -2 + var(--track-height) / 2);
 5938    cursor: pointer;
 5939  }
 5940
 5941  .range__control:enabled::-webkit-slider-thumb:hover {
 5942    background-color: var(--sl-color-primary-500);
 5943    border-color: var(--sl-color-primary-500);
 5944  }
 5945
 5946  .range__control:enabled:focus-visible::-webkit-slider-thumb {
 5947    outline: var(--sl-focus-ring);
 5948    outline-offset: var(--sl-focus-ring-offset);
 5949  }
 5950
 5951  .range__control:enabled::-webkit-slider-thumb:active {
 5952    background-color: var(--sl-color-primary-500);
 5953    border-color: var(--sl-color-primary-500);
 5954    cursor: grabbing;
 5955  }
 5956
 5957  /* Firefox */
 5958  .range__control::-moz-focus-outer {
 5959    border: 0;
 5960  }
 5961
 5962  .range__control::-moz-range-progress {
 5963    background-color: var(--track-color-active);
 5964    border-radius: 3px;
 5965    height: var(--track-height);
 5966  }
 5967
 5968  .range__control::-moz-range-track {
 5969    width: 100%;
 5970    height: var(--track-height);
 5971    background-color: var(--track-color-inactive);
 5972    border-radius: 3px;
 5973    border: none;
 5974  }
 5975
 5976  .range__control::-moz-range-thumb {
 5977    border: none;
 5978    height: var(--thumb-size);
 5979    width: var(--thumb-size);
 5980    border-radius: 50%;
 5981    background-color: var(--sl-color-primary-600);
 5982    border-color: var(--sl-color-primary-600);
 5983    transition:
 5984      var(--sl-transition-fast) border-color,
 5985      var(--sl-transition-fast) background-color,
 5986      var(--sl-transition-fast) color,
 5987      var(--sl-transition-fast) box-shadow;
 5988    cursor: pointer;
 5989  }
 5990
 5991  .range__control:enabled::-moz-range-thumb:hover {
 5992    background-color: var(--sl-color-primary-500);
 5993    border-color: var(--sl-color-primary-500);
 5994  }
 5995
 5996  .range__control:enabled:focus-visible::-moz-range-thumb {
 5997    outline: var(--sl-focus-ring);
 5998    outline-offset: var(--sl-focus-ring-offset);
 5999  }
 6000
 6001  .range__control:enabled::-moz-range-thumb:active {
 6002    background-color: var(--sl-color-primary-500);
 6003    border-color: var(--sl-color-primary-500);
 6004    cursor: grabbing;
 6005  }
 6006
 6007  /* States */
 6008  .range__control:focus-visible {
 6009    outline: none;
 6010  }
 6011
 6012  .range__control:disabled {
 6013    opacity: 0.5;
 6014  }
 6015
 6016  .range__control:disabled::-webkit-slider-thumb {
 6017    cursor: not-allowed;
 6018  }
 6019
 6020  .range__control:disabled::-moz-range-thumb {
 6021    cursor: not-allowed;
 6022  }
 6023
 6024  /* Tooltip output */
 6025  .range__tooltip {
6026    position: absolute;
 6027    z-index: var(--sl-z-index-tooltip);
 6028    left: 0;
 6029    border-radius: var(--sl-tooltip-border-radius);
 6030    background-color: var(--sl-tooltip-background-color);
 6031    font-family: var(--sl-tooltip-font-family);
 6032    font-size: var(--sl-tooltip-font-size);
 6033    font-weight: var(--sl-tooltip-font-weight);
 6034    line-height: var(--sl-tooltip-line-height);
 6035    color: var(--sl-tooltip-color);
 6036    opacity: 0;
 6037    padding: var(--sl-tooltip-padding);
 6038    transition: var(--sl-transition-fast) opacity;
 6039    pointer-events: none;
 6040  }
 6041
 6042  .range__tooltip:after {
 6043    content: '';
 6044    position: absolute;
 6045    width: 0;
 6046    height: 0;
 6047    left: 50%;
 6048    translate: calc(-1 * var(--sl-tooltip-arrow-size));
 6049  }
 6050
 6051  .range--tooltip-visible .range__tooltip {
 6052    opacity: 1;
 6053  }
 6054
 6055  /* Tooltip on top */
 6056  .range--tooltip-top .range__tooltip {
 6057    top: calc(-1 * var(--thumb-size) - var(--tooltip-offset));
 6058  }
 6059
 6060  .range--tooltip-top .range__tooltip:after {
 6061    border-top: var(--sl-tooltip-arrow-size) solid var(--sl-tooltip-background-color);
 6062    border-left: var(--sl-tooltip-arrow-size) solid transparent;
 6063    border-right: var(--sl-tooltip-arrow-size) solid transparent;
 6064    top: 100%;
 6065  }
 6066
 6067  /* Tooltip on bottom */
 6068  .range--tooltip-bottom .range__tooltip {
 6069    bottom: calc(-1 * var(--thumb-size) - var(--tooltip-offset));
 6070  }
 6071
 6072  .range--tooltip-bottom .range__tooltip:after {
 6073    border-bottom: var(--sl-tooltip-arrow-size) solid var(--sl-tooltip-background-color);
 6074    border-left: var(--sl-tooltip-arrow-size) solid transparent;
 6075    border-right: var(--sl-tooltip-arrow-size) solid transparent;
 6076    bottom: 100%;
 6077  }
 6078
 6079  @media (forced-colors: active) {
 6080    .range__control,
 6081    .range__tooltip {
 6082      border: solid 1px transparent;
 6083    }
 6084
 6085    .range__control::-webkit-slider-thumb {
 6086      border: solid 1px transparent;
 6087    }
 6088
 6089    .range__control::-moz-range-thumb {
 6090      border: solid 1px transparent;
 6091    }
 6092
 6093    .range__tooltip:after {
 6094      display: none;
 6095    }
 6096  }
 6097 `,Za=class extends Ht{constructor(){super(...arguments),this.formControlController=new qe(this),this.hasSlotController=new ke(this,"help-text","label"),this.localize=new Re(this),this.hasFocus=!1,th
 6098      <div
 6099        part="form-control"
 6100        class=${se({"form-control":!0,"form-control--medium":!0,"form-control--has-label":i,"form-control--has-help-text":r})}
 6101      >
 6102        <label
 6103          part="form-control-label"
 6104          class="form-control__label"
 6105          for="input"
 6106          aria-hidden=${i?"false":"true"}
 6107        >
 6108          <slot name="label">${this.label}</slot>
 6109        </label>
 6110
 6111        <div part="form-control-input" class="form-control-input">
 6112          <div
 6113            part="base"
 6114            class=${se({range:!0,"range--disabled":this.disabled,"range--focused":this.hasFocus,"range--rtl":"rtl"===this.localize.dir(),"range--tooltip-visible":this.hasTooltip,"range--tooltip-top"
 6115            @mousedown=${this.handleThumbDragStart}
 6116            @mouseup=${this.handleThumbDragEnd}
 6117            @touchstart=${this.handleThumbDragStart}
 6118            @touchend=${this.handleThumbDragEnd}
 6119          >
 6120            <input
 6121              part="input"
 6122              id="input"
 6123              class="range__control"
 6124              title=${this.title}
 6125              type="range"
 6126              name=${de(this.name)}
 6127              ?disabled=${this.disabled}
 6128              min=${de(this.min)}
 6129              max=${de(this.max)}
 6130              step=${de(this.step)}
 6131              .value=${ri(this.value.toString())}
 6132              aria-describedby="help-text"
 6133              @change=${this.handleChange}
 6134              @focus=${this.handleFocus}
 6135              @input=${this.handleInput}
 6136              @invalid=${this.handleInvalid}
 6137              @blur=${this.handleBlur}
 6138            />
 6139            ${"none"===this.tooltip||this.disabled?"":V`
 6140                  <output part="tooltip" class="range__tooltip">
 6141                    ${"function"==typeof this.tooltipFormatter?this.tooltipFormatter(this.value):this.value}
 6142                  </output>
 6143                `}
 6144          </div>
 6145        </div>
 6146
 6147        <div
 6148          part="form-control-help-text"
 6149          id="help-text"
 6150          class="form-control__help-text"
 6151          aria-hidden=${r?"false":"true"}
 6152        >
 6153          <slot name="help-text">${this.helpText}</slot>
 6154        </div>
 6155      </div>
 6156    `}};Za.styles=[Pt,ii,Qa],At([Vt(".range__control")],Za.prototype,"input",2),At([Vt(".range__tooltip")],Za.prototype,"output",2),At([Nt()],Za.prototype,"hasFocus",2),At([Nt()],Za.prototype,"hasTo
 6157  :host {
 6158    --symbol-color: var(--sl-color-neutral-300);
 6159    --symbol-color-active: var(--sl-color-amber-500);
 6160    --symbol-size: 1.2rem;
 6161    --symbol-spacing: var(--sl-spacing-3x-small);
 6162
 6163    display: inline-flex;
 6164  }
 6165
 6166  .rating {
 6167    position: relative;
 6168    display: inline-flex;
 6169    border-radius: var(--sl-border-radius-medium);
 6170    vertical-align: middle;
 6171  }
 6172
6173  .rating:focus {
 6174    outline: none;
 6175  }
 6176
 6177  .rating:focus-visible {
 6178    outline: var(--sl-focus-ring);
 6179    outline-offset: var(--sl-focus-ring-offset);
 6180  }
 6181
 6182  .rating__symbols {
 6183    display: inline-flex;
 6184    position: relative;
 6185    font-size: var(--symbol-size);
 6186    line-height: 0;
 6187    color: var(--symbol-color);
 6188    white-space: nowrap;
 6189    cursor: pointer;
 6190  }
 6191
 6192  .rating__symbols > * {
 6193    padding: var(--symbol-spacing);
 6194  }
 6195
 6196  .rating__symbol--active,
 6197  .rating__partial--filled {
 6198    color: var(--symbol-color-active);
 6199  }
 6200
 6201  .rating__partial-symbol-container {
 6202    position: relative;
 6203  }
 6204
 6205  .rating__partial--filled {
 6206    position: absolute;
 6207    top: var(--symbol-spacing);
 6208    left: var(--symbol-spacing);
 6209  }
 6210
 6211  .rating__symbol {
 6212    transition: var(--sl-transition-fast) scale;
 6213    pointer-events: none;
 6214  }
 6215
 6216  .rating__symbol--hover {
 6217    scale: 1.2;
 6218  }
 6219
 6220  .rating--disabled .rating__symbols,
 6221  .rating--readonly .rating__symbols {
 6222    cursor: default;
 6223  }
 6224
 6225  .rating--disabled .rating__symbol--hover,
 6226  .rating--readonly .rating__symbol--hover {
 6227    scale: none;
 6228  }
 6229
 6230  .rating--disabled {
 6231    opacity: 0.5;
 6232  }
 6233
 6234  .rating--disabled .rating__symbols {
 6235    cursor: not-allowed;
 6236  }
 6237
 6238  /* Forced colors mode */
 6239  @media (forced-colors: active) {
 6240    .rating__symbol--active {
 6241      color: SelectedItem;
 6242    }
 6243  }
 6244 `
 6245 /**
 6246 * @license
 6247 * Copyright 2018 Google LLC
 6248 * SPDX-License-Identifier: BSD-3-Clause
 6249 */;const en="important",rn=" !"+en,sn=ie(class extends re{constructor(t){if(super(t),t.type!==Qt||"style"!==t.name||t.strings?.length>2)throw Error("The `styleMap` directive must be used in the `st
 6250      <div
 6251        part="base"
 6252        class=${se({rating:!0,"rating--readonly":this.readonly,"rating--disabled":this.disabled,"rating--rtl":t})}
 6253        role="slider"
 6254        aria-label=${this.label}
 6255        aria-disabled=${this.disabled?"true":"false"}
 6256        aria-readonly=${this.readonly?"true":"false"}
 6257        aria-valuenow=${this.value}
 6258        aria-valuemin=${0}
 6259        aria-valuemax=${this.max}
 6260        tabindex=${this.disabled||this.readonly?"-1":"0"}
 6261        @click=${this.handleClick}
 6262        @keydown=${this.handleKeyDown}
 6263        @mouseenter=${this.handleMouseEnter}
 6264        @touchstart=${this.handleTouchStart}
 6265        @mouseleave=${this.handleMouseLeave}
 6266        @touchend=${this.handleTouchEnd}
 6267        @mousemove=${this.handleMouseMove}
 6268        @touchmove=${this.handleTouchMove}
 6269      >
 6270        <span class="rating__symbols">
 6271          ${e.map((e=>i>e&&i<e+1?V`
 6272                <span
 6273                  class=${se({rating__symbol:!0,"rating__partial-symbol-container":!0,"rating__symbol--hover":this.isHovering&&Math.ceil(i)===e+1})}
 6274                  role="presentation"
 6275                >
 6276                  <div
 6277                    style=${sn({clipPath:t?`inset(0 ${100*(i-e)}% 0 0)`:`inset(0 0 0 ${100*(i-e)}%)`})}
 6278                  >
 6279                    ${ws(this.getSymbol(e+1))}
 6280                  </div>
 6281                  <div
 6282                    class="rating__partial--filled"
 6283                    style=${sn({clipPath:t?`inset(0 0 0 ${100-100*(i-e)}%)`:`inset(0 ${100-100*(i-e)}% 0 0)`})}
 6284                  >
 6285                    ${ws(this.getSymbol(e+1))}
 6286                  </div>
 6287                </span>
 6288              `:V`
 6289              <span
 6290                class=${se({rating__symbol:!0,"rating__symbol--hover":this.isHovering&&Math.ceil(i)===e+1,"rating__symbol--active":i>=e+1})}
 6291                role="presentation"
 6292              >
 6293                ${ws(this.getSymbol(e+1))}
 6294              </span>
 6295            `))}
 6296        </span>
 6297      </div>
 6298    `}};on.styles=[Pt,tn],on.dependencies={"sl-icon":Jt},At([Vt(".rating")],on.prototype,"rating",2),At([Nt()],on.prototype,"hoverValue",2),At([Nt()],on.prototype,"isHovering",2),At([Mt()],on.protot
 6299  :host {
 6300    --size: 128px;
 6301    --track-width: 4px;
 6302    --track-color: var(--sl-color-neutral-200);
 6303    --indicator-width: var(--track-width);
 6304    --indicator-color: var(--sl-color-primary-600);
 6305    --indicator-transition-duration: 0.35s;
 6306
 6307    display: inline-flex;
 6308  }
 6309
 6310  .progress-ring {
 6311    display: inline-flex;
 6312    align-items: center;
 6313    justify-content: center;
 6314    position: relative;
 6315  }
 6316
 6317  .progress-ring__image {
 6318    width: var(--size);
 6319    height: var(--size);
6320    rotate: -90deg;
 6321    transform-origin: 50% 50%;
 6322  }
 6323
 6324  .progress-ring__track,
 6325  .progress-ring__indicator {
 6326    --radius: calc(var(--size) / 2 - max(var(--track-width), var(--indicator-width)) * 0.5);
 6327    --circumference: calc(var(--radius) * 2 * 3.141592654);
 6328
 6329    fill: none;
 6330    r: var(--radius);
 6331    cx: calc(var(--size) / 2);
 6332    cy: calc(var(--size) / 2);
 6333  }
 6334
 6335  .progress-ring__track {
 6336    stroke: var(--track-color);
 6337    stroke-width: var(--track-width);
 6338  }
 6339
 6340  .progress-ring__indicator {
 6341    stroke: var(--indicator-color);
 6342    stroke-width: var(--indicator-width);
 6343    stroke-linecap: round;
 6344    transition-property: stroke-dashoffset;
 6345    transition-duration: var(--indicator-transition-duration);
 6346    stroke-dasharray: var(--circumference) var(--circumference);
 6347    stroke-dashoffset: calc(var(--circumference) - var(--percentage) * var(--circumference));
 6348  }
 6349
 6350  .progress-ring__label {
 6351    display: flex;
 6352    align-items: center;
 6353    justify-content: center;
 6354    position: absolute;
 6355    top: 0;
 6356    left: 0;
 6357    width: 100%;
 6358    height: 100%;
 6359    text-align: center;
 6360    user-select: none;
 6361    -webkit-user-select: none;
 6362  }
 6363 `,dn=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.value=0,this.label=""}updated(t){if(super.updated(t),t.has("value")){const t=parseFloat(getComputedStyle(this.
 6364      <div
 6365        part="base"
 6366        class="progress-ring"
 6367        role="progressbar"
 6368        aria-label=${this.label.length>0?this.label:this.localize.term("progress")}
 6369        aria-describedby="label"
 6370        aria-valuemin="0"
 6371        aria-valuemax="100"
 6372        aria-valuenow="${this.value}"
 6373        style="--percentage: ${this.value/100}"
 6374      >
 6375        <svg class="progress-ring__image">
 6376          <circle class="progress-ring__track"></circle>
 6377          <circle class="progress-ring__indicator" style="stroke-dashoffset: ${this.indicatorOffset}"></circle>
 6378        </svg>
 6379
 6380        <slot id="label" part="label" class="progress-ring__label"></slot>
 6381      </div>
 6382    `}};dn.styles=[Pt,cn],At([Vt(".progress-ring__indicator")],dn.prototype,"indicator",2),At([Nt()],dn.prototype,"indicatorOffset",2),At([Mt({type:Number,reflect:!0})],dn.prototype,"value",2),At([M
 6383  :host {
 6384    display: inline-block;
 6385  }
 6386 `;let un=null;class pn{}pn.render=function(t,e){un(t,e)},self.QrCreator=pn,function(t){function e(e,i,r,s){var o={},a=t(r,i);a.u(e),a.J(),s=s||0;var n=a.h(),l=a.h()+2*s;return o.text=e,o.level=i,o.v
 6387      <canvas
 6388        part="base"
 6389        class="qr-code"
 6390        role="img"
 6391        aria-label=${(null==(t=this.label)?void 0:t.length)>0?this.label:this.value}
 6392        style=${sn({width:`${this.size}px`,height:`${this.size}px`})}
 6393      ></canvas>
 6394    `}};mn.styles=[Pt,hn],At([Vt("canvas")],mn.prototype,"canvas",2),At([Mt()],mn.prototype,"value",2),At([Mt()],mn.prototype,"label",2),At([Mt({type:Number})],mn.prototype,"size",2),At([Mt()],mn.pr
 6395  :host {
 6396    display: block;
 6397  }
 6398
 6399  :host(:focus-visible) {
 6400    outline: 0px;
 6401  }
 6402
 6403  .radio {
 6404    display: inline-flex;
 6405    align-items: top;
 6406    font-family: var(--sl-input-font-family);
 6407    font-size: var(--sl-input-font-size-medium);
 6408    font-weight: var(--sl-input-font-weight);
 6409    color: var(--sl-input-label-color);
 6410    vertical-align: middle;
 6411    cursor: pointer;
 6412  }
 6413
 6414  .radio--small {
 6415    --toggle-size: var(--sl-toggle-size-small);
 6416    font-size: var(--sl-input-font-size-small);
 6417  }
 6418
 6419  .radio--medium {
 6420    --toggle-size: var(--sl-toggle-size-medium);
 6421    font-size: var(--sl-input-font-size-medium);
 6422  }
 6423
 6424  .radio--large {
 6425    --toggle-size: var(--sl-toggle-size-large);
 6426    font-size: var(--sl-input-font-size-large);
 6427  }
 6428
 6429  .radio__checked-icon {
 6430    display: inline-flex;
 6431    width: var(--toggle-size);
 6432    height: var(--toggle-size);
 6433  }
 6434
 6435  .radio__control {
 6436    flex: 0 0 auto;
 6437    position: relative;
 6438    display: inline-flex;
 6439    align-items: center;
 6440    justify-content: center;
 6441    width: var(--toggle-size);
 6442    height: var(--toggle-size);
 6443    border: solid var(--sl-input-border-width) var(--sl-input-border-color);
 6444    border-radius: 50%;
 6445    background-color: var(--sl-input-background-color);
 6446    color: transparent;
 6447    transition:
 6448      var(--sl-transition-fast) border-color,
 6449      var(--sl-transition-fast) background-color,
 6450      var(--sl-transition-fast) color,
 6451      var(--sl-transition-fast) box-shadow;
 6452  }
 6453
 6454  .radio__input {
 6455    position: absolute;
 6456    opacity: 0;
 6457    padding: 0;
 6458    margin: 0;
 6459    pointer-events: none;
 6460  }
 6461
 6462  /* Hover */
 6463  .radio:not(.radio--checked):not(.radio--disabled) .radio__control:hover {
 6464    border-color: var(--sl-input-border-color-hover);
 6465    background-color: var(--sl-input-background-color-hover);
 6466  }
6467
 6468  /* Checked */
 6469  .radio--checked .radio__control {
 6470    color: var(--sl-color-neutral-0);
 6471    border-color: var(--sl-color-primary-600);
 6472    background-color: var(--sl-color-primary-600);
 6473  }
 6474
 6475  /* Checked + hover */
 6476  .radio.radio--checked:not(.radio--disabled) .radio__control:hover {
 6477    border-color: var(--sl-color-primary-500);
 6478    background-color: var(--sl-color-primary-500);
 6479  }
 6480
 6481  /* Checked + focus */
 6482  :host(:focus-visible) .radio__control {
 6483    outline: var(--sl-focus-ring);
 6484    outline-offset: var(--sl-focus-ring-offset);
 6485  }
 6486
 6487  /* Disabled */
 6488  .radio--disabled {
 6489    opacity: 0.5;
 6490    cursor: not-allowed;
 6491  }
 6492
 6493  /* When the control isn't checked, hide the circle for Windows High Contrast mode a11y */
 6494  .radio:not(.radio--checked) svg circle {
 6495    opacity: 0;
 6496  }
 6497
 6498  .radio__label {
 6499    display: inline-block;
 6500    color: var(--sl-input-label-color);
 6501    line-height: var(--toggle-size);
 6502    margin-inline-start: 0.5em;
 6503    user-select: none;
 6504    -webkit-user-select: none;
 6505  }
 6506 `,bn=class extends Ht{constructor(){super(),this.checked=!1,this.hasFocus=!1,this.size="medium",this.disabled=!1,this.handleBlur=()=>{this.hasFocus=!1,this.emit("sl-blur")},this.handleClick=()=>{thi
 6507      <span
 6508        part="base"
 6509        class=${se({radio:!0,"radio--checked":this.checked,"radio--disabled":this.disabled,"radio--focused":this.hasFocus,"radio--small":"small"===this.size,"radio--medium":"medium"===this.size,"rad
 6510      >
 6511        <span part="${"control"+(this.checked?" control--checked":"")}" class="radio__control">
 6512          ${this.checked?V` <sl-icon part="checked-icon" class="radio__checked-icon" library="system" name="radio"></sl-icon> `:""}
 6513        </span>
 6514
 6515        <slot part="label" class="radio__label"></slot>
 6516      </span>
 6517    `}};bn.styles=[Pt,gn],bn.dependencies={"sl-icon":Jt},At([Nt()],bn.prototype,"checked",2),At([Nt()],bn.prototype,"hasFocus",2),At([Mt()],bn.prototype,"value",2),At([Mt({reflect:!0})],bn.prototype
 6518  :host {
 6519    --height: 1rem;
 6520    --track-color: var(--sl-color-neutral-200);
 6521    --indicator-color: var(--sl-color-primary-600);
 6522    --label-color: var(--sl-color-neutral-0);
 6523
 6524    display: block;
 6525  }
 6526
 6527  .progress-bar {
 6528    position: relative;
 6529    background-color: var(--track-color);
 6530    height: var(--height);
 6531    border-radius: var(--sl-border-radius-pill);
 6532    box-shadow: inset var(--sl-shadow-small);
 6533    overflow: hidden;
 6534  }
 6535
 6536  .progress-bar__indicator {
 6537    height: 100%;
 6538    font-family: var(--sl-font-sans);
 6539    font-size: 12px;
 6540    font-weight: var(--sl-font-weight-normal);
 6541    background-color: var(--indicator-color);
 6542    color: var(--label-color);
 6543    text-align: center;
 6544    line-height: var(--height);
 6545    white-space: nowrap;
 6546    overflow: hidden;
 6547    transition:
 6548      400ms width,
 6549      400ms background-color;
 6550    user-select: none;
 6551    -webkit-user-select: none;
 6552  }
 6553
 6554  /* Indeterminate */
 6555  .progress-bar--indeterminate .progress-bar__indicator {
 6556    position: absolute;
 6557    animation: indeterminate 2.5s infinite cubic-bezier(0.37, 0, 0.63, 1);
 6558  }
 6559
 6560  .progress-bar--indeterminate.progress-bar--rtl .progress-bar__indicator {
 6561    animation-name: indeterminate-rtl;
 6562  }
 6563
 6564  @media (forced-colors: active) {
 6565    .progress-bar {
 6566      outline: solid 1px SelectedItem;
 6567      background-color: var(--sl-color-neutral-0);
 6568    }
 6569
 6570    .progress-bar__indicator {
 6571      outline: solid 1px SelectedItem;
 6572      background-color: SelectedItem;
 6573    }
 6574  }
 6575
 6576  @keyframes indeterminate {
 6577    0% {
 6578      left: -50%;
 6579      width: 50%;
 6580    }
 6581    75%,
 6582    100% {
 6583      left: 100%;
 6584      width: 50%;
 6585    }
 6586  }
 6587
 6588  @keyframes indeterminate-rtl {
 6589    0% {
 6590      right: -50%;
 6591      width: 50%;
 6592    }
 6593    75%,
 6594    100% {
 6595      right: 100%;
 6596      width: 50%;
 6597    }
 6598  }
 6599 `,yn=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.value=0,this.indeterminate=!1,this.label=""}render(){return V`
 6600      <div
 6601        part="base"
 6602        class=${se({"progress-bar":!0,"progress-bar--indeterminate":this.indeterminate,"progress-bar--rtl":"rtl"===this.localize.dir()})}
 6603        role="progressbar"
 6604        title=${de(this.title)}
 6605        aria-label=${this.label.length>0?this.label:this.localize.term("progress")}
 6606        aria-valuemin="0"
 6607        aria-valuemax="100"
 6608        aria-valuenow=${this.indeterminate?0:this.value}
 6609      >
 6610        <div part="indicator" class="progress-bar__indicator" style=${sn({width:`${this.value}%`})}>
 6611          ${this.indeterminate?"":V` <slot part="label" class="progress-bar__label"></slot> `}
 6612        </div>
 6613      </div>
6614    `}};yn.styles=[Pt,vn],At([Mt({type:Number,reflect:!0})],yn.prototype,"value",2),At([Mt({type:Boolean,reflect:!0})],yn.prototype,"indeterminate",2),At([Mt()],yn.prototype,"label",2),yn.define("sl
 6615  :host {
 6616    display: block;
 6617  }
 6618
 6619  .menu-label {
 6620    display: inline-block;
 6621    font-family: var(--sl-font-sans);
 6622    font-size: var(--sl-font-size-small);
 6623    font-weight: var(--sl-font-weight-semibold);
 6624    line-height: var(--sl-line-height-normal);
 6625    letter-spacing: var(--sl-letter-spacing-normal);
 6626    color: var(--sl-color-neutral-500);
 6627    padding: var(--sl-spacing-2x-small) var(--sl-spacing-x-large);
 6628    user-select: none;
 6629    -webkit-user-select: none;
 6630  }
 6631 `,_n=class extends Ht{render(){return V` <slot part="base" class="menu-label"></slot> `}};_n.styles=[Pt,wn],_n.define("sl-menu-label");var xn=a`
 6632  :host {
 6633    display: contents;
 6634  }
 6635 `,kn=class extends Ht{constructor(){super(...arguments),this.attrOldValue=!1,this.charData=!1,this.charDataOldValue=!1,this.childList=!1,this.disabled=!1,this.handleMutation=t=>{this.emit("sl-mutati
 6636  :host {
 6637    --divider-width: 2px;
 6638    --handle-size: 2.5rem;
 6639
 6640    display: inline-block;
 6641    position: relative;
 6642  }
 6643
 6644  .image-comparer {
 6645    max-width: 100%;
 6646    max-height: 100%;
 6647    overflow: hidden;
 6648  }
 6649
 6650  .image-comparer__before,
 6651  .image-comparer__after {
 6652    display: block;
 6653    pointer-events: none;
 6654  }
 6655
 6656  .image-comparer__before::slotted(img),
 6657  .image-comparer__after::slotted(img),
 6658  .image-comparer__before::slotted(svg),
 6659  .image-comparer__after::slotted(svg) {
 6660    display: block;
 6661    max-width: 100% !important;
 6662    height: auto;
 6663  }
 6664
 6665  .image-comparer__after {
 6666    position: absolute;
 6667    top: 0;
 6668    left: 0;
 6669    height: 100%;
 6670    width: 100%;
 6671  }
 6672
 6673  .image-comparer__divider {
 6674    display: flex;
 6675    align-items: center;
 6676    justify-content: center;
 6677    position: absolute;
 6678    top: 0;
 6679    width: var(--divider-width);
 6680    height: 100%;
 6681    background-color: var(--sl-color-neutral-0);
 6682    translate: calc(var(--divider-width) / -2);
 6683    cursor: ew-resize;
 6684  }
 6685
 6686  .image-comparer__handle {
 6687    display: flex;
 6688    align-items: center;
 6689    justify-content: center;
 6690    position: absolute;
 6691    top: calc(50% - (var(--handle-size) / 2));
 6692    width: var(--handle-size);
 6693    height: var(--handle-size);
 6694    background-color: var(--sl-color-neutral-0);
 6695    border-radius: var(--sl-border-radius-circle);
 6696    font-size: calc(var(--handle-size) * 0.5);
 6697    color: var(--sl-color-neutral-700);
 6698    cursor: inherit;
 6699    z-index: 10;
 6700  }
 6701
 6702  .image-comparer__handle:focus-visible {
 6703    outline: var(--sl-focus-ring);
 6704    outline-offset: var(--sl-focus-ring-offset);
 6705  }
 6706 `,Sn=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.position=50}handleDrag(t){const{width:e}=this.base.getBoundingClientRect(),i="rtl"===this.localize.dir();t.pre
 6707      <div
 6708        part="base"
 6709        id="image-comparer"
 6710        class=${se({"image-comparer":!0,"image-comparer--rtl":t})}
 6711        @keydown=${this.handleKeyDown}
 6712      >
 6713        <div class="image-comparer__image">
 6714          <div part="before" class="image-comparer__before">
 6715            <slot name="before"></slot>
 6716          </div>
 6717
 6718          <div
 6719            part="after"
 6720            class="image-comparer__after"
 6721            style=${sn({clipPath:t?`inset(0 0 0 ${100-this.position}%)`:`inset(0 ${100-this.position}% 0 0)`})}
 6722          >
 6723            <slot name="after"></slot>
 6724          </div>
 6725        </div>
 6726
 6727        <div
 6728          part="divider"
 6729          class="image-comparer__divider"
 6730          style=${sn({left:t?100-this.position+"%":`${this.position}%`})}
 6731          @mousedown=${this.handleDrag}
 6732          @touchstart=${this.handleDrag}
 6733        >
 6734          <div
 6735            part="handle"
 6736            class="image-comparer__handle"
 6737            role="scrollbar"
 6738            aria-valuenow=${this.position}
 6739            aria-valuemin="0"
 6740            aria-valuemax="100"
 6741            aria-controls="image-comparer"
 6742            tabindex="0"
 6743          >
 6744            <slot name="handle">
 6745              <sl-icon library="system" name="grip-vertical"></sl-icon>
 6746            </slot>
 6747          </div>
 6748        </div>
 6749      </div>
 6750    `}};Sn.styles=[Pt,Cn],Sn.scopedElement={"sl-icon":Jt},At([Vt(".image-comparer")],Sn.prototype,"base",2),At([Vt(".image-comparer__handle")],Sn.prototype,"handle",2),At([Mt({type:Number,reflect:!0
 6751  :host {
 6752    display: block;
 6753  }
 6754 `,En=new Map;var In=class extends Ht{constructor(){super(...arguments),this.mode="cors",this.allowScripts=!1}executeScript(t){const e=document.createElement("script");[...t.attributes].forEach((t=>e
 6755      <time datetime=${t.toISOString()}>
 6756        ${this.localize.date(t,{weekday:this.weekday,era:this.era,year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second,timeZoneName:this.timeZoneName,tim
 6757      </time>
 6758    `}};At([Mt()],An.prototype,"date",2),At([Mt()],An.prototype,"weekday",2),At([Mt()],An.prototype,"era",2),At([Mt()],An.prototype,"year",2),At([Mt()],An.prototype,"month",2),At([Mt()],An.prototype
 6759  :host {
 6760    --error-color: var(--sl-color-danger-600);
    --success-color: var(--sl-color-success-600);
 6761
 6762
 6763
 6764  }
 6765
 6766
 6767
 6768
 6769
 6770
 6771
 6772
 6773
 6774
 6775
 6776
 6777
 6778  }
 6779
 6780
 6781
    display: inline-block;
  .copy-button__button {
    flex: 0 0 auto;
    display: flex;
    align-items: center;
    background: none;
    border: none;
    border-radius: var(--sl-border-radius-medium);
    font-size: inherit;
    color: inherit;
    padding: var(--sl-spacing-x-small);
    cursor: pointer;
    transition: var(--sl-transition-x-fast) color;
  .copy-button--success .copy-button__button {
    color: var(--success-color);
 6782  }
 6783
 6784
 6785
  .copy-button--error .copy-button__button {
    color: var(--error-color);
 6786  }
 6787
 6788
  .copy-button__button:focus-visible {
    outline: var(--sl-focus-ring);
    outline-offset: var(--sl-focus-ring-offset);
 6789
 6790
 6791  }
 6792
 6793
 6794
 6795
  .copy-button__button[disabled] {
    opacity: 0.5;
    cursor: not-allowed !important;
 6796  }
 6797
 6798
  slot {
    display: inline-flex;
      <sl-tooltip
        class=${se({"copy-button":!0,"copy-button--success":"success"===this.status,"copy-button--error":"error"===this.status})}
        content=${t}
        placement=${this.tooltipPlacement}
        ?disabled=${this.disabled}
        ?hoist=${this.hoist}
        exportparts="
          base:tooltip__base,
          base__popup:tooltip__base__popup,
          base__arrow:tooltip__base__arrow,
          body:tooltip__body
        "
        <button
          class="copy-button__button"
          part="button"
          type="button"
          ?disabled=${this.disabled}
          @click=${this.handleCopy}
        >
          <slot part="copy-icon" name="copy-icon">
            <sl-icon library="system" name="copy"></sl-icon>
          </slot>
          <slot part="success-icon" name="success-icon" hidden>
            <sl-icon library="system" name="check"></sl-icon>
          </slot>
          <slot part="error-icon" name="error-icon" hidden>
            <sl-icon library="system" name="x-lg"></sl-icon>
          </slot>
        </button>
      </sl-tooltip>
    `}};zn.styles=[Pt,On],zn.dependencies={"sl-icon":Jt,"sl-tooltip":Ss},At([Vt('slot[name="copy-icon"]')],zn.prototype,"copyIcon",2),At([Vt('slot[name="success-icon"]')],zn.prototype,"successIcon",
  :host {
    --grid-width: 280px;
    --grid-height: 200px;
    --grid-handle-size: 16px;
    --slider-height: 15px;
    --slider-handle-size: 17px;
    --swatch-size: 25px;
    display: inline-block;
  .color-picker {
    width: var(--grid-width);
    font-family: var(--sl-font-sans);
    font-size: var(--sl-font-size-medium);
    font-weight: var(--sl-font-weight-normal);
    color: var(--color);
    background-color: var(--sl-panel-background-color);
    border-radius: var(--sl-border-radius-medium);
    user-select: none;
    -webkit-user-select: none;
  .color-picker--inline {
    border: solid var(--sl-panel-border-width) var(--sl-panel-border-color);
 6799
 6800  }
 6801 `,zn=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.isCopying=!1,this.status="rest",this.value="",this.from="",this.disabled=!1,this.copyLabel="",this.successLabe
 6802
 6803
 6804
 6805
 6806
 6807
 6808
 6809
 6810
 6811
 6812
 6813
 6814      >
 6815
 6816
 6817
 6818
 6819
 6820
 6821
 6822
 6823
 6824
 6825
 6826
 6827
 6828
 6829
 6830
 6831
 6832
 6833
 6834
 6835
 6836
 6837
 6838
 6839
 6840
 6841
 6842
 6843  }
 6844
 6845
 6846
 6847
 6848
 6849
 6850
 6851
 6852
 6853
 6854
 6855  }
 6856
 6857
 6858
 6859  }
 6860
 6861
 6862
 6863
  .color-picker--inline:focus-visible {
    outline: var(--sl-focus-ring);
    outline-offset: var(--sl-focus-ring-offset);
 6864  }
 6865
 6866
  .color-picker__grid {
    position: relative;
    height: var(--grid-height);
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 100%),
      linear-gradient(to right, #fff 0%, rgba(255, 255, 255, 0) 100%);
    border-top-left-radius: var(--sl-border-radius-medium);
    border-top-right-radius: var(--sl-border-radius-medium);
    cursor: crosshair;
    forced-color-adjust: none;
 6867
 6868
 6869
 6870
 6871
 6872
 6873
 6874
 6875  }
 6876
 6877
 6878
 6879
 6880
 6881
 6882
 6883
 6884
 6885
 6886
 6887  }
 6888
 6889
 6890
 6891
  .color-picker__grid-handle {
    position: absolute;
    width: var(--grid-handle-size);
    height: var(--grid-handle-size);
    border-radius: 50%;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.25);
    border: solid 2px white;
    margin-top: calc(var(--grid-handle-size) / -2);
    margin-left: calc(var(--grid-handle-size) / -2);
    transition: var(--sl-transition-fast) scale;
  .color-picker__grid-handle--dragging {
    cursor: none;
    scale: 1.5;
 6892  }
 6893
 6894
 6895
  .color-picker__grid-handle:focus-visible {
    outline: var(--sl-focus-ring);
 6896  }
 6897
 6898
  .color-picker__controls {
 6899
 6900
 6901
 6902  }
 6903
 6904
 6905
    padding: var(--sl-spacing-small);
    display: flex;
    align-items: center;
  .color-picker__sliders {
    flex: 1 1 auto;
 6906  }
 6907
6908  .color-picker__slider {
 6909    position: relative;
 6910    height: var(--slider-height);
 6911    border-radius: var(--sl-border-radius-pill);
 6912    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2);
 6913    forced-color-adjust: none;
 6914  }
 6915
 6916  .color-picker__slider:not(:last-of-type) {
 6917    margin-bottom: var(--sl-spacing-small);
 6918  }
 6919
 6920  .color-picker__slider-handle {
 6921    position: absolute;
 6922    top: calc(50% - var(--slider-handle-size) / 2);
 6923    width: var(--slider-handle-size);
 6924    height: var(--slider-handle-size);
 6925    background-color: white;
 6926    border-radius: 50%;
 6927    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.25);
 6928    margin-left: calc(var(--slider-handle-size) / -2);
 6929  }
 6930
 6931  .color-picker__slider-handle:focus-visible {
 6932    outline: var(--sl-focus-ring);
 6933  }
 6934
 6935  .color-picker__hue {
 6936    background-image: linear-gradient(
 6937      to right,
 6938      rgb(255, 0, 0) 0%,
 6939      rgb(255, 255, 0) 17%,
 6940      rgb(0, 255, 0) 33%,
 6941      rgb(0, 255, 255) 50%,
 6942      rgb(0, 0, 255) 67%,
 6943      rgb(255, 0, 255) 83%,
 6944      rgb(255, 0, 0) 100%
 6945    );
 6946  }
 6947
 6948  .color-picker__alpha .color-picker__alpha-gradient {
 6949    position: absolute;
 6950    top: 0;
 6951    left: 0;
 6952    width: 100%;
 6953    height: 100%;
 6954    border-radius: inherit;
 6955  }
 6956
 6957  .color-picker__preview {
 6958    flex: 0 0 auto;
 6959    display: inline-flex;
 6960    align-items: center;
 6961    justify-content: center;
 6962    position: relative;
 6963    width: 2.25rem;
 6964    height: 2.25rem;
 6965    border: none;
 6966    border-radius: var(--sl-border-radius-circle);
 6967    background: none;
 6968    margin-left: var(--sl-spacing-small);
 6969    cursor: copy;
 6970    forced-color-adjust: none;
 6971  }
 6972
 6973  .color-picker__preview:before {
 6974    content: '';
 6975    position: absolute;
 6976    top: 0;
 6977    left: 0;
 6978    width: 100%;
 6979    height: 100%;
 6980    border-radius: inherit;
 6981    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2);
 6982
 6983    /* We use a custom property in lieu of currentColor because of https://bugs.webkit.org/show_bug.cgi?id=216780 */
 6984    background-color: var(--preview-color);
 6985  }
 6986
 6987  .color-picker__preview:focus-visible {
 6988    outline: var(--sl-focus-ring);
 6989    outline-offset: var(--sl-focus-ring-offset);
 6990  }
 6991
 6992  .color-picker__preview-color {
 6993    position: absolute;
 6994    top: 0;
 6995    left: 0;
 6996    width: 100%;
 6997    height: 100%;
 6998    border: solid 1px rgba(0, 0, 0, 0.125);
 6999  }
 7000
 7001  .color-picker__preview-color--copied {
 7002    animation: pulse 0.75s;
 7003  }
 7004
 7005  @keyframes pulse {
 7006    0% {
 7007      box-shadow: 0 0 0 0 var(--sl-color-primary-500);
 7008    }
 7009    70% {
 7010      box-shadow: 0 0 0 0.5rem transparent;
 7011    }
 7012    100% {
 7013      box-shadow: 0 0 0 0 transparent;
 7014    }
 7015  }
 7016
 7017  .color-picker__user-input {
 7018    display: flex;
 7019    padding: 0 var(--sl-spacing-small) var(--sl-spacing-small) var(--sl-spacing-small);
 7020  }
 7021
 7022  .color-picker__user-input sl-input {
 7023    min-width: 0; /* fix input width in Safari */
 7024    flex: 1 1 auto;
 7025  }
 7026
 7027  .color-picker__user-input sl-button-group {
 7028    margin-left: var(--sl-spacing-small);
 7029  }
 7030
 7031  .color-picker__user-input sl-button {
 7032    min-width: 3.25rem;
 7033    max-width: 3.25rem;
 7034    font-size: 1rem;
 7035  }
 7036
 7037  .color-picker__swatches {
 7038    display: grid;
 7039    grid-template-columns: repeat(8, 1fr);
 7040    grid-gap: 0.5rem;
 7041    justify-items: center;
 7042    border-top: solid 1px var(--sl-color-neutral-200);
 7043    padding: var(--sl-spacing-small);
 7044    forced-color-adjust: none;
 7045  }
 7046
 7047  .color-picker__swatch {
 7048    position: relative;
 7049    width: var(--swatch-size);
 7050    height: var(--swatch-size);
 7051    border-radius: var(--sl-border-radius-small);
 7052  }
 7053
 7054  .color-picker__swatch .color-picker__swatch-color {
7055    position: absolute;
 7056    top: 0;
 7057    left: 0;
 7058    width: 100%;
 7059    height: 100%;
 7060    border: solid 1px rgba(0, 0, 0, 0.125);
 7061    border-radius: inherit;
 7062    cursor: pointer;
 7063  }
 7064
 7065  .color-picker__swatch:focus-visible {
 7066    outline: var(--sl-focus-ring);
 7067    outline-offset: var(--sl-focus-ring-offset);
 7068  }
 7069
 7070  .color-picker__transparent-bg {
 7071    background-image: linear-gradient(45deg, var(--sl-color-neutral-300) 25%, transparent 25%),
 7072      linear-gradient(45deg, transparent 75%, var(--sl-color-neutral-300) 75%),
 7073      linear-gradient(45deg, transparent 75%, var(--sl-color-neutral-300) 75%),
 7074      linear-gradient(45deg, var(--sl-color-neutral-300) 25%, transparent 25%);
 7075    background-size: 10px 10px;
 7076    background-position:
 7077      0 0,
 7078      0 0,
 7079      -5px -5px,
 7080      5px 5px;
 7081  }
 7082
 7083  .color-picker--disabled {
 7084    opacity: 0.5;
 7085    cursor: not-allowed;
 7086  }
 7087
 7088  .color-picker--disabled .color-picker__grid,
 7089  .color-picker--disabled .color-picker__grid-handle,
 7090  .color-picker--disabled .color-picker__slider,
 7091  .color-picker--disabled .color-picker__slider-handle,
 7092  .color-picker--disabled .color-picker__preview,
 7093  .color-picker--disabled .color-picker__swatch,
 7094  .color-picker--disabled .color-picker__swatch-color {
 7095    pointer-events: none;
 7096  }
 7097
 7098  /*
 7099   * Color dropdown
 7100   */
 7101
 7102  .color-dropdown::part(panel) {
 7103    max-height: none;
 7104    background-color: var(--sl-panel-background-color);
 7105    border: solid var(--sl-panel-border-width) var(--sl-panel-border-color);
 7106    border-radius: var(--sl-border-radius-medium);
 7107    overflow: visible;
 7108  }
 7109
 7110  .color-dropdown__trigger {
 7111    display: inline-block;
 7112    position: relative;
 7113    background-color: transparent;
 7114    border: none;
 7115    cursor: pointer;
 7116    forced-color-adjust: none;
 7117  }
 7118
 7119  .color-dropdown__trigger.color-dropdown__trigger--small {
 7120    width: var(--sl-input-height-small);
 7121    height: var(--sl-input-height-small);
 7122    border-radius: var(--sl-border-radius-circle);
 7123  }
 7124
 7125  .color-dropdown__trigger.color-dropdown__trigger--medium {
 7126    width: var(--sl-input-height-medium);
 7127    height: var(--sl-input-height-medium);
 7128    border-radius: var(--sl-border-radius-circle);
 7129  }
 7130
 7131  .color-dropdown__trigger.color-dropdown__trigger--large {
 7132    width: var(--sl-input-height-large);
 7133    height: var(--sl-input-height-large);
 7134    border-radius: var(--sl-border-radius-circle);
 7135  }
 7136
 7137  .color-dropdown__trigger:before {
 7138    content: '';
 7139    position: absolute;
 7140    top: 0;
 7141    left: 0;
 7142    width: 100%;
 7143    height: 100%;
 7144    border-radius: inherit;
 7145    background-color: currentColor;
 7146    box-shadow:
 7147      inset 0 0 0 2px var(--sl-input-border-color),
 7148      inset 0 0 0 4px var(--sl-color-neutral-0);
 7149  }
 7150
 7151  .color-dropdown__trigger--empty:before {
 7152    background-color: transparent;
 7153  }
 7154
 7155  .color-dropdown__trigger:focus-visible {
 7156    outline: none;
 7157  }
 7158
 7159  .color-dropdown__trigger:focus-visible:not(.color-dropdown__trigger--disabled) {
 7160    outline: var(--sl-focus-ring);
 7161    outline-offset: var(--sl-focus-ring-offset);
 7162  }
 7163
 7164  .color-dropdown__trigger.color-dropdown__trigger--disabled {
 7165    opacity: 0.5;
 7166    cursor: not-allowed;
 7167  }
 7168 `;function Rn(t,e){(function(t){return"string"==typeof t&&-1!==t.indexOf(".")&&1===parseFloat(t)})(t)&&(t="100%");const i=function(t){return"string"==typeof t&&-1!==t.indexOf("%")}(t);return t=360==
 7169      <div
 7170        part="base"
 7171        class=${se({"color-picker":!0,"color-picker--inline":this.inline,"color-picker--disabled":this.disabled,"color-picker--focused":this.hasFocus})}
 7172        aria-disabled=${this.disabled?"true":"false"}
 7173        aria-labelledby="label"
 7174        tabindex=${this.inline?"0":"-1"}
 7175      >
 7176        ${this.inline?V`
 7177              <sl-visually-hidden id="label">
 7178                <slot name="label">${this.label}</slot>
 7179              </sl-visually-hidden>
 7180            `:null}
 7181
 7182        <div
 7183          part="grid"
 7184          class="color-picker__grid"
 7185          style=${sn({backgroundColor:this.getHexString(this.hue,100,100)})}
 7186          @pointerdown=${this.handleGridDrag}
 7187          @touchmove=${this.handleTouchMove}
 7188        >
 7189          <span
 7190            part="grid-handle"
 7191            class=${se({"color-picker__grid-handle":!0,"color-picker__grid-handle--dragging":this.isDraggingGridHandle})}
 7192            style=${sn({top:`${e}%`,left:`${t}%`,backgroundColor:this.getHexString(this.hue,this.saturation,this.brightness,this.alpha)})}
 7193            role="application"
 7194            aria-label="HSV"
 7195            tabindex=${de(this.disabled?void 0:"0")}
 7196            @keydown=${this.handleGridKeyDown}
 7197          ></span>
 7198        </div>
 7199
 7200        <div class="color-picker__controls">
 7201          <div class="color-picker__sliders">
7202            <div
 7203              part="slider hue-slider"
 7204              class="color-picker__hue color-picker__slider"
 7205              @pointerdown=${this.handleHueDrag}
 7206              @touchmove=${this.handleTouchMove}
 7207            >
 7208              <span
 7209                part="slider-handle hue-slider-handle"
 7210                class="color-picker__slider-handle"
 7211                style=${sn({left:(0===this.hue?0:100/(360/this.hue))+"%"})}
 7212                role="slider"
 7213                aria-label="hue"
 7214                aria-orientation="horizontal"
 7215                aria-valuemin="0"
 7216                aria-valuemax="360"
 7217                aria-valuenow=${`${Math.round(this.hue)}`}
 7218                tabindex=${de(this.disabled?void 0:"0")}
 7219                @keydown=${this.handleHueKeyDown}
 7220              ></span>
 7221            </div>
 7222
 7223            ${this.opacity?V`
 7224                  <div
 7225                    part="slider opacity-slider"
 7226                    class="color-picker__alpha color-picker__slider color-picker__transparent-bg"
 7227                    @pointerdown="${this.handleAlphaDrag}"
 7228                    @touchmove=${this.handleTouchMove}
 7229                  >
 7230                    <div
 7231                      class="color-picker__alpha-gradient"
 7232                      style=${sn({backgroundImage:`linear-gradient(\n                          to right,\n                          ${this.getHexString(this.hue,this.saturation,this.brightness,0)} 0
 7233                    ></div>
 7234                    <span
 7235                      part="slider-handle opacity-slider-handle"
 7236                      class="color-picker__slider-handle"
 7237                      style=${sn({left:`${this.alpha}%`})}
 7238                      role="slider"
 7239                      aria-label="alpha"
 7240                      aria-orientation="horizontal"
 7241                      aria-valuemin="0"
 7242                      aria-valuemax="100"
 7243                      aria-valuenow=${Math.round(this.alpha)}
 7244                      tabindex=${de(this.disabled?void 0:"0")}
 7245                      @keydown=${this.handleAlphaKeyDown}
 7246                    ></span>
 7247                  </div>
 7248                `:""}
 7249          </div>
 7250
 7251          <button
 7252            type="button"
 7253            part="preview"
 7254            class="color-picker__preview color-picker__transparent-bg"
 7255            aria-label=${this.localize.term("copy")}
 7256            style=${sn({"--preview-color":this.getHexString(this.hue,this.saturation,this.brightness,this.alpha)})}
 7257            @click=${this.handleCopy}
 7258          ></button>
 7259        </div>
 7260
 7261        <div class="color-picker__user-input" aria-live="polite">
 7262          <sl-input
 7263            part="input"
 7264            type="text"
 7265            name=${this.name}
 7266            autocomplete="off"
 7267            autocorrect="off"
 7268            autocapitalize="off"
 7269            spellcheck="false"
 7270            value=${this.isEmpty?"":this.inputValue}
 7271            ?required=${this.required}
 7272            ?disabled=${this.disabled}
 7273            aria-label=${this.localize.term("currentValue")}
 7274            @keydown=${this.handleInputKeyDown}
 7275            @sl-change=${this.handleInputChange}
 7276            @sl-input=${this.handleInputInput}
 7277            @sl-invalid=${this.handleInputInvalid}
 7278            @sl-blur=${this.stopNestedEventPropagation}
 7279            @sl-focus=${this.stopNestedEventPropagation}
 7280          ></sl-input>
 7281
 7282          <sl-button-group>
 7283            ${this.noFormatToggle?"":V`
 7284                  <sl-button
 7285                    part="format-button"
 7286                    aria-label=${this.localize.term("toggleColorFormat")}
 7287                    exportparts="
 7288                      base:format-button__base,
 7289                      prefix:format-button__prefix,
 7290                      label:format-button__label,
 7291                      suffix:format-button__suffix,
 7292                      caret:format-button__caret
 7293                    "
 7294                    @click=${this.handleFormatToggle}
 7295                    @sl-blur=${this.stopNestedEventPropagation}
 7296                    @sl-focus=${this.stopNestedEventPropagation}
 7297                  >
 7298                    ${this.setLetterCase(this.format)}
 7299                  </sl-button>
 7300                `}
 7301            ${il?V`
 7302                  <sl-button
 7303                    part="eye-dropper-button"
 7304                    exportparts="
 7305                      base:eye-dropper-button__base,
 7306                      prefix:eye-dropper-button__prefix,
 7307                      label:eye-dropper-button__label,
 7308                      suffix:eye-dropper-button__suffix,
 7309                      caret:eye-dropper-button__caret
 7310                    "
 7311                    @click=${this.handleEyeDropper}
 7312                    @sl-blur=${this.stopNestedEventPropagation}
 7313                    @sl-focus=${this.stopNestedEventPropagation}
 7314                  >
 7315                    <sl-icon
 7316                      library="system"
 7317                      name="eyedropper"
 7318                      label=${this.localize.term("selectAColorFromTheScreen")}
 7319                    ></sl-icon>
 7320                  </sl-button>
 7321                `:""}
 7322          </sl-button-group>
 7323        </div>
 7324
 7325        ${i.length>0?V`
 7326              <div part="swatches" class="color-picker__swatches">
 7327                ${i.map((t=>{const e=this.parseColor(t);return e?V`
 7328                    <div
 7329                      part="swatch"
 7330                      class="color-picker__swatch color-picker__transparent-bg"
 7331                      tabindex=${de(this.disabled?void 0:"0")}
 7332                      role="button"
 7333                      aria-label=${t}
 7334                      @click=${()=>this.selectSwatch(t)}
 7335                      @keydown=${t=>!this.disabled&&"Enter"===t.key&&this.setColor(e.hexa)}
 7336                    >
 7337                      <div
 7338                        class="color-picker__swatch-color"
 7339                        style=${sn({backgroundColor:e.hexa})}
 7340                      ></div>
 7341                    </div>
 7342                  `:(console.error(`Unable to parse swatch color: "${t}"`,this),"")}))}
 7343              </div>
 7344            `:""}
 7345      </div>
 7346    `;return this.inline?r:V`
 7347      <sl-dropdown
 7348        class="color-dropdown"
7349        aria-disabled=${this.disabled?"true":"false"}
 7350        .containingElement=${this}
 7351        ?disabled=${this.disabled}
 7352        ?hoist=${this.hoist}
 7353        @sl-after-hide=${this.handleAfterHide}
 7354      >
 7355        <button
 7356          part="trigger"
 7357          slot="trigger"
 7358          class=${se({"color-dropdown__trigger":!0,"color-dropdown__trigger--disabled":this.disabled,"color-dropdown__trigger--small":"small"===this.size,"color-dropdown__trigger--medium":"medium"==
 7359          style=${sn({color:this.getHexString(this.hue,this.saturation,this.brightness,this.alpha)})}
 7360          type="button"
 7361        >
 7362          <sl-visually-hidden>
 7363            <slot name="label">${this.label}</slot>
 7364          </sl-visually-hidden>
 7365        </button>
 7366        ${r}
 7367      </sl-dropdown>
 7368    `}};rl.styles=[Pt,Pn],rl.dependencies={"sl-button-group":ps,"sl-button":Je,"sl-dropdown":Ur,"sl-icon":Jt,"sl-input":Hr,"sl-visually-hidden":za},At([Vt('[part~="base"]')],rl.prototype,"base",2),A
 7369  :host {
 7370    --slide-gap: var(--sl-spacing-medium, 1rem);
 7371    --aspect-ratio: 16 / 9;
 7372    --scroll-hint: 0px;
 7373
 7374    display: flex;
 7375  }
 7376
 7377  .carousel {
 7378    display: grid;
 7379    grid-template-columns: min-content 1fr min-content;
 7380    grid-template-rows: 1fr min-content;
 7381    grid-template-areas:
 7382      '. slides .'
 7383      '. pagination .';
 7384    gap: var(--sl-spacing-medium);
 7385    align-items: center;
 7386    min-height: 100%;
 7387    min-width: 100%;
 7388    position: relative;
 7389  }
 7390
 7391  .carousel__pagination {
 7392    grid-area: pagination;
 7393    display: flex;
 7394    flex-wrap: wrap;
 7395    justify-content: center;
 7396    gap: var(--sl-spacing-small);
 7397  }
 7398
 7399  .carousel__slides {
 7400    grid-area: slides;
 7401
 7402    display: grid;
 7403    height: 100%;
 7404    width: 100%;
 7405    align-items: center;
 7406    justify-items: center;
 7407    overflow: auto;
 7408    overscroll-behavior-x: contain;
 7409    scrollbar-width: none;
 7410    aspect-ratio: calc(var(--aspect-ratio) * var(--slides-per-page));
 7411    border-radius: var(--sl-border-radius-small);
 7412
 7413    --slide-size: calc((100% - (var(--slides-per-page) - 1) * var(--slide-gap)) / var(--slides-per-page));
 7414  }
 7415
 7416  @media (prefers-reduced-motion) {
 7417    :where(.carousel__slides) {
 7418      scroll-behavior: auto;
 7419    }
 7420  }
 7421
 7422  .carousel__slides--horizontal {
 7423    grid-auto-flow: column;
 7424    grid-auto-columns: var(--slide-size);
 7425    grid-auto-rows: 100%;
 7426    column-gap: var(--slide-gap);
 7427    scroll-snap-type: x mandatory;
 7428    scroll-padding-inline: var(--scroll-hint);
 7429    padding-inline: var(--scroll-hint);
 7430    overflow-y: hidden;
 7431  }
 7432
 7433  .carousel__slides--vertical {
 7434    grid-auto-flow: row;
 7435    grid-auto-columns: 100%;
 7436    grid-auto-rows: var(--slide-size);
 7437    row-gap: var(--slide-gap);
 7438    scroll-snap-type: y mandatory;
 7439    scroll-padding-block: var(--scroll-hint);
 7440    padding-block: var(--scroll-hint);
 7441    overflow-x: hidden;
 7442  }
 7443
 7444  .carousel__slides--dragging {
 7445  }
 7446
 7447  :host([vertical]) ::slotted(sl-carousel-item) {
 7448    height: 100%;
 7449  }
 7450
 7451  .carousel__slides::-webkit-scrollbar {
 7452    display: none;
 7453  }
 7454
 7455  .carousel__navigation {
 7456    grid-area: navigation;
 7457    display: contents;
 7458    font-size: var(--sl-font-size-x-large);
 7459  }
 7460
 7461  .carousel__navigation-button {
 7462    flex: 0 0 auto;
 7463    display: flex;
 7464    align-items: center;
 7465    background: none;
 7466    border: none;
 7467    border-radius: var(--sl-border-radius-small);
 7468    font-size: inherit;
 7469    color: var(--sl-color-neutral-600);
 7470    padding: var(--sl-spacing-x-small);
 7471    cursor: pointer;
 7472    transition: var(--sl-transition-medium) color;
 7473    appearance: none;
 7474  }
 7475
 7476  .carousel__navigation-button--disabled {
 7477    opacity: 0.5;
 7478    cursor: not-allowed;
 7479  }
 7480
 7481  .carousel__navigation-button--disabled::part(base) {
 7482    pointer-events: none;
 7483  }
 7484
 7485  .carousel__navigation-button--previous {
 7486    grid-column: 1;
 7487    grid-row: 1;
 7488  }
 7489
 7490  .carousel__navigation-button--next {
 7491    grid-column: 3;
 7492    grid-row: 1;
 7493  }
 7494
 7495  .carousel__pagination-item {
7496    display: block;
 7497    cursor: pointer;
 7498    background: none;
 7499    border: 0;
 7500    border-radius: var(--sl-border-radius-circle);
 7501    width: var(--sl-spacing-small);
 7502    height: var(--sl-spacing-small);
 7503    background-color: var(--sl-color-neutral-300);
 7504    padding: 0;
 7505    margin: 0;
 7506  }
 7507
 7508  .carousel__pagination-item--active {
 7509    background-color: var(--sl-color-neutral-700);
 7510    transform: scale(1.2);
 7511  }
 7512
 7513  /* Focus styles */
 7514  .carousel__slides:focus-visible,
 7515  .carousel__navigation-button:focus-visible,
 7516  .carousel__pagination-item:focus-visible {
 7517    outline: var(--sl-focus-ring);
 7518    outline-offset: var(--sl-focus-ring-offset);
 7519  }
 7520 `
 7521 /**
 7522 * @license
 7523 * Copyright 2021 Google LLC
 7524 * SPDX-License-Identifier: BSD-3-Clause
 7525 */;function*al(t,e){if(void 0!==t){let i=0;for(const r of t)yield e(r,i++)}}
 7526 /**
 7527 * @license
 7528 * Copyright 2021 Google LLC
 7529 * SPDX-License-Identifier: BSD-3-Clause
 7530 */function*nl(t,e,i=1){const r=void 0===e?0:t;e??=t;for(let t=r;i>0?t<e:e<t;t+=i)yield t}var ll=class extends Ht{constructor(){super(...arguments),this.loop=!1,this.navigation=!1,this.pagination=!1
 7531      <div part="base" class="carousel">
 7532        <div
 7533          id="scroll-container"
 7534          part="scroll-container"
 7535          class="${se({carousel__slides:!0,"carousel__slides--horizontal":"horizontal"===this.orientation,"carousel__slides--vertical":"vertical"===this.orientation,"carousel__slides--dragging":this
 7536          style="--slides-per-page: ${this.slidesPerPage};"
 7537          aria-busy="${e?"true":"false"}"
 7538          aria-atomic="true"
 7539          tabindex="0"
 7540          @keydown=${this.handleKeyDown}
 7541          @mousedown="${this.handleMouseDragStart}"
 7542          @scroll="${this.handleScroll}"
 7543          @scrollend=${this.handleScrollEnd}
 7544          @click=${this.handleClick}
 7545        >
 7546          <slot></slot>
 7547        </div>
 7548
 7549        ${this.navigation?V`
 7550              <div part="navigation" class="carousel__navigation">
 7551                <button
 7552                  part="navigation-button navigation-button--previous"
 7553                  class="${se({"carousel__navigation-button":!0,"carousel__navigation-button--previous":!0,"carousel__navigation-button--disabled":!s})}"
 7554                  aria-label="${this.localize.term("previousSlide")}"
 7555                  aria-controls="scroll-container"
 7556                  aria-disabled="${s?"false":"true"}"
 7557                  @click=${s?()=>this.previous():null}
 7558                >
 7559                  <slot name="previous-icon">
 7560                    <sl-icon library="system" name="${a?"chevron-left":"chevron-right"}"></sl-icon>
 7561                  </slot>
 7562                </button>
 7563
 7564                <button
 7565                  part="navigation-button navigation-button--next"
 7566                  class=${se({"carousel__navigation-button":!0,"carousel__navigation-button--next":!0,"carousel__navigation-button--disabled":!o})}
 7567                  aria-label="${this.localize.term("nextSlide")}"
 7568                  aria-controls="scroll-container"
 7569                  aria-disabled="${o?"false":"true"}"
 7570                  @click=${o?()=>this.next():null}
 7571                >
 7572                  <slot name="next-icon">
 7573                    <sl-icon library="system" name="${a?"chevron-right":"chevron-left"}"></sl-icon>
 7574                  </slot>
 7575                </button>
 7576              </div>
 7577            `:""}
 7578        ${this.pagination?V`
 7579              <div part="pagination" role="tablist" class="carousel__pagination">
 7580                ${al(nl(i),(e=>{const s=e===r;return V`
 7581                    <button
 7582                      part="pagination-item ${s?"pagination-item--active":""}"
 7583                      class="${se({"carousel__pagination-item":!0,"carousel__pagination-item--active":s})}"
 7584                      role="tab"
 7585                      id="tab-${e+1}"
 7586                      aria-controls="slide-${e+1}"
 7587                      aria-selected="${s?"true":"false"}"
 7588                      aria-label="${s?this.localize.term("slideNum",e+1):this.localize.term("goToSlide",e+1,i)}"
 7589                      tabindex=${s?"0":"-1"}
 7590                      @click=${()=>this.goToSlide(e*t)}
 7591                      @keydown=${this.handleKeyDown}
 7592                    ></button>
 7593                  `}))}
 7594              </div>
 7595            `:""}
 7596      </div>
 7597    `}};ll.styles=[Pt,ol],ll.dependencies={"sl-icon":Jt},At([Mt({type:Boolean,reflect:!0})],ll.prototype,"loop",2),At([Mt({type:Boolean,reflect:!0})],ll.prototype,"navigation",2),At([Mt({type:Boolea
 7598  :host {
 7599    --aspect-ratio: inherit;
 7600
 7601    display: flex;
 7602    align-items: center;
 7603    justify-content: center;
 7604    flex-direction: column;
 7605    width: 100%;
 7606    max-height: 100%;
 7607    aspect-ratio: var(--aspect-ratio);
 7608    scroll-snap-align: start;
 7609    scroll-snap-stop: always;
 7610  }
 7611
 7612  ::slotted(img) {
 7613    width: 100% !important;
 7614    height: 100% !important;
 7615    object-fit: cover;
 7616  }
 7617 `,ul=class extends Ht{connectedCallback(){super.connectedCallback()}render(){return V` <slot></slot> `}};ul.styles=[Pt,hl],ul.define("sl-carousel-item");var pl=a`
 7618  :host {
 7619    display: inline-flex;
 7620  }
 7621
 7622  .breadcrumb-item {
 7623    display: inline-flex;
 7624    align-items: center;
 7625    font-family: var(--sl-font-sans);
 7626    font-size: var(--sl-font-size-small);
 7627    font-weight: var(--sl-font-weight-semibold);
 7628    color: var(--sl-color-neutral-600);
 7629    line-height: var(--sl-line-height-normal);
 7630    white-space: nowrap;
 7631  }
 7632
 7633  .breadcrumb-item__label {
 7634    display: inline-block;
 7635    font-family: inherit;
 7636    font-size: inherit;
 7637    font-weight: inherit;
 7638    line-height: inherit;
 7639    text-decoration: none;
 7640    color: inherit;
 7641    background: none;
 7642    border: none;
7643    border-radius: var(--sl-border-radius-medium);
 7644    padding: 0;
 7645    margin: 0;
 7646    cursor: pointer;
 7647    transition: var(--sl-transition-fast) --color;
 7648  }
 7649
 7650  :host(:not(:last-of-type)) .breadcrumb-item__label {
 7651    color: var(--sl-color-primary-600);
 7652  }
 7653
 7654  :host(:not(:last-of-type)) .breadcrumb-item__label:hover {
 7655    color: var(--sl-color-primary-500);
 7656  }
 7657
 7658  :host(:not(:last-of-type)) .breadcrumb-item__label:active {
 7659    color: var(--sl-color-primary-600);
 7660  }
 7661
 7662  .breadcrumb-item__label:focus {
 7663    outline: none;
 7664  }
 7665
 7666  .breadcrumb-item__label:focus-visible {
 7667    outline: var(--sl-focus-ring);
 7668    outline-offset: var(--sl-focus-ring-offset);
 7669  }
 7670
 7671  .breadcrumb-item__prefix,
 7672  .breadcrumb-item__suffix {
 7673    display: none;
 7674    flex: 0 0 auto;
 7675    display: flex;
 7676    align-items: center;
 7677  }
 7678
 7679  .breadcrumb-item--has-prefix .breadcrumb-item__prefix {
 7680    display: inline-flex;
 7681    margin-inline-end: var(--sl-spacing-x-small);
 7682  }
 7683
 7684  .breadcrumb-item--has-suffix .breadcrumb-item__suffix {
 7685    display: inline-flex;
 7686    margin-inline-start: var(--sl-spacing-x-small);
 7687  }
 7688
 7689  :host(:last-of-type) .breadcrumb-item__separator {
 7690    display: none;
 7691  }
 7692
 7693  .breadcrumb-item__separator {
 7694    display: inline-flex;
 7695    align-items: center;
 7696    margin: 0 var(--sl-spacing-x-small);
 7697    user-select: none;
 7698    -webkit-user-select: none;
 7699  }
 7700 `,fl=class extends Ht{constructor(){super(...arguments),this.hasSlotController=new ke(this,"prefix","suffix"),this.renderType="button",this.rel="noreferrer noopener"}setRenderType(){const t=this.def
 7701      <div
 7702        part="base"
 7703        class=${se({"breadcrumb-item":!0,"breadcrumb-item--has-prefix":this.hasSlotController.test("prefix"),"breadcrumb-item--has-suffix":this.hasSlotController.test("suffix")})}
 7704      >
 7705        <span part="prefix" class="breadcrumb-item__prefix">
 7706          <slot name="prefix"></slot>
 7707        </span>
 7708
 7709        ${"link"===this.renderType?V`
 7710              <a
 7711                part="label"
 7712                class="breadcrumb-item__label breadcrumb-item__label--link"
 7713                href="${this.href}"
 7714                target="${de(this.target?this.target:void 0)}"
 7715                rel=${de(this.target?this.rel:void 0)}
 7716              >
 7717                <slot @slotchange=${this.handleSlotChange}></slot>
 7718              </a>
 7719            `:""}
 7720        ${"button"===this.renderType?V`
 7721              <button part="label" type="button" class="breadcrumb-item__label breadcrumb-item__label--button">
 7722                <slot @slotchange=${this.handleSlotChange}></slot>
 7723              </button>
 7724            `:""}
 7725        ${"dropdown"===this.renderType?V`
 7726              <div part="label" class="breadcrumb-item__label breadcrumb-item__label--drop-down">
 7727                <slot @slotchange=${this.handleSlotChange}></slot>
 7728              </div>
 7729            `:""}
 7730
 7731        <span part="suffix" class="breadcrumb-item__suffix">
 7732          <slot name="suffix"></slot>
 7733        </span>
 7734
 7735        <span part="separator" class="breadcrumb-item__separator" aria-hidden="true">
 7736          <slot name="separator"></slot>
 7737        </span>
 7738      </div>
 7739    `}};fl.styles=[Pt,pl],At([Vt("slot:not([name])")],fl.prototype,"defaultSlot",2),At([Nt()],fl.prototype,"renderType",2),At([Mt()],fl.prototype,"href",2),At([Mt()],fl.prototype,"target",2),At([Mt(
 7740  :host {
 7741    display: inline-block;
 7742
 7743    --size: 3rem;
 7744  }
 7745
 7746  .avatar {
 7747    display: inline-flex;
 7748    align-items: center;
 7749    justify-content: center;
 7750    position: relative;
 7751    width: var(--size);
 7752    height: var(--size);
 7753    background-color: var(--sl-color-neutral-400);
 7754    font-family: var(--sl-font-sans);
 7755    font-size: calc(var(--size) * 0.5);
 7756    font-weight: var(--sl-font-weight-normal);
 7757    color: var(--sl-color-neutral-0);
 7758    user-select: none;
 7759    -webkit-user-select: none;
 7760    vertical-align: middle;
 7761  }
 7762
 7763  .avatar--circle,
 7764  .avatar--circle .avatar__image {
 7765    border-radius: var(--sl-border-radius-circle);
 7766  }
 7767
 7768  .avatar--rounded,
 7769  .avatar--rounded .avatar__image {
 7770    border-radius: var(--sl-border-radius-medium);
 7771  }
 7772
 7773  .avatar--square {
 7774    border-radius: 0;
 7775  }
 7776
 7777  .avatar__icon {
 7778    display: flex;
 7779    align-items: center;
 7780    justify-content: center;
 7781    position: absolute;
 7782    top: 0;
 7783    left: 0;
 7784    width: 100%;
 7785    height: 100%;
 7786  }
 7787
 7788  .avatar__initials {
 7789    line-height: 1;
7790    text-transform: uppercase;
 7791  }
 7792
 7793  .avatar__image {
 7794    position: absolute;
 7795    top: 0;
 7796    left: 0;
 7797    width: 100%;
 7798    height: 100%;
 7799    object-fit: cover;
 7800    overflow: hidden;
 7801  }
 7802 `,gl=class extends Ht{constructor(){super(...arguments),this.hasError=!1,this.image="",this.label="",this.initials="",this.loading="eager",this.shape="circle"}handleImageChange(){this.hasError=!1}ha
 7803      <img
 7804        part="image"
 7805        class="avatar__image"
 7806        src="${this.image}"
 7807        loading="${this.loading}"
 7808        alt=""
 7809        @error="${this.handleImageLoadError}"
 7810      />
 7811    `;let e=V``;return e=this.initials?V`<div part="initials" class="avatar__initials">${this.initials}</div>`:V`
 7812        <div part="icon" class="avatar__icon" aria-hidden="true">
 7813          <slot name="icon">
 7814            <sl-icon name="person-fill" library="system"></sl-icon>
 7815          </slot>
 7816        </div>
 7817      `,V`
 7818      <div
 7819        part="base"
 7820        class=${se({avatar:!0,"avatar--circle":"circle"===this.shape,"avatar--rounded":"rounded"===this.shape,"avatar--square":"square"===this.shape})}
 7821        role="img"
 7822        aria-label=${this.label}
 7823      >
 7824        ${this.image&&!this.hasError?t:e}
 7825      </div>
 7826    `}};gl.styles=[Pt,ml],gl.dependencies={"sl-icon":Jt},At([Nt()],gl.prototype,"hasError",2),At([Mt()],gl.prototype,"image",2),At([Mt()],gl.prototype,"label",2),At([Mt()],gl.prototype,"initials",2)
 7827  .breadcrumb {
 7828    display: flex;
 7829    align-items: center;
 7830    flex-wrap: wrap;
 7831  }
 7832 `,vl=class extends Ht{constructor(){super(...arguments),this.localize=new Re(this),this.separatorDir=this.localize.dir(),this.label=""}getSeparator(){const t=this.separatorSlot.assignedElements({fla
 7833      <nav part="base" class="breadcrumb" aria-label=${this.label}>
 7834        <slot @slotchange=${this.handleSlotChange}></slot>
 7835      </nav>
 7836
 7837      <span hidden aria-hidden="true">
 7838        <slot name="separator">
 7839          <sl-icon name=${"rtl"===this.localize.dir()?"chevron-left":"chevron-right"} library="system"></sl-icon>
 7840        </slot>
 7841      </span>
 7842    `}};vl.styles=[Pt,bl],vl.dependencies={"sl-icon":Jt},At([Vt("slot")],vl.prototype,"defaultSlot",2),At([Vt('slot[name="separator"]')],vl.prototype,"separatorSlot",2),At([Mt()],vl.prototype,"label
 7843  :host {
 7844    --control-box-size: 3rem;
 7845    --icon-size: calc(var(--control-box-size) * 0.625);
 7846
 7847    display: inline-flex;
 7848    position: relative;
 7849    cursor: pointer;
 7850  }
 7851
 7852  img {
 7853    display: block;
 7854    width: 100%;
 7855    height: 100%;
 7856  }
 7857
 7858  img[aria-hidden='true'] {
 7859    display: none;
 7860  }
 7861
 7862  .animated-image__control-box {
 7863    display: flex;
 7864    position: absolute;
 7865    align-items: center;
 7866    justify-content: center;
 7867    top: calc(50% - var(--control-box-size) / 2);
 7868    right: calc(50% - var(--control-box-size) / 2);
 7869    width: var(--control-box-size);
 7870    height: var(--control-box-size);
 7871    font-size: var(--icon-size);
 7872    background: none;
 7873    border: solid 2px currentColor;
 7874    background-color: rgb(0 0 0 /50%);
 7875    border-radius: var(--sl-border-radius-circle);
 7876    color: white;
 7877    pointer-events: none;
 7878    transition: var(--sl-transition-fast) opacity;
 7879  }
 7880
 7881  :host([play]:hover) .animated-image__control-box {
 7882    opacity: 1;
 7883  }
 7884
 7885  :host([play]:not(:hover)) .animated-image__control-box {
 7886    opacity: 0;
 7887  }
 7888
 7889  :host([play]) slot[name='play-icon'],
 7890  :host(:not([play])) slot[name='pause-icon'] {
 7891    display: none;
 7892  }
 7893 `,wl=class extends Ht{constructor(){super(...arguments),this.isLoaded=!1}handleClick(){this.play=!this.play}handleLoad(){const t=document.createElement("canvas"),{width:e,height:i}=this.animatedImag
 7894      <div class="animated-image">
 7895        <img
 7896          class="animated-image__animated"
 7897          src=${this.src}
 7898          alt=${this.alt}
 7899          crossorigin="anonymous"
 7900          aria-hidden=${this.play?"false":"true"}
 7901          @click=${this.handleClick}
 7902          @load=${this.handleLoad}
 7903          @error=${this.handleError}
 7904        />
 7905
 7906        ${this.isLoaded?V`
 7907              <img
 7908                class="animated-image__frozen"
 7909                src=${this.frozenFrame}
 7910                alt=${this.alt}
 7911                aria-hidden=${this.play?"true":"false"}
 7912                @click=${this.handleClick}
 7913              />
 7914
 7915              <div part="control-box" class="animated-image__control-box">
 7916                <slot name="play-icon"><sl-icon name="play-fill" library="system"></sl-icon></slot>
 7917                <slot name="pause-icon"><sl-icon name="pause-fill" library="system"></sl-icon></slot>
 7918              </div>
 7919            `:""}
 7920      </div>
 7921    `}};wl.styles=[Pt,yl],wl.dependencies={"sl-icon":Jt},At([Vt(".animated-image__animated")],wl.prototype,"animatedImage",2),At([Nt()],wl.prototype,"frozenFrame",2),At([Nt()],wl.prototype,"isLoaded
 7922  :host {
 7923    display: inline-flex;
 7924  }
 7925
 7926  .badge {
 7927    display: inline-flex;
 7928    align-items: center;
 7929    justify-content: center;
 7930    font-size: max(12px, 0.75em);
 7931    font-weight: var(--sl-font-weight-semibold);
 7932    letter-spacing: var(--sl-letter-spacing-normal);
 7933    line-height: 1;
 7934    border-radius: var(--sl-border-radius-small);
 7935    border: solid 1px var(--sl-color-neutral-0);
 7936    white-space: nowrap;
7937    padding: 0.35em 0.6em;
 7938    user-select: none;
 7939    -webkit-user-select: none;
 7940    cursor: inherit;
 7941  }
 7942
 7943  /* Variant modifiers */
 7944  .badge--primary {
 7945    background-color: var(--sl-color-primary-600);
 7946    color: var(--sl-color-neutral-0);
 7947  }
 7948
 7949  .badge--success {
 7950    background-color: var(--sl-color-success-600);
 7951    color: var(--sl-color-neutral-0);
 7952  }
 7953
 7954  .badge--neutral {
 7955    background-color: var(--sl-color-neutral-600);
 7956    color: var(--sl-color-neutral-0);
 7957  }
 7958
 7959  .badge--warning {
 7960    background-color: var(--sl-color-warning-600);
 7961    color: var(--sl-color-neutral-0);
 7962  }
 7963
 7964  .badge--danger {
 7965    background-color: var(--sl-color-danger-600);
 7966    color: var(--sl-color-neutral-0);
 7967  }
 7968
 7969  /* Pill modifier */
 7970  .badge--pill {
 7971    border-radius: var(--sl-border-radius-pill);
 7972  }
 7973
 7974  /* Pulse modifier */
 7975  .badge--pulse {
 7976    animation: pulse 1.5s infinite;
 7977  }
 7978
 7979  .badge--pulse.badge--primary {
 7980    --pulse-color: var(--sl-color-primary-600);
 7981  }
 7982
 7983  .badge--pulse.badge--success {
 7984    --pulse-color: var(--sl-color-success-600);
 7985  }
 7986
 7987  .badge--pulse.badge--neutral {
 7988    --pulse-color: var(--sl-color-neutral-600);
 7989  }
 7990
 7991  .badge--pulse.badge--warning {
 7992    --pulse-color: var(--sl-color-warning-600);
 7993  }
 7994
 7995  .badge--pulse.badge--danger {
 7996    --pulse-color: var(--sl-color-danger-600);
 7997  }
 7998
 7999  @keyframes pulse {
 8000    0% {
 8001      box-shadow: 0 0 0 0 var(--pulse-color);
 8002    }
 8003    70% {
 8004      box-shadow: 0 0 0 0.5rem transparent;
 8005    }
 8006    100% {
 8007      box-shadow: 0 0 0 0 transparent;
 8008    }
 8009  }
 8010 `,xl=class extends Ht{constructor(){super(...arguments),this.variant="primary",this.pill=!1,this.pulse=!1}render(){return V`
 8011      <span
 8012        part="base"
 8013        class=${se({badge:!0,"badge--primary":"primary"===this.variant,"badge--success":"success"===this.variant,"badge--neutral":"neutral"===this.variant,"badge--warning":"warning"===this.variant,"
 8014        role="status"
 8015      >
 8016        <slot></slot>
 8017      </span>
 8018    `}};xl.styles=[Pt,_l],At([Mt({reflect:!0})],xl.prototype,"variant",2),At([Mt({type:Boolean,reflect:!0})],xl.prototype,"pill",2),At([Mt({type:Boolean,reflect:!0})],xl.prototype,"pulse",2),xl.defi
 8019  :host {
 8020    display: contents;
 8021  }
 8022 `,$l=class extends Ht{constructor(){super(...arguments),this.hasStarted=!1,this.name="none",this.play=!1,this.delay=0,this.direction="normal",this.duration=1e3,this.easing="linear",this.endDelay=0,t
 8023        webstatus-typeahead-dropdown {
 8024          width: 100%;
 8025        }
 8026      `]}_fireEvent(t,e){const i=new CustomEvent(t,{bubbles:!0,composed:!0,detail:e});this.dispatchEvent(i)}reflectValue(t){t&&t.stopPropagation();const e=this.slInputRef.value;this.value=e.value}as
 8027      <sl-input
 8028        id="inputfield"
 8029        slot="trigger"
 8030        placeholder=${this.placeholder}
 8031        value=${ri(this.value)}
 8032        ${ss(this.slInputRef)}
 8033        autocomplete="off"
 8034        spellcheck="false"
 8035        @keydown="${this.handleInputFieldKeyDown}"
 8036        @keyup="${this.handleInputFieldKeyUp}"
 8037        @focus="${this.calcCandidates}"
 8038        @click="${this.calcCandidates}"
 8039        @sl-change="${this.reflectValue}"
 8040        @sl-input="${this.reflectValue}"
 8041      >
 8042        <slot name="prefix" slot="prefix"></slot>
 8043        <slot name="suffix" slot="suffix"></slot>
 8044      </sl-input>
 8045    `}renderAutocompleteMenu(){return V`
 8046      <sl-menu
 8047        @click=${t=>t.preventDefault()}
 8048        @sl-select=${this.handleCandidateSelected}
 8049      >
 8050        ${this.candidates.map((t=>V`
 8051            <webstatus-typeahead-item
 8052              value=${t.name}
 8053              doc=${t.doc}
 8054              prefix=${this.prefix||""}
 8055            ></webstatus-typeahead-item>
 8056          `))}
 8057      </sl-menu>
 8058    `}render(){return V`
 8059      <webstatus-typeahead-dropdown
 8060        stay-open-on-select
 8061        sync="width"
 8062        ${ss(this.slDropdownRef)}
 8063      >
 8064        ${this.renderInputField()} ${this.renderAutocompleteMenu()}
 8065      </webstatus-typeahead-dropdown>
 8066    `}};El([Mt()],Il.prototype,"value",void 0),El([Mt()],Il.prototype,"placeholder",void 0),El([Nt()],Il.prototype,"candidates",void 0),El([Mt({type:Array})],Il.prototype,"vocabulary",void 0),El([Nt
 8067        .menu-item {
 8068          display: flex;
 8069          flex-wrap: wrap;
 8070          font-family: var(--sl-font-sans);
 8071          font-size: var(--sl-font-size-medium);
 8072          font-weight: var(--sl-font-weight-normal);
 8073          line-height: var(--sl-line-height-normal);
 8074          letter-spacing: var(--sl-letter-spacing-normal);
 8075          color: var(--sl-color-neutral-700);
 8076          padding: var(--sl-spacing-2x-small) var(--sl-spacing-2x-small);
 8077          transition: var(--sl-transition-fast) fill;
 8078          user-select: none;
 8079          -webkit-user-select: none;
 8080          white-space: nowrap;
 8081          cursor: pointer;
 8082        }
 8083
8084        .active {
 8085          outline: none;
 8086          background-color: var(--sl-color-primary-200);
 8087          opacity: 1;
 8088        }
 8089        #value {
 8090          width: 24em;
 8091          overflow-x: hidden;
 8092        }
 8093        code {
 8094          font-size: 85%;
 8095          background: #eee;
 8096          padding: var(--content-padding-quarter);
 8097        }
 8098      `]}handleMouseOver(t){this.parentElement&&this.parentElement.setCurrentItem(this),t.stopPropagation()}highlight(t){const e=t.toLowerCase().indexOf(this.prefix.toLowerCase());if(-1===e)return t
 8099      <div
 8100        class="menu-item ${"0"===this.tabindex?"active":""}"
 8101        @mouseover=${this.handleMouseOver}
 8102      >
 8103        <span id="value"><code>${t}</code></span>
 8104        <span id="doc">${e}</span>
 8105      </div>
 8106    `}};function Dl(t){let e="Unknown error",i=500;switch(t instanceof Object&&"message"in t&&"string"==typeof t.message&&"code"in t&&"number"==typeof t.code?(e=t.message,i=t.code):t instanceof Erro
 8107        .data-table {
 8108          margin: var(--content-padding) 0;
 8109        }
 8110        .data-table th {
 8111          padding: var(--content-padding-quarter) var(--content-padding);
 8112        }
 8113        .header-row th {
 8114          border-left: var(--default-border);
 8115          border-right: var(--default-border);
 8116        }
 8117        .header-row th.sortable {
 8118          min-width: 4em;
 8119        }
 8120        .header-row th.sortable:hover {
 8121          background: var(--table-header-hover-background);
 8122        }
 8123        th span.hover-only {
 8124          display: none;
 8125        }
 8126        th:hover span.hover-only {
 8127          display: inline;
 8128        }
 8129        .baseline-date-block {
 8130          padding-top: var(--content-padding-quarter);
 8131        }
 8132        .browser-impl-unavailable img {
 8133          filter: grayscale(1);
 8134          opacity: 50%;
 8135        }
 8136        .percent {
 8137          display: inline-block;
 8138          width: 6ex;
 8139          text-align: right;
 8140        }
 8141        .missing.percent,
 8142        tr .centered {
 8143          text-align: center;
 8144        }
 8145
 8146        td.message {
 8147          height: 8em;
 8148          text-align: center;
 8149        }
 8150        td.message div:first-child {
 8151          font-size: 110%;
 8152          font-weight: bold;
 8153          padding-bottom: var(--content-padding-half);
 8154        }
 8155
 8156        sl-skeleton {
 8157          width: 4em;
 8158        }
 8159        sl-skeleton.col-name {
 8160          width: 6em;
 8161        }
 8162        tr:nth-of-type(even) sl-skeleton.col-name {
 8163          width: 9em;
 8164        }
 8165        sl-skeleton.col-baseline_status {
 8166          width: 5em;
 8167        }
 8168        tr:nth-of-type(even) sl-skeleton.col-baseline_status {
 8169          width: 7em;
 8170        }
 8171      `]}findFeaturesFromAtom(t,e){if(!this.taskTracker.data?.data)return[];const i=[];for(const r of this.taskTracker.data.data){if("id"===t&&r?.feature_id===e){i.push(r);break}"name"===t&&(r?.feat
 8172      <table class="data-table">
 8173        ${function(t){const e=ka(t);return V`
 8174    ${e.map((({count:t})=>V`<colgroup span=${t}></colgroup>`))}
 8175  `}(t)}
 8176        <thead>
 8177          ${function(t){const e=ka(t);return V`
 8178    ${e.map((({group:t,count:e})=>V`<th colspan=${e}>${t}</th>`))}
 8179  `}(t)}
 8180          <tr class="header-row">
 8181            ${i}
 8182          </tr>
 8183        </thead>
 8184        <tbody>
 8185          ${this.renderTableBody(t)}
 8186        </tbody>
 8187      </table>
 8188    `}renderTableBody(t){switch(this.taskTracker.status){case Vo:return 0===this.taskTracker.data?.data?.length?this.renderBodyWhenNoResults(t):this.renderBodyWhenComplete(t);case jo:return this.ren
 8189      ${e?.map((e=>this.renderFeatureRow(e,t)))}
 8190    `}renderBodyWhenNoResults(t){return V`
 8191      <tr>
 8192        <td class="message" colspan=${t.length}>
 8193          <div>This query produced zero results.</div>
 8194          <div>Try removing some query terms.</div>
 8195        </td>
 8196      </tr>
 8197    `}renderBodyWhenError(t){return this.taskTracker.error instanceof zl?V`
 8198        <tr>
 8199          <td class="message" colspan=${t.length}>
 8200            <div>Invalid query...</div>
 8201            <div>
 8202              Please review the
 8203              <a href="${"https://github.com/GoogleChrome/webstatus.dev/blob/main/antlr/FeatureSearch.md"}" target="_blank"
 8204                >search syntax</a
 8205              >
 8206              or
 8207              <a href="${Bl}" target="_blank"
 8208                >report an error</a
 8209              >.
 8210            </div>
 8211          </td>
 8212        </tr>
 8213      `:V`
 8214      <tr>
 8215        <td class="message" colspan=${t.length}>
 8216          <div>Something went wrong...</div>
 8217          <div>We had some trouble loading this data.</div>
 8218          <div>
 8219            Please refresh the page or
 8220            <a href="${Bl}" target="_blank"
 8221              >report an error</a
 8222            >.
 8223          </div>
 8224        </td>
 8225      </tr>
 8226    `}renderBodyWhenPending(t){const e=this.taskTracker.data?.data?.length||10;return V`
 8227      ${al(nl(e),(()=>V`
 8228          <tr>
 8229            ${t.map((t=>V` <td>${this.renderShimmer(t)}</td> `))}
 8230          </tr>
8231        `))}
 8232    `}renderShimmer(t){return V`
 8233      <sl-skeleton effect="sheen" class="col-${t}"></sl-skeleton>
 8234    `}renderFeatureRow(t,e){return V`
 8235      <tr>
 8236        ${e.map((e=>V`
 8237            <td class=${xa[e].cellClass??""}>
 8238              ${function(t,e,i){const r=xa[i];return r?.cellRenderer?r.cellRenderer(t,e,r.options):H}(t,this.location,e)}
 8239            </td>
 8240          `))}
 8241      </tr>
 8242    `}};Wl([Mt({type:Object})],ql.prototype,"taskTracker",void 0),Wl([Mt({type:Object})],ql.prototype,"location",void 0),Wl([Mt({type:Object})],ql.prototype,"bookmark",void 0),ql=Wl([Rt("webstatus-o
 8243        .all-filter-controls,
 8244        .filter-by-feature-name,
 8245        .filter-buttons {
 8246          gap: var(--content-padding);
 8247        }
 8248
 8249        #baseline_since_button > sl-icon[name='calendar-blank'],
 8250        #standards_track_button > sl-checkbox {
 8251          padding-left: 1rem;
 8252        }
 8253
 8254        #filter-input-input {
 8255          --sl-input-spacing-medium: 0.875rem;
 8256        }
 8257        #filter-submit-button::part(base) {
 8258          --sl-spacing-x-small: 0.275rem;
 8259          --sl-input-height-small: 1.475rem;
 8260        }
 8261
 8262        /** Filter input submit button pulses after changes. */
 8263        @keyframes pulseBtn {
 8264          0% {
 8265            box-shadow: 0px 0px 0px 0px var(--sl-color-success-600);
 8266          }
 8267          100% {
 8268            box-shadow: 0px 0px 8px 2px var(--sl-color-success-600);
 8269          }
 8270        }
 8271
 8272        .glow-btn {
 8273          border-radius: 4px;
 8274        }
 8275        .glow-btn.changed {
 8276          animation-name: pulseBtn;
 8277          animation-duration: 0.9s;
 8278          animation-iteration-count: infinite;
 8279          animation-direction: alternate;
 8280          animation-timing-function: ease-in-out;
 8281        }
 8282      `]}connectedCallback(){super.connectedCallback(),document.addEventListener("keyup",this.handleDocumentKeyUp)}disconnectedCallback(){super.disconnectedCallback(),document.removeEventListener("k
 8283      <sl-button
 8284        id="columns-button"
 8285        slot="trigger"
 8286        @click=${()=>async function(t){return Da||(Da=document.createElement("webstatus-columns-dialog"),document.body.appendChild(Da),await Da.updateComplete),await Da.openWithContext(t),Da}(this.l
 8287      >
 8288        <sl-icon
 8289          slot="prefix"
 8290          name="square-split-horizontal"
 8291          library="phosphor"
 8292        ></sl-icon>
 8293        Columns
 8294      </sl-button>
 8295    `}renderFilterInputBox(t){return V`
 8296      <webstatus-typeahead
 8297        id="filter-input-input"
 8298        ${ss(this.typeaheadRef)}
 8299        class="halign-stretch"
 8300        placeholder="Filter by ..."
 8301        value="${t}"
 8302        .vocabulary=${mc}
 8303        @sl-change=${()=>this.gotoFilterQueryString()}
 8304      >
 8305        <sl-button
 8306          id="filter-submit-button"
 8307          class="glow-btn"
 8308          size="small"
 8309          type="submit"
 8310          slot="prefix"
 8311          submit
 8312          variant="success"
 8313          outline
 8314          @click=${()=>this.gotoFilterQueryString()}
 8315        >
 8316          <sl-icon slot="prefix" name="search"></sl-icon>
 8317        </sl-button>
 8318      </webstatus-typeahead>
 8319    `}renderExportButton(){return V`
 8320      <sl-button
 8321        id="export-to-csv-button"
 8322        @click=${()=>{this.exportDataStatus=Uo,this.exportToCSV().then((()=>{this.exportDataStatus=Vo})).catch((async t=>{await(new jl).toast(t?.message,"danger","exclamation-triangle"),this.exportD
 8323        ?loading=${this.exportDataStatus===Uo}
 8324        ?disabled=${this.exportDataStatus===Uo}
 8325      >
 8326        <sl-icon slot="prefix" name="download"></sl-icon>
 8327        Export to CSV
 8328      </sl-button>
 8329    `}render(){const t=Go(this.location);return V`
 8330      <div class="vbox all-filter-controls">
 8331        <div class="hbox filter-by-feature-name">
 8332          ${this.renderFilterInputBox(t)} ${this.renderColumnButton()}
 8333          ${this.renderExportButton()}
 8334        </div>
 8335      </div>
 8336    `}};fc([Bs({context:aa}),Nt()],gc.prototype,"apiClient",void 0),fc([Nt()],gc.prototype,"location",void 0),fc([Nt()],gc.prototype,"exportDataStatus",void 0),gc=fc([Rt("webstatus-overview-filters"
 8337        .stepper {
 8338          width: 7em;
 8339        }
 8340
 8341        .active {
 8342          background: var(--pagination-active-background);
 8343        }
 8344
 8345        sl-button::part(base):hover {
 8346          background: var(--pagination-hover-background);
 8347        }
 8348
 8349        #items-per-page {
 8350          align-self: center;
 8351          color: var(--unimportant-text-color);
 8352          font-size: var(--sl-input-font-size-small);
 8353        }
 8354
 8355        sl-select {
 8356          align-self: center;
 8357          display: inline-block;
 8358          margin: 0 var(--content-padding-quarter) 0 var(--content-padding);
 8359          width: 5em;
 8360        }
 8361      `]}formatUrlForOffset(t){return ra(this.location,{start:t})}formatUrlForRelativeOffset(t){const e=this.start+t;if(!(void 0===this.totalCount||e<=-this.pageSize||e>=this.totalCount))return this
 8362      <sl-button
 8363        variant="text"
 8364        id="jump_1"
 8365        class="page-button ${0===t?"active":""}"
 8366        href=${this.formatUrlForOffset(0)}
 8367      >
 8368        ${1}
 8369      </sl-button>
 8370      ${i?V`<div>...</div>`:H}
 8371      ${al(o,(e=>V`
 8372          <sl-button
 8373            variant="text"
 8374            id="jump_${e+1}"
 8375            class="page-button ${e===t?"active":""}"
 8376            href=${this.formatUrlForOffset(e*this.pageSize)}
 8377          >
8378            ${e+1}
 8379          </sl-button>
 8380        `))}
 8381      ${r?V`<div>...</div>`:H}
 8382      ${s?V`<sl-button
 8383            variant="text"
 8384            id="jump_${e}"
 8385            class="page-button ${e-1===t?"active":""}"
 8386            href=${this.formatUrlForOffset((e-1)*this.pageSize)}
 8387          >
 8388            ${e}
 8389          </sl-button>`:H}
 8390    `}setItemsPerPage(t){const e=t.target,i=parseInt(e.value),r=ra(this.location,{num:i});Qc(r)}renderItemsPerPage(){const t=[25,50,100];return t.includes(this.pageSize)||(t.push(this.pageSize),t.so
 8391      <sl-select
 8392        value="${this.pageSize}"
 8393        size="small"
 8394        @sl-change=${this.setItemsPerPage}
 8395      >
 8396        ${t.map((t=>V`
 8397            <sl-option id="opt_${t}" value=${t}>${t}</sl-option>
 8398          `))}
 8399      </sl-select>
 8400      <span id="items-per-page"> items per page </span>
 8401    `}render(){if(void 0===this.totalCount||0===this.totalCount)return V``;this.start=Qo(this.location),this.pageSize=ea(this.location);const t=this.formatUrlForRelativeOffset(-this.pageSize),e=this
 8402      <div
 8403        id="main"
 8404        class="hbox halign-items-space-between valign-items-center"
 8405      >
 8406        <div class="spacer"></div>
 8407        <sl-button
 8408          variant="text"
 8409          id="previous"
 8410          class="stepper"
 8411          href=${de(t)}
 8412          ?disabled=${void 0===t}
 8413          >Previous</sl-button
 8414        >
 8415
 8416        ${this.renderPageButtons()}
 8417
 8418        <sl-button
 8419          variant="text"
 8420          id="next"
 8421          class="stepper"
 8422          href=${de(e)}
 8423          ?disabled=${void 0===e}
 8424          >Next</sl-button
 8425        >
 8426
 8427        ${this.renderItemsPerPage()}
 8428
 8429        <div class="spacer"></div>
 8430      </div>
 8431    `}};bc([Mt({type:Number})],vc.prototype,"totalCount",void 0),bc([Nt()],vc.prototype,"start",void 0),bc([Nt()],vc.prototype,"pageSize",void 0),bc([Mt({type:Object})],vc.prototype,"location",void 
8432        .header-line {
 8433          gap: 1em;
 8434        }
 8435        .stats-summary {
 8436          color: var(--unimportant-text-color);
 8437          margin-right: var(--content-padding);
 8438        }
 8439        .overview-description {
 8440          color: var(--unimportant-text-color);
 8441          margin-bottom: var(--content-padding);
 8442        }
 8443      `]}renderCount(){switch(this.taskTracker.status){case Bo:case Uo:return V`Loading features...`;case Vo:return V`
 8444          <span class="stats-summary">
 8445            ${this.taskTracker.data?.metadata.total??0} features
 8446          </span>
 8447        `;case jo:return V`Failed to load features`}}render(){const t=wc(this.appBookmarkInfo,this.location),e=t?t.name:"Features overview",i=t?.description;return V`
 8448      <div class="main">
 8449        <div class="hbox halign-items-space-between header-line">
 8450          <h1 class="halign-stretch" id="overview-title">${e}</h1>
 8451        </div>
 8452        ${i?V`<div class="hbox wrap" id="overview-description">
 8453              <h3>${i}</h3>
 8454            </div>`:H}
 8455        <div class="hbox">${this.renderCount()}</div>
 8456        <br />
 8457        <webstatus-overview-filters
 8458          .location=${this.location}
 8459        ></webstatus-overview-filters>
 8460        <br />
 8461
 8462        <webstatus-overview-table
 8463          .location=${this.location}
 8464          .taskTracker=${this.taskTracker}
 8465          .bookmark=${t}
 8466        >
 8467        </webstatus-overview-table>
 8468        <webstatus-overview-pagination
 8469          .location=${this.location}
 8470          .totalCount=${this.taskTracker.data?.metadata.total??0}
 8471        ></webstatus-overview-pagination>
 8472      </div>
 8473    `}};_c([Mt({type:Object})],xc.prototype,"taskTracker",void 0),_c([Mt({type:Object})],xc.prototype,"location",void 0),_c([Bs({context:yc,subscribe:!0}),Nt()],xc.prototype,"appBookmarkInfo",void 0
 8474      <webstatus-overview-content
 8475        .location=${this.location}
 8476        .taskTracker=${this.taskTracker}
 8477      >
 8478      </webstatus-overview-content>
 8479    `}};kc([Bs({context:aa}),Nt()],Cc.prototype,"apiClient",void 0),kc([Nt()],Cc.prototype,"taskTracker",void 0),kc([Mt({type:Object})],Cc.prototype,"location",void 0),kc([Nt()],Cc.prototype,"curren
 8480        .chart_container {
 8481          padding: 0;
 8482          margin: 0;
 8483          border: 0;
 8484        }
 8485
 8486        /* Disable chart interaction while loading */
 8487        .chart_container.loading .google-visualization-charteditor-svg {
 8488          pointer-events: none;
 8489        }
 8490
 8491        /* override the fixed width of the chart */
 8492        .chart_container > div > div > div {
 8493          width: auto !important;
 8494        }
 8495      `]}draw(){this.chartWrapper&&(this.chartWrapper.draw(),this.chartWrapper?.getChart()?.setSelection(this.currentSelection))}firstUpdated(){this._resizeObserver=new ResizeObserver((()=>{this.dra
 8496      <div class="${t}">
 8497        ${this.dataLoadingStatus===jo?V`<div class="error-message">Error loading chart data.</div>`:H}
 8498        <div id="${this.containerId}"></div>
 8499      </div>
 8500    `}updated(t){t.has("gchartsLibraryLoaded")&&this.gchartsLibraryLoaded&&this._pendingDataObj&&(this.dataTable=this.convertWebStatusDataObjToDataTable(this._pendingDataObj),this._pendingDataObj=vo
 8501        .hbox,
 8502        .vbox {
 8503          gap: var(--content-padding-large);
 8504        }
 8505        #date-range-picker-btn {
 8506          justify-content: center;
 8507          margin-top: var(--sl-input-label-font-size-medium);
 8508        }
 8509      `]}showPicker(t){t?.showPicker()}async handleStartDateChange(t){const e=new Date(this.startDateEl?.valueAsDate||"");if(!this.isValidDate(e)||this.minimumDate&&this.minimumDate>e||this.endDate&
 8510      <div class="hbox wrap">
 8511        <label>
 8512          Start date
 8513          <sl-input
 8514            id="start-date"
 8515            @sl-change=${this.handleStartDateChange}
 8516            @click=${()=>{this.showPicker(this.startDateEl)}}
 8517            type="date"
 8518            .min=${this.toIsoDate(this.minimumDate)}
 8519            .max=${this.toIsoDate(this.endDate)}
 8520            .valueAsDate="${this.startDate??null}"
 8521          ></sl-input>
 8522        </label>
 8523        <label>
 8524          End date
8525          <sl-input
 8526            id="end-date"
 8527            @sl-change=${this.handleEndDateChange}
 8528            @click=${()=>{this.showPicker(this.endDateEl)}}
 8529            type="date"
 8530            .min=${this.toIsoDate(this.startDate)}
 8531            .max=${this.toIsoDate(this.maximumDate)}
 8532            .valueAsDate="${this.endDate??null}"
 8533          ></sl-input>
 8534        </label>
 8535        <sl-button
 8536          id="date-range-picker-btn"
 8537          class="vbox"
 8538          variant="primary"
 8539          size="medium"
 8540          ?disabled=${!this.isSubmitButtonEnabled()}
 8541          @click=${this.handleSubmit}
 8542        >
 8543          <sl-icon name="search" slot="prefix"></sl-icon>
 8544        </sl-button>
 8545      </div>
 8546    `}};Ic([Mt({type:Object})],Tc.prototype,"minimumDate",void 0),Ic([Mt({type:Object})],Tc.prototype,"maximumDate",void 0),Ic([Mt({type:Object})],Tc.prototype,"startDate",void 0),Ic([Mt({type:Objec
 8547        .hbox,
 8548        .vbox {
 8549          gap: var(--content-padding-large);
 8550        }
 8551      `]}async firstUpdated(){const t=this._getDateRange({search:this.location.search});t&&(t.start||t.end)&&(this.startDate=t.start&&t.start>=this.minDate&&t.start<=this.maxDate?t.start:Oc,this.end
 8552      <webstatus-form-date-range-picker
 8553        .startDate=${this.startDate}
 8554        .endDate=${this.endDate}
 8555        .minimumDate=${this.minDate}
 8556        .maximumDate=${this.maxDate}
 8557        @webstatus-date-range-change=${this.handleDateRangeChangeEvent}
 8558      ></webstatus-form-date-range-picker>
 8559    `}}Ac([Nt()],Rc.prototype,"startDate",void 0),Ac([Nt()],Rc.prototype,"endDate",void 0);var Lc=function(t,e,i,r){var s,o=arguments.length,a=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,i):r
 8560        .hbox,
 8561        .vbox {
 8562          gap: var(--content-padding-large);
 8563        }
 8564        sl-card {
 8565          display: block;
 8566          width: auto;
 8567        }
 8568        .chart-panel {
 8569          min-height: 300px;
 8570          width: 100%;
 8571        }
 8572
 8573        .datapoint-details-panel {
 8574          min-height: 100px;
 8575          width: 100%;
 8576        }
 8577
 8578        .error-chart-panel,
 8579        .pending-chart-panel,
 8580        .initial-chart-panel,
 8581        .datapoint-details-panel {
 8582          flex-direction: column;
 8583          justify-content: center;
 8584          align-items: center;
 8585          display: inline-flex;
 8586        }
 8587      `]}setDisplayDataFromMap(t){const e={cols:[],rows:[]};e.cols.push({type:"date",label:"Date",role:"domain"});for(const i of t)e.cols.push({type:"number",label:i.label,role:"data"}),void 0!==i.g
 8588      id="${this.getPanelID()}-error"
 8589      class="error-chart-panel chart-panel"
 8590    >
 8591      Error when loading chart: ${t}
 8592    </div>`}renderChartWhenInitial(){return V`<div
 8593      id="${this.getPanelID()}-initial"
 8594      class="initial-chart-panel chart-panel"
 8595    >
 8596      Preparing request for stats.
 8597    </div>`}renderChartWhenPending(){return this.resetPointSelectedTask(),V`<div
 8598      id="${this.getPanelID()}-pending"
 8599      class="pending-chart-panel chart-panel"
 8600    >
 8601      <div class="spinner-container">
 8602        <sl-spinner></sl-spinner>
 8603      </div>
 8604      <div class="pending-chart-message">Loading chart</div>
 8605    </div>`}renderChart(){return this._task?this._task?.render({complete:()=>this.renderChartWhenComplete(),error:t=>this.renderChartWhenError(t),initial:()=>this.renderChartWhenInitial(),pending:()
 8606      <div
 8607        id="${this.getPanelID()}-complete"
 8608        class="complete-chart-panel chart-panel"
 8609      >
 8610        <webstatus-gchart
 8611          id="${this.getPanelID()}-chart"
 8612          @point-selected=${this.handlePointSelected}
 8613          @point-deselected=${this.handlePointDeselected}
 8614          .hasMax=${this.hasMax}
 8615          .containerId="${this.getPanelID()}-chart-container"
 8616          .chartType="${"LineChart"}"
 8617          .dataObj="${this.data}"
 8618          .options="${this.generateDisplayDataChartOptions()}"
 8619        >
 8620          Loading chart...
 8621        </webstatus-gchart>
 8622      </div>
 8623    `}generateDisplayDataChartOptions(){const{seriesColors:t,vAxisTitle:e}=this.getDisplayDataChartOptionsInput(),i=new Date(this.endDate.getTime()+864e5);return{height:300,hAxis:{title:"",titleText
 8624      <div
 8625        id="${this.getPanelID()}-datapoint-details-complete"
 8626        class="datapoint-details-panel"
 8627      >
 8628        ${void 0===this._renderCustomPointSelectedSuccess?H:this._renderCustomPointSelectedSuccess()}
 8629      </div>
 8630    `}_renderPointSelectPending(){return V`<div
 8631      id="${this.getPanelID()}-datapoint-details-pending"
 8632      class="datapoint-details-panel"
 8633    >
 8634      <div class="spinner-container">
 8635        <sl-spinner></sl-spinner>
 8636      </div>
 8637      <div class="pending-chart-message">
 8638        Loading details about data point...
 8639      </div>
 8640    </div>`}_renderPointSelectInitial(){return V`<div
 8641      id="${this.getPanelID()}-datapoint-details-initial"
 8642      class="datapoint-details-panel"
 8643    >
 8644      Preparing request for datapoint details.
 8645    </div>`}_renderPointSelectFailure(t){return V`<div
 8646      id="${this.getPanelID()}-datapoint-details-error"
 8647      class="datapoint-details-panel"
 8648    >
 8649      Error when loading details about selected data point: ${t}
 8650    </div>`}renderPointSelectedDetails(){return void 0===this._pointSelectedTask?V`${H}`:V`
 8651      <div slot="footer">
 8652        ${this._pointSelectedTask?.render({complete:()=>this._renderPointSelectedSuccess(),error:t=>this._renderPointSelectFailure(t),initial:()=>this._renderPointSelectInitial(),pending:()=>this._r
 8653      </div>
 8654    `}render(){return V`
 8655      <sl-card id="${this.getPanelID()}">
 8656        <div class="hbox">
 8657          <div slot="header">${this.getPanelText()}</div>
 8658          <div class="spacer"></div>
 8659        </div>
 8660        <div>${this.renderChart()}</div>
 8661        ${this.renderPointSelectedDetails()}
 8662      </sl-card>
 8663    `}}Lc([Mt({type:Object})],Fc.prototype,"startDate",void 0),Lc([Mt({type:Object})],Fc.prototype,"endDate",void 0),Lc([Nt()],Fc.prototype,"data",void 0),Lc([Bs({context:aa})],Fc.prototype,"apiClie
 8664        .crumbs {
 8665          color: #aaa;
 8666        }
 8667        .crumbs a {
 8668          text-decoration: none;
 8669        }
 8670
 8671        #nameAndOffsiteLinks {
8672          align-items: center;
 8673        }
 8674
 8675        sl-card .card {
 8676          height: 100%;
 8677        }
 8678
 8679        .wptScore {
 8680          width: 16%;
 8681        }
 8682        .wptScore.baseline {
 8683          width: 20%;
 8684        }
 8685        @media (max-width: 1100px) {
 8686          .wptScore {
 8687            width: 32%;
 8688          }
 8689          .wptScore.baseline {
 8690            width: 50%;
 8691          }
 8692        }
 8693        @media (max-width: 800px) {
 8694          .wptScore {
 8695            width: 60%;
 8696          }
 8697          .wptScore.baseline {
 8698            width: 80%;
 8699          }
 8700        }
 8701
 8702        .wptScore > div + div {
 8703          margin-top: var(--content-padding-half);
 8704        }
 8705        .wptScore .icon {
 8706          float: right;
 8707        }
 8708        .wptScore .score {
 8709          font-size: 150%;
 8710          white-space: nowrap;
 8711        }
 8712        .wptScore.baseline .score {
 8713          font-size: 150%;
 8714          white-space: wrap;
 8715        }
 8716        .wptScore .avail {
 8717          color: var(--unimportant-text-color);
 8718          font-size: 90%;
 8719        }
 8720        sl-skeleton {
 8721          width: 4em;
 8722        }
 8723        sl-skeleton.icon {
 8724          height: 2em;
 8725          width: 2em;
 8726        }
 8727        .avail sl-skeleton {
 8728          width: 8em;
 8729        }
 8730        .logo-button {
 8731          gap: var(--content-padding-half);
 8732          align-items: center;
 8733        }
 8734        .chip.increased {
 8735          background: var(--chip-background-increased);
 8736          color: var(--chip-color-increased);
 8737        }
 8738        .chip.unchanged {
 8739          background: var(--chip-background-unchanged);
 8740          color: var(--chip-color-unchanged);
 8741        }
 8742        .chip.decreased {
 8743          background: var(--chip-background-decreased);
 8744          color: var(--chip-color-decreased);
 8745        }
 8746
 8747        baseline-date {
 8748          font-size: 0.8em;
 8749        }
 8750
 8751        #current-bugs li {
 8752          list-style: none;
 8753          margin-bottom: var(--content-padding);
 8754        }
 8755
 8756        #implementation-progress::part(base) {
 8757          min-height: 350px;
 8758        }
 8759
 8760        #general-information .vbox {
 8761          gap: var(--content-padding);
 8762        }
 8763
 8764        .info-section-header {
 8765          font-weight: bold;
 8766          width: 16em;
 8767        }
 8768
 8769        dt {
 8770          font-weight: bold;
 8771        }
 8772
 8773        dd {
 8774          margin-bottom: var(--content-padding-large);
 8775        }
 8776
 8777        .under-construction {
 8778          min-height: 12em;
 8779        }
 8780      `]}constructor(){super(),this.featureSupport=new Map,this._getWPTMetricView=Zo,this._loadingTask=new Wo(this,{args:()=>[this.apiClient,this.featureId],task:async([t,e])=>{if("object"==typeof t
 8781      ${this._loadingTask?.render({complete:()=>this.renderWhenComplete(),error:t=>(t instanceof Ml&&(window.location.href="/errors-404/feature-not-found"),this.renderWhenError()),initial:()=>this.r
 8782    `}renderCrumbs(){const t=ra(this.location),e=this.feature?sa(this.feature):this.location;return V`
 8783      <div class="crumbs">
 8784        <a href=${t}>Features overview</a>
 8785        &rsaquo;
 8786        <a href=${e} router-ignore
 8787          >${this.feature?.name||this.featureId}</a
 8788        >
 8789      </div>
 8790    `}renderOffsiteLink(t,e,i,r){return e?V`
 8791      <sl-button variant="default" href=${e} target="_blank">
 8792        <sl-icon slot="suffix" name="box-arrow-up-right"></sl-icon>
 8793        <div class="hbox logo-button">
 8794          ${i?V`<img
 8795                src=${i}
 8796                alt="${de(r)}"
 8797                width="24"
 8798                height="24"
 8799              />`:H}
 8800          ${t}
 8801        </div>
 8802      </sl-button>
 8803    `:V``}wptLinkMetricView(){return this._getWPTMetricView(this.location)===lc?"subtest":"test"}metricViewForRequests(){const t=this._getWPTMetricView(this.location);switch(t){case lc:case nc:retur
 8804      <div id="nameAndOffsiteLinks" class="hbox wrap">
 8805        <div class="vbox">
 8806          <h1>${this.feature?.name||this.featureId}</h1>
 8807          ${this.renderDescription()}
 8808        </div>
 8809        <div class="spacer"></div>
 8810        ${this.renderDateRangePicker()}
 8811      </div>
 8812    `}renderDeltaChip(t){const e=this.featureSupport.get(t);if(void 0===e||0===e.length)return V` <span class="chip small unchanged"></span> `;const i=e[0],r=e[e.length-1],s=100*(i.test_pass_count/i
 8813      ${e?V`<div class="avail">
 8814            ${i} ${e} ${r?"in version "+r:""}
 8815          </div>`:H}
 8816    `}renderOneWPTCard(t,e){const i=this.feature?ya(this.feature,0,{browser:t}):V`<sl-skeleton effect="sheen"></sl-skeleton>`,r=this.feature?.browser_implementations?.[t];return V`
 8817      <sl-card class="halign-stretch wptScore">
 8818        <img height="32" src="/public/img/${e}" class="icon" />
8819        <div>${t[0].toUpperCase()+t.slice(1)}</div>
 8820        <div class="score">${i} ${this.renderDeltaChip(t)}</div>
 8821        ${this.renderBrowserImpl(r)}
 8822      </sl-card>
 8823    `}renderBaselineCardWhenPending(){return V`
 8824      <sl-card class="halign-stretch wptScore baseline">
 8825        <sl-skeleton effect="sheen" class="icon"></sl-skeleton>
 8826        <div>Baseline</div>
 8827        <div class="score"><sl-skeleton effect="sheen"></sl-skeleton></div>
 8828        <div class="avail"><sl-skeleton effect="sheen"></sl-skeleton></div>
 8829      </sl-card>
 8830    `}renderBaselineCard(){if(void 0===this.feature)return this.renderBaselineCardWhenPending();const t=this.feature?.baseline?.status;if(void 0===t)return V``;const e=pa[t],i=this.feature?.baseline
 8831      <sl-card class="halign-stretch wptScore baseline">
 8832        <img height="28" src="/public/img/${e.icon}" class="icon" />
 8833        <div>Baseline</div>
 8834        <div class="score">${e.word}</div>
 8835        ${i?V`<div class="avail">Baseline since ${i}</div>`:H}
 8836      </sl-card>
 8837    `}renderDescription(){return void 0===this.featureMetadata?.description?V`${H}`:V`
 8838      <div id="feature-description">
 8839        <h3>${this.featureMetadata.description}</h3>
 8840      </div>
 8841    `}renderWPTScores(){return V`
 8842      <section id="wpt-scores">
 8843        <h3>Web platform test scores</h3>
 8844        <div class="wptScores hbox wrap" style="margin:0">
 8845          ${this.renderOneWPTCard("chrome","chrome_32x32.png")}
 8846          ${this.renderOneWPTCard("edge","edge_32x32.png")}
 8847          ${this.renderOneWPTCard("firefox","firefox_32x32.png")}
 8848          ${this.renderOneWPTCard("safari","safari_32x32.png")}
 8849          ${this.renderBaselineCard()}
 8850        </div>
 8851      </section>
 8852    `}renderImplentationProgress(){return V`
 8853      <webstatus-feature-wpt-progress-chart-panel
 8854        .featureId=${this.featureId}
 8855        .testView=${this.metricViewForRequests()}
 8856        .startDate=${this.startDate}
 8857        .endDate=${this.endDate}
 8858        @data-fetch-complete=${this.handleWPTScoresFetched}
 8859      ></webstatus-feature-wpt-progress-chart-panel>
 8860    `}handleWPTScoresFetched(t){this.featureSupport=new Map(Array.from(t.detail,(([t,e])=>[sc[t],e.data])))}renderFeatureUsage(){return null===new URLSearchParams(this.location.search).get("showUsag
 8861      <webstatus-feature-usage-chart-panel
 8862        .featureId=${this.featureId}
 8863        .startDate=${this.startDate}
 8864        .endDate=${this.endDate}
 8865      >
 8866      </webstatus-feature-usage-chart-panel>
 8867    `}renderBug(t){return V`
 8868      <li>
 8869        <a href="#TODO" target="_blank">
 8870          <img height="16" src="/public/img/chrome_24x24.png" />
 8871          ${t}: Title of issue
 8872        </a>
 8873      </li>
 8874    `}renderCurrentBugs(){return V`
 8875      <sl-details id="current-bugs">
 8876        <div slot="summary">Current bugs</div>
 8877        <ul class="under-construction">
 8878          ${[21830,123412,12983712,1283,987123,12982,1287].map((t=>this.renderBug(t)))}
 8879        </ul>
 8880      </sl-details>
 8881    `}renderWhenComplete(){const t=this.buildWPTLink(this.feature),e=this.findCanIUseLink(this.featureMetadata?.can_i_use);return V`
 8882      <div class="vbox">
 8883        <div class="hbox wrap">
 8884          ${this.renderCrumbs()}
 8885          <div class="spacer"></div>
 8886
 8887          <div class="hbox wrap">
 8888            ${this.renderOffsiteLink("WPT.fyi",t,"/public/img/wpt-logo.svg","WPT default view")}
 8889            ${this.renderOffsiteLink("MDN",null)}
 8890            ${this.renderOffsiteLink("CanIUse",e)}
 8891          </div>
 8892        </div>
 8893
 8894        ${this.renderNameDescriptionControls()} ${this.renderWPTScores()}
 8895        ${this.renderImplentationProgress()} ${this.renderFeatureUsage()}
 8896      </div>
 8897    `}renderWhenError(){return V`Error when loading feature ${this.featureId}.`}renderWhenInitial(){return V`Preparing request for ${this.featureId}.`}renderWhenPending(){return this.renderWhenCompl
 8898        #missing-one-implementation-datapoint-details-complete {
 8899          display: block;
 8900        }
 8901        .missing-features-table {
 8902          width: 100%;
 8903          overflow-x: auto;
 8904          white-space: nowrap;
 8905        }
 8906        .missing-feature-id-link {
 8907          padding-right: 1em;
 8908        }
 8909      `]}getOtherBrowsersFromTargetBrowser(t){return"safari"===t||"firefox"===t?this.supportedBrowsers.filter((e=>t!==e)):["firefox","safari"]}_createFetchFunctionConfigs(t,e,i){return t.map((t=>({l
 8910        No missing features for on ${this.selectedDate} for
 8911        ${this.selectedBrowser}
 8912      </div> `:V`
 8913      <div slot="header" id="${this.getPanelID()}-list-header">
 8914        The missing feature IDs on ${this.selectedDate} for
 8915        ${this.selectedBrowser}:
 8916        <a href="${this.featureListHref}"
 8917          >${this.missingFeaturesList.length} features</a
 8918        >
 8919      </div>
 8920      ${this.renderMissingFeaturesTable()}
 8921    `}getPanelID(){return"missing-one-implementation"}getPanelText(){return"Features missing in only one browser"}renderControls(){return V`${H}`}renderMissingFeaturesTable(){const t=Math.ceil(this.
 8922              <a href="/features/${e}" class="missing-feature-id-link"
 8923                >${e}</a
 8924              >
 8925            </td>`)}else r.push(V`<td></td>`)}e.push(V`<tr>
 8926          ${r}
 8927        </tr>`)}return V`
 8928      <table class="missing-features-table">
 8929        <tbody>
 8930          ${e}
 8931        </tbody>
 8932      </table>
 8933    `}};qc([Nt()],Kc.prototype,"supportedBrowsers",void 0),Kc=qc([Rt("webstatus-stats-missing-one-impl-chart-panel")],Kc);var Gc=function(t,e,i,r){var s,o=arguments.length,a=o<3?e:null===r?r=Object.
 8934      <div id="titleAndControls" class="hbox">
 8935        <h1>Statistics</h1>
 8936        <div class="spacer"></div>
 8937        ${this.renderDateRangePicker()}
 8938      </div>
 8939    `}renderGlobalFeatureSupport(){return V`
 8940      <webstatus-stats-global-feature-chart-panel
 8941        .startDate=${this.startDate}
 8942        .endDate=${this.endDate}
 8943      ></webstatus-stats-global-feature-chart-panel>
 8944    `}renderFeaturesLagging(){return V`
 8945      <webstatus-stats-missing-one-impl-chart-panel
 8946        .startDate=${this.startDate}
 8947        .endDate=${this.endDate}
 8948      >
 8949      </webstatus-stats-missing-one-impl-chart-panel>
 8950    `}render(){return V`
 8951      <div class="vbox">
 8952        ${this.renderTitleAndControls()} ${this.renderGlobalFeatureSupport()}
 8953        ${function(t){return Boolean(Ko(t.search,"show_features_lagging"))}(this.location)?this.renderFeaturesLagging():H}
 8954      </div>
 8955    `}};Yc=Gc([Rt("webstatus-stats-page")],Yc);var Xc=function(t,e,i,r){var s,o=arguments.length,a=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,i):r;if("object"==typeof Reflect&&"function"==ty
 8956        #error-container {
 8957          width: 100%;
 8958          height: 100%;
 8959          flex-direction: column;
 8960          justify-content: center;
 8961          align-items: center;
 8962          gap: 48px;
 8963          display: inline-flex;
 8964        }
 8965        #error-header {
        }
 8966
 8967
 8968
 8969
 8970
 8971
 8972
 8973
 8974
 8975
 8976
 8977
 8978
 8979
 8980
 8981
 8982
 8983
 8984
 8985
 8986
 8987
 8988
 8989
 8990
 8991
 8992
 8993
 8994
 8995
 8996
 8997
 8998
 8999
 9000
 9001
 9002
 9003
 9004
 9005
 9006
 9007
 9008
 9009
 9010
 9011
 9012
 9013
 9014
 9015
 9016
 9017
 9018
 9019
 9020
 9021
 9022
 9023
 9024
 9025
 9026
 9027
 9028
 9029
 9030
 9031
 9032
 9033
 9034
 9035
 9036
 9037
 9038
 9039
 9040
 9041
 9042
 9043
 9044
 9045
 9046
 9047
 9048
 9049
 9050
 9051
 9052      >
 9053
 9054
 9055
 9056
 9057
 9058
 9059
 9060
 9061
 9062
 9063
 9064
 9065
 9066
 9067
 9068
 9069
 9070
 9071
 9072
 9073
 9074
 9075
 9076
 9077
 9078
 9079
 9080
 9081
 9082
 9083
 9084
 9085
 9086
 9087
 9088
 9089
 9090
 9091
 9092
 9093
 9094
 9095
 9096
 9097
 9098
 9099
 9100
 9101
 9102
 9103
 9104
 9105
 9106
 9107
 9108
 9109
 9110
 9111
 9112
          align-self: stretch;
          height: 108px;
          flex-direction: column;
          justify-content: flex-start;
          align-items: center;
          gap: 12px;
          display: flex;
        #error-status-code {
          color: #2563eb;
          font-size: 15px;
          font-weight: 700;
          line-height: 22.5px;
          word-wrap: break-word;
        }
        #error-headline {
          color: #1d2430;
          font-size: 32px;
          font-weight: 700;
          word-wrap: break-word;
        }
        #error-detailed-message {
          color: #6c7381;
          font-size: 15px;
          font-weight: 400;
          line-height: 22.5px;
          word-wrap: break-word;
        }
        #error-actions {
          justify-content: center;
          align-items: center;
          gap: 24px;
          display: inline-flex;
        }
        #error-action-home {
          width: 136px;
          padding-left: 16px;
          padding-right: 16px;
          justify-content: center;
          align-items: center;
          gap: 8px;
          display: flex;
        }
        #error-action-report {
          width: 145px;
          padding-left: 16px;
          padding-right: 16px;
          border-radius: 4px;
          justify-content: center;
          align-items: center;
          gap: 8px;
          display: flex;
        }
        #error-action-report a {
          color: inherit;
          text-decoration: none;
        }
      `]}render(){return V`
      <div id="error-container">
        <div id="error-header">
          <div id="error-status-code">404</div>
          <div id="error-headline">Page not found</div>
          <div id="error-detailed-message">
            We couldn't find the page you're looking for.
          </div>
        </div>
        <div id="error-actions">
          <div id="error-action-home">
            <sl-button id="error-action-home-btn" variant="primary" href="/"
              >Go back home</sl-button
            >
          </div>
          <div id="error-action-report">
            <sl-icon name="github"></sl-icon>
            <a href="${Bl}" target="_blank"
              >Report an issue</a
            >
          </div>
        </div>
      </div>
    `}};Jc=Xc([Rt("webstatus-not-found-error-page")],Jc);const Qc=(t,e)=>{if(void 0!==e&&e.ctrlKey||e?.metaKey)return void window.open(t,"_blank");const i=new URL(t,window.location.origin).href;wind
      <sl-button
        variant="default"
        @click=${()=>this.handleLogInClick(t)}
        <sl-icon slot="prefix" name="${t.icon}"></sl-icon>
        Log in
      </sl-button>
    `}renderAuthenticatedButton(t,e){return V`
      <sl-dropdown>
        <sl-button slot="trigger" caret
          ><sl-icon slot="prefix" name="${e.icon}"></sl-icon
          >${t.email}</sl-button
        >
        <sl-menu>
          <sl-menu-item @click=${()=>this.handleLogOutClick(e)}
            >Sign out</sl-menu-item
          >
        </sl-menu>
      </sl-dropdown>
    `}render(){return void 0===this.firebaseAuthConfig?V`${H}`:void 0===this.user?this.renderLoginButton(this.firebaseAuthConfig):this.renderAuthenticatedButton(this.user,this.firebaseAuthConfig)}};
        header {
          flex-grow: 1; /* .hbox > .halign-stretch */
          align-items: center;
          border-bottom: 1px solid #e1e3e8;
          height: 94px;
        }
        .title {
          display: flex;
        }
        .website-logo {
          width: 31px;
          height: 31px;
          background-color: #ccc;
          margin-left: 1em;
          margin-top: auto;
          margin-bottom: auto;
        }
        .website-title {
          font-weight: 700;
          font-size: 24px;
          color: #1f1f1f;
          margin-left: 5px;
          margin-top: auto;
          margin-bottom: auto;
        }
        .website-title a {
          text-decoration: none;
          color: inherit;
        }
        webstatus-login {
          padding: var(--content-padding);
        }
      `]}_fireEvent(t,e){const i=new CustomEvent(t,{bubbles:!0,composed:!0,detail:e});this.dispatchEvent(i)}handleDrawer(){this._fireEvent("toggle-menu",{})}render(){return V`
      <header class="hbox">
        <div class="title">
          <sl-icon-button
            id="menu-button"
            data-testid="menu"
            variant="text"
            class="menu"
9113            style="font-size: 2.4rem;"
 9114            @click="${this.handleDrawer}"
 9115            name="list"
 9116          >
 9117          </sl-icon-button>
 9118          <h2 class="website-title"><a href="/">Web Platform Status</a></h2>
 9119        </div>
 9120
 9121        <div class="spacer"></div>
 9122        <webstatus-login></webstatus-login>
 9123      </header>
 9124    `}};od=sd([Rt("webstatus-header")],od);const ad=(()=>{const t=0!==window.innerWidth?window.innerWidth:0!==document.documentElement?.clientWidth?document.documentElement.clientWidth:document.body
 9125        .material-icons {
 9126          font-family: 'Material Icons';
 9127          font-size: 24px;
 9128          vertical-align: middle;
 9129        }
 9130        .features-link {
 9131          color: inherit;
 9132          text-decoration: none;
 9133        }
 9134        .bookmark-link {
 9135          color: inherit;
 9136          text-decoration: none;
 9137        }
 9138
 9139        .report-issue-item {
 9140          margin-top: auto;
 9141        }
 9142
 9143        .report-issue-link {
 9144          color: inherit;
 9145          text-decoration: none;
 9146        }
 9147        .about-link {
 9148          color: inherit;
 9149          text-decoration: none;
 9150        }
 9151      `]}constructor(){super(),this.getLocation=Zc,this.navigate=Qc,this.activeBookmarkQuery=null,this.isFeaturesDropdownExpanded=!0}connectedCallback(){super.connectedCallback(),this.updateActiveSt
 9152      <sl-tree-item id=${i} ?selected=${a}>
 9153        <a class="bookmark-link" href="${o}">
 9154          <sl-icon name="${a?"bookmark-star":"bookmark"}"></sl-icon> ${t.name}
 9155        </a>
 9156      </sl-tree-item>
 9157    `}render(){return V`
 9158      <sl-tree>
 9159        <sl-icon name="caret-right-fill" slot="expand-icon"></sl-icon>
 9160        <sl-icon name="caret-right-fill" slot="collapse-icon"></sl-icon>
 9161
 9162        <sl-tree-item
 9163          id="${nd.FEATURES}"
 9164          .expanded=${this.isFeaturesDropdownExpanded}
 9165        >
 9166          <sl-icon name="menu-button"></sl-icon>
 9167          <a
 9168            class="features-link"
 9169            href="${cd[nd.FEATURES].path}"
 9170            >Features</a
 9171          >
 9172          ${this.appBookmarkInfo?.globalBookmarks?.map(((t,e)=>this.renderBookmark(t,e)))}
 9173        </sl-tree-item>
 9174        <!-- commented out rather than merely hidden, to avoid breaking sl-tree
 9175        <sl-tree-item id="{NavigationItemKey.STATISTICS}">
 9176          <sl-icon name="heart-pulse"></sl-icon> Statistics
 9177        </sl-tree-item> -->
 9178
 9179        <sl-divider aria-hidden="true"></sl-divider>
 9180
 9181        <sl-tree-item class="report-issue-item">
 9182          <sl-icon name="github"></sl-icon>
 9183          <a
 9184            class="report-issue-link"
 9185            href="${Bl}"
 9186            target="_blank"
 9187            >Report an issue</a
 9188          >
 9189        </sl-tree-item>
 9190
 9191        <sl-tree-item class="about-item">
 9192          <sl-icon name="info-circle"></sl-icon>
 9193          <a class="about-link" href="${"https://github.com/GoogleChrome/webstatus.dev/wiki/About-Web-Platform-Status"}" target="_blank"
 9194            >About</a
 9195          >
 9196        </sl-tree-item>
 9197      </sl-tree>
 9198    `}};ld([Nt()],dd.prototype,"activeBookmarkQuery",void 0),ld([Bs({context:yc,subscribe:!0}),Nt()],dd.prototype,"appBookmarkInfo",void 0),ld([Nt()],dd.prototype,"isFeaturesDropdownExpanded",void 0
 9199        .sidebar {
 9200          height: 100%;
 9201          width: 288px;
 9202        }
 9203
 9204        sl-tree-item#theme-selector sl-select::part(combobox) {
 9205          border: 0;
 9206        }
 9207
 9208        sl-tree-item#theme-selector::part(expand-button) {
 9209          width: 0;
 9210        }
 9211
 9212        #theme-selector > sl-select > sl-icon {
 9213          margin-inline-end: 8px;
 9214        }
 9215      `]}render(){return V`
 9216      <div class="sidebar vbox">
 9217        <webstatus-sidebar-menu></webstatus-sidebar-menu>
 9218      </div>
 9219    `}};ud=hd([Rt("webstatus-sidebar")],ud);var pd=function(t,e,i,r){var s,o=arguments.length,a=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,i):r;if("object"==typeof Reflect&&"function"==typeo
 9220        .container {
 9221          height: 100%;
 9222          width: 100%;
 9223        }
 9224
 9225        #sidebar-drawer {
 9226          max-width: ${288}px;
 9227          border-right: 1px solid #e1e3e8;
 9228        }
 9229        #sidebar-drawer:not([open]),
 9230        #sidebar-drawer[no-header]::part(header) {
 9231          display: none;
 9232        }
 9233
 9234        webstatus-sidebar {
 9235          padding-right: 20px;
 9236          padding-top: 10px;
 9237        }
 9238
 9239        .page-container {
 9240          padding: var(--content-padding);
 9241        }
 9242      `]}firstUpdated(){const t=this.shadowRoot?.querySelector("#sidebar-drawer");if(!t)throw new Error("Sidebar Drawer is missing");const e=()=>{t.show()};ad||e(),document.addEventListener("toggle
9243      <sl-details
 9244        id="sidebar-drawer"
 9245        class="valign-stretch halign-shrink-0"
 9246        no-header
 9247      >
 9248        <webstatus-sidebar></webstatus-sidebar>
 9249      </sl-details>
 9250      <div class="page-container vbox halign-stretch"><slot></slot></div>
 9251    </div>`}};fd=pd([Rt("webstatus-page")],fd);class md extends ot{render(){return V`<slot></slot>`}}var gd=function(t,e,i,r){var s,o=arguments.length,a=o<3?e:null===r?r=Object.getOwnPropertyDescrip
 9252 /**
 9253 * @license
 9254 * Copyright 2025 Google LLC
 9255 *
 9256 * Licensed under the Apache License, Version 2.0 (the "License");
 9257 * you may not use this file except in compliance with the License.
 9258 * You may obtain a copy of the License at
 9259 *
9260 *   http://www.apache.org/licenses/LICENSE-2.0
 9261 *
 9262 * Unless required by applicable law or agreed to in writing, software
 9263 * distributed under the License is distributed on an "AS IS" BASIS,
 9264 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9265 * See the License for the specific language governing permissions and
 9266 * limitations under the License.
 9267 */class _d extends Error{constructor(){super(...arguments),this.name="DecodeBase64StringError"}}const xd=function(t){return function(t){const e=yd(t);return wd.encodeByteArray(e,!0)}(t).replace(/\.
 9268 /**
 9269 * @license
 9270 * Copyright 2022 Google LLC
 9271 *
 9272 * Licensed under the Apache License, Version 2.0 (the "License");
 9273 * you may not use this file except in compliance with the License.
 9274 * You may obtain a copy of the License at
 9275 *
 9276 *   http://www.apache.org/licenses/LICENSE-2.0
 9277 *
 9278 * Unless required by applicable law or agreed to in writing, software
 9279 * distributed under the License is distributed on an "AS IS" BASIS,
 9280 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9281 * See the License for the specific language governing permissions and
 9282 * limitations under the License.
 9283 */
 9284 const Cd=()=>
 9285 /**
 9286 * @license
 9287 * Copyright 2022 Google LLC
 9288 *
 9289 * Licensed under the Apache License, Version 2.0 (the "License");
 9290 * you may not use this file except in compliance with the License.
 9291 * You may obtain a copy of the License at
 9292 *
 9293 *   http://www.apache.org/licenses/LICENSE-2.0
 9294 *
 9295 * Unless required by applicable law or agreed to in writing, software
 9296 * distributed under the License is distributed on an "AS IS" BASIS,
 9297 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9298 * See the License for the specific language governing permissions and
 9299 * limitations under the License.
 9300 */
 9301 function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if("undefined"!=typeof global)return global;throw new Error("Unable to locate global object.")}().__FIR
 9302 /**
 9303 * @license
 9304 * Copyright 2017 Google LLC
 9305 *
 9306 * Licensed under the Apache License, Version 2.0 (the "License");
 9307 * you may not use this file except in compliance with the License.
 9308 * You may obtain a copy of the License at
 9309 *
 9310 *   http://www.apache.org/licenses/LICENSE-2.0
 9311 *
 9312 * Unless required by applicable law or agreed to in writing, software
 9313 * distributed under the License is distributed on an "AS IS" BASIS,
 9314 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9315 * See the License for the specific language governing permissions and
 9316 * limitations under the License.
 9317 */
 9318 class Id{constructor(){this.reject=()=>{},this.resolve=()=>{},this.promise=new Promise(((t,e)=>{this.resolve=t,this.reject=e}))}wrapCallback(t){return(e,i)=>{e?this.reject(e):this.resolve(i),"functi
 9319 /**
 9320 * @license
 9321 * Copyright 2017 Google LLC
 9322 *
 9323 * Licensed under the Apache License, Version 2.0 (the "License");
 9324 * you may not use this file except in compliance with the License.
 9325 * You may obtain a copy of the License at
 9326 *
 9327 *   http://www.apache.org/licenses/LICENSE-2.0
 9328 *
 9329 * Unless required by applicable law or agreed to in writing, software
 9330 * distributed under the License is distributed on an "AS IS" BASIS,
 9331 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9332 * See the License for the specific language governing permissions and
 9333 * limitations under the License.
 9334 */function Td(){return"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent?navigator.userAgent:""}class Ad extends Error{constructor(t,e,i){super(e),this.code=t,this.customData=i,thi
 9335 /**
 9336 * @license
 9337 * Copyright 2017 Google LLC
 9338 *
 9339 * Licensed under the Apache License, Version 2.0 (the "License");
 9340 * you may not use this file except in compliance with the License.
 9341 * You may obtain a copy of the License at
 9342 *
 9343 *   http://www.apache.org/licenses/LICENSE-2.0
 9344 *
 9345 * Unless required by applicable law or agreed to in writing, software
 9346 * distributed under the License is distributed on an "AS IS" BASIS,
 9347 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9348 * See the License for the specific language governing permissions and
 9349 * limitations under the License.
 9350 */function Rd(t){const e=[];for(const[i,r]of Object.entries(t))Array.isArray(r)?r.forEach((t=>{e.push(encodeURIComponent(i)+"="+encodeURIComponent(t))})):e.push(encodeURIComponent(i)+"="+encodeURIC
 9351 /**
 9352 * @license
 9353 * Copyright 2021 Google LLC
 9354 *
 9355 * Licensed under the Apache License, Version 2.0 (the "License");
 9356 * you may not use this file except in compliance with the License.
 9357 * You may obtain a copy of the License at
 9358 *
 9359 *   http://www.apache.org/licenses/LICENSE-2.0
 9360 *
 9361 * Unless required by applicable law or agreed to in writing, software
 9362 * distributed under the License is distributed on an "AS IS" BASIS,
 9363 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9364 * See the License for the specific language governing permissions and
 9365 * limitations under the License.
 9366 */function Md(t){return t&&t._delegate?t._delegate:t}class Nd{constructor(t,e,i){this.name=t,this.instanceFactory=e,this.type=i,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode
 9367 /**
 9368 * @license
 9369 * Copyright 2019 Google LLC
 9370 *
 9371 * Licensed under the Apache License, Version 2.0 (the "License");
 9372 * you may not use this file except in compliance with the License.
 9373 * You may obtain a copy of the License at
 9374 *
 9375 *   http://www.apache.org/licenses/LICENSE-2.0
 9376 *
 9377 * Unless required by applicable law or agreed to in writing, software
 9378 * distributed under the License is distributed on an "AS IS" BASIS,
 9379 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9380 * See the License for the specific language governing permissions and
 9381 * limitations under the License.
 9382 */const Bd="[DEFAULT]";
 9383 /**
 9384 * @license
 9385 * Copyright 2019 Google LLC
 9386 *
 9387 * Licensed under the Apache License, Version 2.0 (the "License");
 9388 * you may not use this file except in compliance with the License.
 9389 * You may obtain a copy of the License at
 9390 *
 9391 *   http://www.apache.org/licenses/LICENSE-2.0
 9392 *
 9393 * Unless required by applicable law or agreed to in writing, software
 9394 * distributed under the License is distributed on an "AS IS" BASIS,
 9395 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9396 * See the License for the specific language governing permissions and
 9397 * limitations under the License.
 9398 */class Ud{constructor(t,e){this.name=t,this.container=e,this.component=null,this.instances=new Map,this.instancesDeferred=new Map,this.instancesOptions=new Map,this.onInitCallbacks=new Map}get(t){
 9399 /**
 9400 * @license
 9401 * Copyright 2019 Google LLC
 9402 *
 9403 * Licensed under the Apache License, Version 2.0 (the "License");
 9404 * you may not use this file except in compliance with the License.
 9405 * You may obtain a copy of the License at
 9406 *
9407 *   http://www.apache.org/licenses/LICENSE-2.0
 9408 *
 9409 * Unless required by applicable law or agreed to in writing, software
 9410 * distributed under the License is distributed on an "AS IS" BASIS,
 9411 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9412 * See the License for the specific language governing permissions and
 9413 * limitations under the License.
 9414 */(t))try{this.getOrInitializeService({instanceIdentifier:Bd})}catch(t){}for(const[t,e]of this.instancesDeferred.entries()){const i=this.normalizeInstanceIdentifier(t);try{const t=this.getOrInitial
 9415 /**
 9416 * @license
 9417 * Copyright 2017 Google LLC
 9418 *
 9419 * Licensed under the Apache License, Version 2.0 (the "License");
 9420 * you may not use this file except in compliance with the License.
 9421 * You may obtain a copy of the License at
 9422 *
 9423 *   http://www.apache.org/licenses/LICENSE-2.0
 9424 *
 9425 * Unless required by applicable law or agreed to in writing, software
 9426 * distributed under the License is distributed on an "AS IS" BASIS,
 9427 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9428 * See the License for the specific language governing permissions and
 9429 * limitations under the License.
 9430 */var jd;!function(t){t[t.DEBUG=0]="DEBUG",t[t.VERBOSE=1]="VERBOSE",t[t.INFO=2]="INFO",t[t.WARN=3]="WARN",t[t.ERROR=4]="ERROR",t[t.SILENT=5]="SILENT"}(jd||(jd={}));const Hd={debug:jd.DEBUG,verbose:
 9431 /**
 9432 * @license
 9433 * Copyright 2019 Google LLC
 9434 *
 9435 * Licensed under the Apache License, Version 2.0 (the "License");
 9436 * you may not use this file except in compliance with the License.
 9437 * You may obtain a copy of the License at
 9438 *
 9439 *   http://www.apache.org/licenses/LICENSE-2.0
 9440 *
 9441 * Unless required by applicable law or agreed to in writing, software
 9442 * distributed under the License is distributed on an "AS IS" BASIS,
 9443 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9444 * See the License for the specific language governing permissions and
 9445 * limitations under the License.
 9446 */
 9447 class hh{constructor(t){this.container=t}getPlatformInfoString(){return this.container.getProviders().map((t=>{if(function(t){const e=t.getComponent();return"VERSION"===(null==e?void 0:e.type)}(t)){
 9448 /**
 9449 * @license
 9450 * Copyright 2019 Google LLC
 9451 *
 9452 * Licensed under the Apache License, Version 2.0 (the "License");
 9453 * you may not use this file except in compliance with the License.
 9454 * You may obtain a copy of the License at
 9455 *
 9456 *   http://www.apache.org/licenses/LICENSE-2.0
 9457 *
 9458 * Unless required by applicable law or agreed to in writing, software
 9459 * distributed under the License is distributed on an "AS IS" BASIS,
 9460 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9461 * See the License for the specific language governing permissions and
 9462 * limitations under the License.
 9463 */const Xh=new Dd("app","Firebase",{"no-app":"No Firebase App '{$appName}' has been created - call initializeApp() first","bad-app-name":"Illegal App name: '{$appName}'","duplicate-app":"Firebase A
 9464 /**
 9465 * @license
 9466 * Copyright 2019 Google LLC
 9467 *
 9468 * Licensed under the Apache License, Version 2.0 (the "License");
 9469 * you may not use this file except in compliance with the License.
 9470 * You may obtain a copy of the License at
 9471 *
 9472 *   http://www.apache.org/licenses/LICENSE-2.0
 9473 *
 9474 * Unless required by applicable law or agreed to in writing, software
 9475 * distributed under the License is distributed on an "AS IS" BASIS,
 9476 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9477 * See the License for the specific language governing permissions and
 9478 * limitations under the License.
 9479 */
 9480 class Jh{constructor(t,e,i){this._isDeleted=!1,this._options=Object.assign({},t),this._config=Object.assign({},e),this._name=e.name,this._automaticDataCollectionEnabled=e.automaticDataCollectionEnab
 9481 /**
 9482 * @license
 9483 * Copyright 2019 Google LLC
 9484 *
 9485 * Licensed under the Apache License, Version 2.0 (the "License");
 9486 * you may not use this file except in compliance with the License.
 9487 * You may obtain a copy of the License at
 9488 *
 9489 *   http://www.apache.org/licenses/LICENSE-2.0
 9490 *
 9491 * Unless required by applicable law or agreed to in writing, software
 9492 * distributed under the License is distributed on an "AS IS" BASIS,
 9493 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9494 * See the License for the specific language governing permissions and
 9495 * limitations under the License.
 9496 */const Qh="11.5.0";function Zh(t,e={}){let i=t;if("object"!=typeof e){e={name:e}}const r=Object.assign({name:Uh,automaticDataCollectionEnabled:!1},e),s=r.name;if("string"!=typeof s||!s)throw Xh.cr
 9497 /**
 9498 * @license
 9499 * Copyright 2021 Google LLC
 9500 *
 9501 * Licensed under the Apache License, Version 2.0 (the "License");
 9502 * you may not use this file except in compliance with the License.
 9503 * You may obtain a copy of the License at
 9504 *
 9505 *   http://www.apache.org/licenses/LICENSE-2.0
 9506 *
 9507 * Unless required by applicable law or agreed to in writing, software
 9508 * distributed under the License is distributed on an "AS IS" BASIS,
 9509 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9510 * See the License for the specific language governing permissions and
 9511 * limitations under the License.
 9512 */const eu="firebase-heartbeat-store";let iu=null;function ru(){return iu||(iu=function(t,e,{blocked:i,upgrade:r,blocking:s,terminated:o}={}){const a=indexedDB.open(t,e),n=oh(a);return r&&a.addEven
 9513 /**
 9514 * @license
 9515 * Copyright 2021 Google LLC
 9516 *
 9517 * Licensed under the Apache License, Version 2.0 (the "License");
 9518 * you may not use this file except in compliance with the License.
 9519 * You may obtain a copy of the License at
 9520 *
 9521 *   http://www.apache.org/licenses/LICENSE-2.0
 9522 *
 9523 * Unless required by applicable law or agreed to in writing, software
 9524 * distributed under the License is distributed on an "AS IS" BASIS,
 9525 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9526 * See the License for the specific language governing permissions and
 9527 * limitations under the License.
 9528 */class au{constructor(t){this.container=t,this._heartbeatsCache=null;const e=this.container.getProvider("app").getImmediate();this._storage=new lu(e),this._heartbeatsCachePromise=this._storage.rea
 9529 /**
 9530 * @license
 9531 * Copyright 2019 Google LLC
 9532 *
 9533 * Licensed under the Apache License, Version 2.0 (the "License");
 9534 * you may not use this file except in compliance with the License.
 9535 * You may obtain a copy of the License at
 9536 *
 9537 *   http://www.apache.org/licenses/LICENSE-2.0
 9538 *
 9539 * Unless required by applicable law or agreed to in writing, software
 9540 * distributed under the License is distributed on an "AS IS" BASIS,
 9541 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9542 * See the License for the specific language governing permissions and
 9543 * limitations under the License.
 9544 */(this._heartbeatsCache.heartbeats);this._heartbeatsCache.heartbeats.splice(t,1)}return this._storage.overwrite(this._heartbeatsCache)}catch(t){fh.warn(t)}}async getHeartbeatsHeader(){var t;try{if
 9545 /**
 9546 * @license
 9547 * Copyright 2020 Google LLC
 9548 *
 9549 * Licensed under the Apache License, Version 2.0 (the "License");
 9550 * you may not use this file except in compliance with the License.
 9551 * You may obtain a copy of the License at
 9552 *
 9553 *   http://www.apache.org/licenses/LICENSE-2.0
9554 *
 9555 * Unless required by applicable law or agreed to in writing, software
 9556 * distributed under the License is distributed on an "AS IS" BASIS,
 9557 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9558 * See the License for the specific language governing permissions and
 9559 * limitations under the License.
 9560 */
 9561 tu("firebase","11.5.0","app");var hu=function(t,e,i,r){var s,o=arguments.length,a=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,i):r;if("object"==typeof Reflect&&"function"==typeof Reflect.deco
 9562 /**
 9563 * @license
 9564 * Copyright 2020 Google LLC
 9565 *
 9566 * Licensed under the Apache License, Version 2.0 (the "License");
 9567 * you may not use this file except in compliance with the License.
 9568 * You may obtain a copy of the License at
 9569 *
 9570 *   http://www.apache.org/licenses/LICENSE-2.0
 9571 *
 9572 * Unless required by applicable law or agreed to in writing, software
 9573 * distributed under the License is distributed on an "AS IS" BASIS,
 9574 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9575 * See the License for the specific language governing permissions and
 9576 * limitations under the License.
 9577 */function yu(t,...e){throw ku(t,...e)}function wu(t,...e){return ku(t,...e)}function _u(t,e,i){const r=Object.assign(Object.assign({},mu()),{[e]:i});return new Dd("auth","Firebase",r).create(e,{ap
 9578 /**
 9579 * @license
 9580 * Copyright 2020 Google LLC
 9581 *
 9582 * Licensed under the Apache License, Version 2.0 (the "License");
 9583 * you may not use this file except in compliance with the License.
 9584 * You may obtain a copy of the License at
 9585 *
 9586 *   http://www.apache.org/licenses/LICENSE-2.0
 9587 *
 9588 * Unless required by applicable law or agreed to in writing, software
 9589 * distributed under the License is distributed on an "AS IS" BASIS,
 9590 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9591 * See the License for the specific language governing permissions and
 9592 * limitations under the License.
 9593 */function Eu(){var t;return"undefined"!=typeof self&&(null===(t=self.location)||void 0===t?void 0:t.href)||""}function Iu(){var t;return"undefined"!=typeof self&&(null===(t=self.location)||void 0=
 9594 /**
 9595 * @license
 9596 * Copyright 2020 Google LLC
 9597 *
 9598 * Licensed under the Apache License, Version 2.0 (the "License");
 9599 * you may not use this file except in compliance with the License.
 9600 * You may obtain a copy of the License at
 9601 *
 9602 *   http://www.apache.org/licenses/LICENSE-2.0
 9603 *
 9604 * Unless required by applicable law or agreed to in writing, software
 9605 * distributed under the License is distributed on an "AS IS" BASIS,
 9606 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9607 * See the License for the specific language governing permissions and
 9608 * limitations under the License.
 9609 */function Tu(){return"undefined"==typeof navigator||!navigator||!("onLine"in navigator)||"boolean"!=typeof navigator.onLine||"http:"!==Iu()&&"https:"!==Iu()&&!function(){const t="object"==typeof c
 9610 /**
 9611 * @license
 9612 * Copyright 2020 Google LLC
 9613 *
 9614 * Licensed under the Apache License, Version 2.0 (the "License");
 9615 * you may not use this file except in compliance with the License.
 9616 * You may obtain a copy of the License at
 9617 *
 9618 *   http://www.apache.org/licenses/LICENSE-2.0
 9619 *
 9620 * Unless required by applicable law or agreed to in writing, software
 9621 * distributed under the License is distributed on an "AS IS" BASIS,
 9622 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9623 * See the License for the specific language governing permissions and
 9624 * limitations under the License.
 9625 */
 9626 class Au{constructor(t,e){this.shortDelay=t,this.longDelay=e,$u(e>t,"Short delay should be less than long delay!"),this.isMobile="undefined"!=typeof window&&!!(window.cordova||window.phonegap||windo
 9627 /**
 9628 * @license
 9629 * Copyright 2020 Google LLC
 9630 *
 9631 * Licensed under the Apache License, Version 2.0 (the "License");
 9632 * you may not use this file except in compliance with the License.
 9633 * You may obtain a copy of the License at
 9634 *
 9635 *   http://www.apache.org/licenses/LICENSE-2.0
 9636 *
 9637 * Unless required by applicable law or agreed to in writing, software
 9638 * distributed under the License is distributed on an "AS IS" BASIS,
 9639 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9640 * See the License for the specific language governing permissions and
 9641 * limitations under the License.
 9642 */function Du(t,e){$u(t.emulator,"Emulator should always be set here");const{url:i}=t.emulator;return e?`${i}${e.startsWith("/")?e.slice(1):e}`:i}
 9643 /**
 9644 * @license
 9645 * Copyright 2020 Google LLC
 9646 *
 9647 * Licensed under the Apache License, Version 2.0 (the "License");
 9648 * you may not use this file except in compliance with the License.
 9649 * You may obtain a copy of the License at
 9650 *
 9651 *   http://www.apache.org/licenses/LICENSE-2.0
 9652 *
 9653 * Unless required by applicable law or agreed to in writing, software
 9654 * distributed under the License is distributed on an "AS IS" BASIS,
 9655 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9656 * See the License for the specific language governing permissions and
 9657 * limitations under the License.
 9658 */class Ou{static initialize(t,e,i){this.fetchImpl=t,e&&(this.headersImpl=e),i&&(this.responseImpl=i)}static fetch(){return this.fetchImpl?this.fetchImpl:"undefined"!=typeof self&&"fetch"in self?se
 9659 /**
 9660 * @license
 9661 * Copyright 2020 Google LLC
 9662 *
 9663 * Licensed under the Apache License, Version 2.0 (the "License");
 9664 * you may not use this file except in compliance with the License.
 9665 * You may obtain a copy of the License at
 9666 *
 9667 *   http://www.apache.org/licenses/LICENSE-2.0
 9668 *
 9669 * Unless required by applicable law or agreed to in writing, software
 9670 * distributed under the License is distributed on an "AS IS" BASIS,
 9671 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9672 * See the License for the specific language governing permissions and
 9673 * limitations under the License.
 9674 */const zu={CREDENTIAL_MISMATCH:"custom-token-mismatch",MISSING_CUSTOM_TOKEN:"internal-error",INVALID_IDENTIFIER:"invalid-email",MISSING_CONTINUE_URI:"internal-error",INVALID_PASSWORD:"wrong-passwo
 9675 /**
 9676 * @license
 9677 * Copyright 2020 Google LLC
 9678 *
 9679 * Licensed under the Apache License, Version 2.0 (the "License");
 9680 * you may not use this file except in compliance with the License.
 9681 * You may obtain a copy of the License at
 9682 *
 9683 *   http://www.apache.org/licenses/LICENSE-2.0
 9684 *
 9685 * Unless required by applicable law or agreed to in writing, software
 9686 * distributed under the License is distributed on an "AS IS" BASIS,
 9687 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9688 * See the License for the specific language governing permissions and
 9689 * limitations under the License.
 9690 */function Ru(t,e){return t.tenantId&&!e.tenantId?Object.assign(Object.assign({},e),{tenantId:t.tenantId}):e}async function Lu(t,e,i,r,s={}){return Fu(t,s,(async()=>{let s={},o={};r&&("GET"===e?o=r
 9691 /**
 9692 * @license
 9693 * Copyright 2020 Google LLC
 9694 *
 9695 * Licensed under the Apache License, Version 2.0 (the "License");
 9696 * you may not use this file except in compliance with the License.
 9697 * You may obtain a copy of the License at
 9698 *
 9699 *   http://www.apache.org/licenses/LICENSE-2.0
 9700 *
9701 * Unless required by applicable law or agreed to in writing, software
 9702 * distributed under the License is distributed on an "AS IS" BASIS,
 9703 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9704 * See the License for the specific language governing permissions and
 9705 * limitations under the License.
 9706 */async function Uu(t,e){return Lu(t,"POST","/v1/accounts:lookup",e)}
 9707 /**
 9708 * @license
 9709 * Copyright 2020 Google LLC
 9710 *
 9711 * Licensed under the Apache License, Version 2.0 (the "License");
 9712 * you may not use this file except in compliance with the License.
 9713 * You may obtain a copy of the License at
 9714 *
 9715 *   http://www.apache.org/licenses/LICENSE-2.0
 9716 *
 9717 * Unless required by applicable law or agreed to in writing, software
 9718 * distributed under the License is distributed on an "AS IS" BASIS,
 9719 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9720 * See the License for the specific language governing permissions and
 9721 * limitations under the License.
 9722 */function Vu(t){if(t)try{const e=new Date(Number(t));if(!isNaN(e.getTime()))return e.toUTCString()}catch(t){}}function ju(t){return 1e3*Number(t)}function Hu(t){const[e,i,r]=t.split(".");if(void 0
 9723 /**
 9724 * @license
 9725 * Copyright 2020 Google LLC
 9726 *
 9727 * Licensed under the Apache License, Version 2.0 (the "License");
 9728 * you may not use this file except in compliance with the License.
 9729 * You may obtain a copy of the License at
 9730 *
 9731 *   http://www.apache.org/licenses/LICENSE-2.0
 9732 *
 9733 * Unless required by applicable law or agreed to in writing, software
 9734 * distributed under the License is distributed on an "AS IS" BASIS,
 9735 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9736 * See the License for the specific language governing permissions and
 9737 * limitations under the License.
 9738 */async function qu(t,e,i=!1){if(i)return e;try{return await e}catch(e){throw e instanceof Ad&&function({code:t}){return"auth/user-disabled"===t||"auth/user-token-expired"===t}
 9739 /**
 9740 * @license
 9741 * Copyright 2020 Google LLC
 9742 *
 9743 * Licensed under the Apache License, Version 2.0 (the "License");
 9744 * you may not use this file except in compliance with the License.
 9745 * You may obtain a copy of the License at
 9746 *
 9747 *   http://www.apache.org/licenses/LICENSE-2.0
 9748 *
 9749 * Unless required by applicable law or agreed to in writing, software
 9750 * distributed under the License is distributed on an "AS IS" BASIS,
 9751 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9752 * See the License for the specific language governing permissions and
 9753 * limitations under the License.
 9754 */(e)&&t.auth.currentUser===t&&await t.auth.signOut(),e}}class Ku{constructor(t){this.user=t,this.isRunning=!1,this.timerId=null,this.errorBackoff=3e4}_start(){this.isRunning||(this.isRunning=!0,th
 9755 /**
 9756 * @license
 9757 * Copyright 2020 Google LLC
 9758 *
 9759 * Licensed under the Apache License, Version 2.0 (the "License");
 9760 * you may not use this file except in compliance with the License.
 9761 * You may obtain a copy of the License at
 9762 *
 9763 *   http://www.apache.org/licenses/LICENSE-2.0
 9764 *
 9765 * Unless required by applicable law or agreed to in writing, software
 9766 * distributed under the License is distributed on an "AS IS" BASIS,
 9767 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9768 * See the License for the specific language governing permissions and
 9769 * limitations under the License.
 9770 */class Gu{constructor(t,e){this.createdAt=t,this.lastLoginAt=e,this._initializeTime()}_initializeTime(){this.lastSignInTime=Vu(this.lastLoginAt),this.creationTime=Vu(this.createdAt)}_copy(t){this.
 9771 /**
 9772 * @license
 9773 * Copyright 2019 Google LLC
 9774 *
 9775 * Licensed under the Apache License, Version 2.0 (the "License");
 9776 * you may not use this file except in compliance with the License.
 9777 * You may obtain a copy of the License at
 9778 *
 9779 *   http://www.apache.org/licenses/LICENSE-2.0
 9780 *
 9781 * Unless required by applicable law or agreed to in writing, software
 9782 * distributed under the License is distributed on an "AS IS" BASIS,
 9783 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9784 * See the License for the specific language governing permissions and
 9785 * limitations under the License.
 9786 */async function Yu(t){var e;const i=t.auth,r=await t.getIdToken(),s=await qu(t,Uu(i,{idToken:r}));Cu(null==s?void 0:s.users.length,i,"internal-error");const o=s.users[0];t._notifyReloadListener(o)
 9787 /**
 9788 * @license
 9789 * Copyright 2020 Google LLC
 9790 *
 9791 * Licensed under the Apache License, Version 2.0 (the "License");
 9792 * you may not use this file except in compliance with the License.
 9793 * You may obtain a copy of the License at
 9794 *
 9795 *   http://www.apache.org/licenses/LICENSE-2.0
 9796 *
 9797 * Unless required by applicable law or agreed to in writing, software
 9798 * distributed under the License is distributed on an "AS IS" BASIS,
 9799 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9800 * See the License for the specific language governing permissions and
 9801 * limitations under the License.
 9802 */
 9803 /**
 9804 * @license
 9805 * Copyright 2020 Google LLC
 9806 *
 9807 * Licensed under the Apache License, Version 2.0 (the "License");
 9808 * you may not use this file except in compliance with the License.
 9809 * You may obtain a copy of the License at
 9810 *
 9811 *   http://www.apache.org/licenses/LICENSE-2.0
 9812 *
 9813 * Unless required by applicable law or agreed to in writing, software
 9814 * distributed under the License is distributed on an "AS IS" BASIS,
 9815 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9816 * See the License for the specific language governing permissions and
 9817 * limitations under the License.
 9818 */
 9819 class Ju{constructor(){this.refreshToken=null,this.accessToken=null,this.expirationTime=null}get isExpired(){return!this.expirationTime||Date.now()>this.expirationTime-3e4}updateFromServerResponse(t
 9820 /**
 9821 * @license
 9822 * Copyright 2020 Google LLC
 9823 *
 9824 * Licensed under the Apache License, Version 2.0 (the "License");
 9825 * you may not use this file except in compliance with the License.
 9826 * You may obtain a copy of the License at
 9827 *
 9828 *   http://www.apache.org/licenses/LICENSE-2.0
 9829 *
 9830 * Unless required by applicable law or agreed to in writing, software
 9831 * distributed under the License is distributed on an "AS IS" BASIS,
 9832 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9833 * See the License for the specific language governing permissions and
 9834 * limitations under the License.
 9835 */function Qu(t,e){Cu("string"==typeof t||void 0===t,"internal-error",{appName:e})}class Zu{constructor(t){var{uid:e,auth:i,stsTokenManager:r}=t,s=pu(t,["uid","auth","stsTokenManager"]);this.provid
 9836 /**
 9837 * @license
 9838 * Copyright 2020 Google LLC
 9839 *
 9840 * Licensed under the Apache License, Version 2.0 (the "License");
 9841 * you may not use this file except in compliance with the License.
 9842 * You may obtain a copy of the License at
 9843 *
 9844 *   http://www.apache.org/licenses/LICENSE-2.0
 9845 *
 9846 * Unless required by applicable law or agreed to in writing, software
 9847 * distributed under the License is distributed on an "AS IS" BASIS,
9848 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9849 * See the License for the specific language governing permissions and
 9850 * limitations under the License.
 9851 */const tp=new Map;function ep(t){$u(t instanceof Function,"Expected a class definition");let e=tp.get(t);return e?($u(e instanceof t,"Instance stored in cache mismatched with class"),e):(e=new t,t
 9852 /**
 9853 * @license
 9854 * Copyright 2019 Google LLC
 9855 *
 9856 * Licensed under the Apache License, Version 2.0 (the "License");
 9857 * you may not use this file except in compliance with the License.
 9858 * You may obtain a copy of the License at
 9859 *
 9860 *   http://www.apache.org/licenses/LICENSE-2.0
 9861 *
 9862 * Unless required by applicable law or agreed to in writing, software
 9863 * distributed under the License is distributed on an "AS IS" BASIS,
 9864 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9865 * See the License for the specific language governing permissions and
 9866 * limitations under the License.
 9867 */class ip{constructor(){this.type="NONE",this.storage={}}async _isAvailable(){return!0}async _set(t,e){this.storage[t]=e}async _get(t){const e=this.storage[t];return void 0===e?null:e}async _remov
 9868 /**
 9869 * @license
 9870 * Copyright 2019 Google LLC
 9871 *
 9872 * Licensed under the Apache License, Version 2.0 (the "License");
 9873 * you may not use this file except in compliance with the License.
 9874 * You may obtain a copy of the License at
 9875 *
 9876 *   http://www.apache.org/licenses/LICENSE-2.0
 9877 *
 9878 * Unless required by applicable law or agreed to in writing, software
 9879 * distributed under the License is distributed on an "AS IS" BASIS,
 9880 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9881 * See the License for the specific language governing permissions and
 9882 * limitations under the License.
 9883 */function sp(t,e,i){return`firebase:${t}:${e}:${i}`}class op{constructor(t,e,i){this.persistence=t,this.auth=e,this.userKey=i;const{config:r,name:s}=this.auth;this.fullUserKey=sp(this.userKey,r.ap
 9884 /**
 9885 * @license
 9886 * Copyright 2020 Google LLC
 9887 *
 9888 * Licensed under the Apache License, Version 2.0 (the "License");
 9889 * you may not use this file except in compliance with the License.
 9890 * You may obtain a copy of the License at
 9891 *
 9892 *   http://www.apache.org/licenses/LICENSE-2.0
 9893 *
 9894 * Unless required by applicable law or agreed to in writing, software
 9895 * distributed under the License is distributed on an "AS IS" BASIS,
 9896 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9897 * See the License for the specific language governing permissions and
 9898 * limitations under the License.
 9899 */function ap(t){const e=t.toLowerCase();if(e.includes("opera/")||e.includes("opr/")||e.includes("opios/"))return"Opera";if(dp(e))return"IEMobile";if(e.includes("msie")||e.includes("trident/"))retu
 9900 /**
 9901 * @license
 9902 * Copyright 2020 Google LLC
 9903 *
 9904 * Licensed under the Apache License, Version 2.0 (the "License");
 9905 * you may not use this file except in compliance with the License.
 9906 * You may obtain a copy of the License at
 9907 *
 9908 *   http://www.apache.org/licenses/LICENSE-2.0
 9909 *
 9910 * Unless required by applicable law or agreed to in writing, software
 9911 * distributed under the License is distributed on an "AS IS" BASIS,
 9912 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9913 * See the License for the specific language governing permissions and
 9914 * limitations under the License.
 9915 */function bp(t,e=[]){let i;switch(t){case"Browser":i=ap(Td());break;case"Worker":i=`${ap(Td())}-${t}`;break;default:i=t}const r=e.length?e.join(","):"FirebaseCore-web";return`${i}/JsCore/${Qh}/${r
 9916 /**
 9917 * @license
 9918 * Copyright 2022 Google LLC
 9919 *
 9920 * Licensed under the Apache License, Version 2.0 (the "License");
 9921 * you may not use this file except in compliance with the License.
 9922 * You may obtain a copy of the License at
 9923 *
 9924 *   http://www.apache.org/licenses/LICENSE-2.0
 9925 *
 9926 * Unless required by applicable law or agreed to in writing, software
 9927 * distributed under the License is distributed on an "AS IS" BASIS,
 9928 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9929 * See the License for the specific language governing permissions and
 9930 * limitations under the License.
 9931 */class vp{constructor(t){this.auth=t,this.queue=[]}pushCallback(t,e){const i=e=>new Promise(((i,r)=>{try{i(t(e))}catch(t){r(t)}}));i.onAbort=e,this.queue.push(i);const r=this.queue.length-1;return
 9932 /**
 9933 * @license
 9934 * Copyright 2023 Google LLC
 9935 *
 9936 * Licensed under the Apache License, Version 2.0 (the "License");
 9937 * you may not use this file except in compliance with the License.
 9938 * You may obtain a copy of the License at
 9939 *
 9940 *   http://www.apache.org/licenses/LICENSE-2.0
 9941 *
 9942 * Unless required by applicable law or agreed to in writing, software
 9943 * distributed under the License is distributed on an "AS IS" BASIS,
 9944 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9945 * See the License for the specific language governing permissions and
 9946 * limitations under the License.
 9947 */class yp{constructor(t){var e,i,r,s;const o=t.customStrengthOptions;this.customStrengthOptions={},this.customStrengthOptions.minPasswordLength=null!==(e=o.minPasswordLength)&&void 0!==e?e:6,o.max
 9948 /**
 9949 * @license
 9950 * Copyright 2020 Google LLC
 9951 *
 9952 * Licensed under the Apache License, Version 2.0 (the "License");
 9953 * you may not use this file except in compliance with the License.
 9954 * You may obtain a copy of the License at
 9955 *
 9956 *   http://www.apache.org/licenses/LICENSE-2.0
 9957 *
 9958 * Unless required by applicable law or agreed to in writing, software
 9959 * distributed under the License is distributed on an "AS IS" BASIS,
 9960 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9961 * See the License for the specific language governing permissions and
 9962 * limitations under the License.
 9963 */class wp{constructor(t,e,i,r){this.app=t,this.heartbeatServiceProvider=e,this.appCheckServiceProvider=i,this.config=r,this.currentUser=null,this.emulatorConfig=null,this.operations=Promise.resolv
 9964 /**
 9965 * @license
 9966 * Copyright 2023 Google LLC
 9967 *
 9968 * Licensed under the Apache License, Version 2.0 (the "License");
 9969 * you may not use this file except in compliance with the License.
 9970 * You may obtain a copy of the License at
 9971 *
 9972 *   http://www.apache.org/licenses/LICENSE-2.0
 9973 *
 9974 * Unless required by applicable law or agreed to in writing, software
 9975 * distributed under the License is distributed on an "AS IS" BASIS,
 9976 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9977 * See the License for the specific language governing permissions and
 9978 * limitations under the License.
 9979 */(this),e=new yp(t);null===this.tenantId?this._projectPasswordPolicy=e:this._tenantPasswordPolicies[this.tenantId]=e}_getPersistence(){return this.assertedPersistence.persistence.type}_updateError
 9980 /**
 9981 * @license
 9982 * Copyright 2020 Google LLC
 9983 *
 9984 * Licensed under the Apache License, Version 2.0 (the "License");
 9985 * you may not use this file except in compliance with the License.
 9986 * You may obtain a copy of the License at
 9987 *
 9988 *   http://www.apache.org/licenses/LICENSE-2.0
 9989 *
 9990 * Unless required by applicable law or agreed to in writing, software
 9991 * distributed under the License is distributed on an "AS IS" BASIS,
 9992 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 9993 * See the License for the specific language governing permissions and
 9994 * limitations under the License.
9995 */let kp={async loadJS(){throw new Error("Unable to load external scripts")},recaptchaV2Script:"",recaptchaEnterpriseScript:"",gapiScript:""};function Cp(t,e,i){const r=_p(t);Cu(/^https?:\/\//.test
 9996 /**
 9997 * @license
 9998 * Copyright 2020 Google LLC
 9999 *
 10000 * Licensed under the Apache License, Version 2.0 (the "License");
 10001 * you may not use this file except in compliance with the License.
 10002 * You may obtain a copy of the License at
 10003 *
 10004 *   http://www.apache.org/licenses/LICENSE-2.0
 10005 *
 10006 * Unless required by applicable law or agreed to in writing, software
 10007 * distributed under the License is distributed on an "AS IS" BASIS,
 10008 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10009 * See the License for the specific language governing permissions and
 10010 * limitations under the License.
 10011 */()}function Sp(t){const e=t.indexOf(":");return e<0?"":t.substr(0,e+1)}function $p(t){if(!t)return null;const e=Number(t);return isNaN(e)?null:e}class Ep{constructor(t,e){this.providerId=t,this.s
 10012 /**
 10013 * @license
 10014 * Copyright 2020 Google LLC
 10015 *
 10016 * Licensed under the Apache License, Version 2.0 (the "License");
 10017 * you may not use this file except in compliance with the License.
 10018 * You may obtain a copy of the License at
 10019 *
 10020 *   http://www.apache.org/licenses/LICENSE-2.0
 10021 *
 10022 * Unless required by applicable law or agreed to in writing, software
 10023 * distributed under the License is distributed on an "AS IS" BASIS,
 10024 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10025 * See the License for the specific language governing permissions and
 10026 * limitations under the License.
 10027 */async function Ip(t,e){return async function(t,e,i,r,s={}){const o=await Lu(t,e,i,r,s);return"mfaPendingCredential"in o&&yu(t,"multi-factor-auth-required",{_serverResponse:o}),o}(t,"POST","/v1/ac
 10028 /**
 10029 * @license
 10030 * Copyright 2020 Google LLC
 10031 *
 10032 * Licensed under the Apache License, Version 2.0 (the "License");
 10033 * you may not use this file except in compliance with the License.
 10034 * You may obtain a copy of the License at
 10035 *
 10036 *   http://www.apache.org/licenses/LICENSE-2.0
 10037 *
 10038 * Unless required by applicable law or agreed to in writing, software
 10039 * distributed under the License is distributed on an "AS IS" BASIS,
 10040 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10041 * See the License for the specific language governing permissions and
 10042 * limitations under the License.
 10043 */class Tp extends Ep{constructor(){super(...arguments),this.pendingToken=null}static _fromParams(t){const e=new Tp(t.providerId,t.signInMethod);return t.idToken||t.accessToken?(t.idToken&&(e.idTok
 10044 /**
 10045 * @license
 10046 * Copyright 2020 Google LLC
 10047 *
 10048 * Licensed under the Apache License, Version 2.0 (the "License");
 10049 * you may not use this file except in compliance with the License.
 10050 * You may obtain a copy of the License at
 10051 *
 10052 *   http://www.apache.org/licenses/LICENSE-2.0
 10053 *
 10054 * Unless required by applicable law or agreed to in writing, software
 10055 * distributed under the License is distributed on an "AS IS" BASIS,
 10056 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10057 * See the License for the specific language governing permissions and
 10058 * limitations under the License.
 10059 */class Ap{constructor(t){this.providerId=t,this.defaultLanguageCode=null,this.customParameters={}}setDefaultLanguage(t){this.defaultLanguageCode=t}setCustomParameters(t){return this.customParamete
 10060 /**
 10061 * @license
 10062 * Copyright 2019 Google LLC
 10063 *
 10064 * Licensed under the Apache License, Version 2.0 (the "License");
 10065 * you may not use this file except in compliance with the License.
 10066 * You may obtain a copy of the License at
 10067 *
 10068 *   http://www.apache.org/licenses/LICENSE-2.0
 10069 *
 10070 * Unless required by applicable law or agreed to in writing, software
 10071 * distributed under the License is distributed on an "AS IS" BASIS,
 10072 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10073 * See the License for the specific language governing permissions and
 10074 * limitations under the License.
 10075 */class Dp extends Ap{constructor(){super(...arguments),this.scopes=[]}addScope(t){return this.scopes.includes(t)||this.scopes.push(t),this}getScopes(){return[...this.scopes]}}
 10076 /**
 10077 * @license
 10078 * Copyright 2020 Google LLC
 10079 *
 10080 * Licensed under the Apache License, Version 2.0 (the "License");
 10081 * you may not use this file except in compliance with the License.
 10082 * You may obtain a copy of the License at
 10083 *
 10084 *   http://www.apache.org/licenses/LICENSE-2.0
 10085 *
 10086 * Unless required by applicable law or agreed to in writing, software
 10087 * distributed under the License is distributed on an "AS IS" BASIS,
 10088 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10089 * See the License for the specific language governing permissions and
 10090 * limitations under the License.
 10091 */class Op extends Dp{constructor(){super("facebook.com")}static credential(t){return Tp._fromParams({providerId:Op.PROVIDER_ID,signInMethod:Op.FACEBOOK_SIGN_IN_METHOD,accessToken:t})}static creden
 10092 /**
 10093 * @license
 10094 * Copyright 2020 Google LLC
 10095 *
 10096 * Licensed under the Apache License, Version 2.0 (the "License");
 10097 * you may not use this file except in compliance with the License.
 10098 * You may obtain a copy of the License at
 10099 *
 10100 *   http://www.apache.org/licenses/LICENSE-2.0
 10101 *
 10102 * Unless required by applicable law or agreed to in writing, software
 10103 * distributed under the License is distributed on an "AS IS" BASIS,
 10104 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10105 * See the License for the specific language governing permissions and
 10106 * limitations under the License.
 10107 */
 10108 class zp extends Dp{constructor(){super("google.com"),this.addScope("profile")}static credential(t,e){return Tp._fromParams({providerId:zp.PROVIDER_ID,signInMethod:zp.GOOGLE_SIGN_IN_METHOD,idToken:t
 10109 /**
 10110 * @license
 10111 * Copyright 2020 Google LLC
 10112 *
 10113 * Licensed under the Apache License, Version 2.0 (the "License");
 10114 * you may not use this file except in compliance with the License.
 10115 * You may obtain a copy of the License at
 10116 *
 10117 *   http://www.apache.org/licenses/LICENSE-2.0
 10118 *
 10119 * Unless required by applicable law or agreed to in writing, software
 10120 * distributed under the License is distributed on an "AS IS" BASIS,
 10121 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10122 * See the License for the specific language governing permissions and
 10123 * limitations under the License.
 10124 */
 10125 class Pp extends Dp{constructor(){super("github.com")}static credential(t){return Tp._fromParams({providerId:Pp.PROVIDER_ID,signInMethod:Pp.GITHUB_SIGN_IN_METHOD,accessToken:t})}static credentialFro
 10126 /**
 10127 * @license
 10128 * Copyright 2020 Google LLC
 10129 *
 10130 * Licensed under the Apache License, Version 2.0 (the "License");
 10131 * you may not use this file except in compliance with the License.
 10132 * You may obtain a copy of the License at
 10133 *
 10134 *   http://www.apache.org/licenses/LICENSE-2.0
 10135 *
 10136 * Unless required by applicable law or agreed to in writing, software
 10137 * distributed under the License is distributed on an "AS IS" BASIS,
 10138 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10139 * See the License for the specific language governing permissions and
 10140 * limitations under the License.
 10141 */
10142 class Rp extends Dp{constructor(){super("twitter.com")}static credential(t,e){return Tp._fromParams({providerId:Rp.PROVIDER_ID,signInMethod:Rp.TWITTER_SIGN_IN_METHOD,oauthToken:t,oauthTokenSecret:e}
 10143 /**
 10144 * @license
 10145 * Copyright 2020 Google LLC
 10146 *
 10147 * Licensed under the Apache License, Version 2.0 (the "License");
 10148 * you may not use this file except in compliance with the License.
 10149 * You may obtain a copy of the License at
 10150 *
 10151 *   http://www.apache.org/licenses/LICENSE-2.0
 10152 *
 10153 * Unless required by applicable law or agreed to in writing, software
 10154 * distributed under the License is distributed on an "AS IS" BASIS,
 10155 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10156 * See the License for the specific language governing permissions and
 10157 * limitations under the License.
 10158 */
 10159 class Lp{constructor(t){this.user=t.user,this.providerId=t.providerId,this._tokenResponse=t._tokenResponse,this.operationType=t.operationType}static async _fromIdTokenResponse(t,e,i,r=!1){const s=aw
 10160 /**
 10161 * @license
 10162 * Copyright 2020 Google LLC
 10163 *
 10164 * Licensed under the Apache License, Version 2.0 (the "License");
 10165 * you may not use this file except in compliance with the License.
 10166 * You may obtain a copy of the License at
 10167 *
 10168 *   http://www.apache.org/licenses/LICENSE-2.0
 10169 *
 10170 * Unless required by applicable law or agreed to in writing, software
 10171 * distributed under the License is distributed on an "AS IS" BASIS,
 10172 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10173 * See the License for the specific language governing permissions and
 10174 * limitations under the License.
 10175 */class Mp extends Ad{constructor(t,e,i,r){var s;super(e.code,e.message),this.operationType=i,this.user=r,Object.setPrototypeOf(this,Mp.prototype),this.customData={appName:t.name,tenantId:null!==(s
 10176 /**
 10177 * @license
 10178 * Copyright 2019 Google LLC
 10179 *
 10180 * Licensed under the Apache License, Version 2.0 (the "License");
 10181 * you may not use this file except in compliance with the License.
 10182 * You may obtain a copy of the License at
 10183 *
 10184 *   http://www.apache.org/licenses/LICENSE-2.0
 10185 *
 10186 * Unless required by applicable law or agreed to in writing, software
 10187 * distributed under the License is distributed on an "AS IS" BASIS,
 10188 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10189 * See the License for the specific language governing permissions and
 10190 * limitations under the License.
 10191 */class Up{constructor(t,e){this.storageRetriever=t,this.type=e}_isAvailable(){try{return this.storage?(this.storage.setItem(Bp,"1"),this.storage.removeItem(Bp),Promise.resolve(!0)):Promise.resolve
 10192 /**
 10193 * @license
 10194 * Copyright 2020 Google LLC
 10195 *
 10196 * Licensed under the Apache License, Version 2.0 (the "License");
 10197 * you may not use this file except in compliance with the License.
 10198 * You may obtain a copy of the License at
 10199 *
 10200 *   http://www.apache.org/licenses/LICENSE-2.0
 10201 *
 10202 * Unless required by applicable law or agreed to in writing, software
 10203 * distributed under the License is distributed on an "AS IS" BASIS,
 10204 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10205 * See the License for the specific language governing permissions and
 10206 * limitations under the License.
 10207 */class Vp extends Up{constructor(){super((()=>window.localStorage),"LOCAL"),this.boundEventHandler=(t,e)=>this.onStorageEvent(t,e),this.listeners={},this.localCache={},this.pollTimer=null,this.fal
 10208 /**
 10209 * @license
 10210 * Copyright 2020 Google LLC
 10211 *
 10212 * Licensed under the Apache License, Version 2.0 (the "License");
 10213 * you may not use this file except in compliance with the License.
 10214 * You may obtain a copy of the License at
 10215 *
 10216 *   http://www.apache.org/licenses/LICENSE-2.0
 10217 *
 10218 * Unless required by applicable law or agreed to in writing, software
 10219 * distributed under the License is distributed on an "AS IS" BASIS,
 10220 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10221 * See the License for the specific language governing permissions and
 10222 * limitations under the License.
 10223 */class Hp extends Up{constructor(){super((()=>window.sessionStorage),"SESSION")}_addListener(t,e){}_removeListener(t,e){}}Hp.type="SESSION";const Wp=Hp;
 10224 /**
 10225 * @license
 10226 * Copyright 2019 Google LLC
 10227 *
 10228 * Licensed under the Apache License, Version 2.0 (the "License");
 10229 * you may not use this file except in compliance with the License.
 10230 * You may obtain a copy of the License at
 10231 *
 10232 *   http://www.apache.org/licenses/LICENSE-2.0
 10233 *
 10234 * Unless required by applicable law or agreed to in writing, software
 10235 * distributed under the License is distributed on an "AS IS" BASIS,
 10236 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10237 * See the License for the specific language governing permissions and
 10238 * limitations under the License.
 10239 */
 10240 /**
 10241 * @license
 10242 * Copyright 2019 Google LLC
 10243 *
 10244 * Licensed under the Apache License, Version 2.0 (the "License");
 10245 * you may not use this file except in compliance with the License.
 10246 * You may obtain a copy of the License at
 10247 *
 10248 *   http://www.apache.org/licenses/LICENSE-2.0
 10249 *
 10250 * Unless required by applicable law or agreed to in writing, software
 10251 * distributed under the License is distributed on an "AS IS" BASIS,
 10252 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10253 * See the License for the specific language governing permissions and
 10254 * limitations under the License.
 10255 */
 10256 class qp{constructor(t){this.eventTarget=t,this.handlersMap={},this.boundEventHandler=this.handleEvent.bind(this)}static _getInstance(t){const e=this.receivers.find((e=>e.isListeningto(t)));if(e)ret
 10257 /**
 10258 * @license
 10259 * Copyright 2020 Google LLC
 10260 *
 10261 * Licensed under the Apache License, Version 2.0 (the "License");
 10262 * you may not use this file except in compliance with the License.
 10263 * You may obtain a copy of the License at
 10264 *
 10265 *   http://www.apache.org/licenses/LICENSE-2.0
 10266 *
 10267 * Unless required by applicable law or agreed to in writing, software
 10268 * distributed under the License is distributed on an "AS IS" BASIS,
 10269 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10270 * See the License for the specific language governing permissions and
 10271 * limitations under the License.
 10272 */
 10273 function Kp(t="",e=10){let i="";for(let t=0;t<e;t++)i+=Math.floor(10*Math.random());return t+i}
 10274 /**
 10275 * @license
 10276 * Copyright 2019 Google LLC
 10277 *
 10278 * Licensed under the Apache License, Version 2.0 (the "License");
 10279 * you may not use this file except in compliance with the License.
 10280 * You may obtain a copy of the License at
 10281 *
 10282 *   http://www.apache.org/licenses/LICENSE-2.0
 10283 *
 10284 * Unless required by applicable law or agreed to in writing, software
 10285 * distributed under the License is distributed on an "AS IS" BASIS,
 10286 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10287 * See the License for the specific language governing permissions and
 10288 * limitations under the License.
10289 */qp.receivers=[];class Gp{constructor(t){this.target=t,this.handlers=new Set}removeMessageHandler(t){t.messageChannel&&(t.messageChannel.port1.removeEventListener("message",t.onMessage),t.messageC
 10290 /**
 10291 * @license
 10292 * Copyright 2020 Google LLC
 10293 *
 10294 * Licensed under the Apache License, Version 2.0 (the "License");
 10295 * you may not use this file except in compliance with the License.
 10296 * You may obtain a copy of the License at
 10297 *
 10298 *   http://www.apache.org/licenses/LICENSE-2.0
 10299 *
 10300 * Unless required by applicable law or agreed to in writing, software
 10301 * distributed under the License is distributed on an "AS IS" BASIS,
 10302 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10303 * See the License for the specific language governing permissions and
 10304 * limitations under the License.
 10305 */function Yp(){return window}
 10306 /**
 10307 * @license
 10308 * Copyright 2020 Google LLC.
 10309 *
 10310 * Licensed under the Apache License, Version 2.0 (the "License");
 10311 * you may not use this file except in compliance with the License.
 10312 * You may obtain a copy of the License at
 10313 *
 10314 *   http://www.apache.org/licenses/LICENSE-2.0
 10315 *
 10316 * Unless required by applicable law or agreed to in writing, software
 10317 * distributed under the License is distributed on an "AS IS" BASIS,
 10318 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10319 * See the License for the specific language governing permissions and
 10320 * limitations under the License.
 10321 */
 10322 function Xp(){return void 0!==Yp().WorkerGlobalScope&&"function"==typeof Yp().importScripts}
 10323 /**
 10324 * @license
 10325 * Copyright 2019 Google LLC
 10326 *
 10327 * Licensed under the Apache License, Version 2.0 (the "License");
 10328 * you may not use this file except in compliance with the License.
 10329 * You may obtain a copy of the License at
 10330 *
 10331 *   http://www.apache.org/licenses/LICENSE-2.0
 10332 *
 10333 * Unless required by applicable law or agreed to in writing, software
 10334 * distributed under the License is distributed on an "AS IS" BASIS,
 10335 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10336 * See the License for the specific language governing permissions and
 10337 * limitations under the License.
 10338 */
 10339 const Jp="firebaseLocalStorageDb",Qp="firebaseLocalStorage",Zp="fbase_key";class tf{constructor(t){this.request=t}toPromise(){return new Promise(((t,e)=>{this.request.addEventListener("success",(()=
 10340 /**
 10341 * @license
 10342 * Copyright 2021 Google LLC
 10343 *
 10344 * Licensed under the Apache License, Version 2.0 (the "License");
 10345 * you may not use this file except in compliance with the License.
 10346 * You may obtain a copy of the License at
 10347 *
 10348 *   http://www.apache.org/licenses/LICENSE-2.0
 10349 *
 10350 * Unless required by applicable law or agreed to in writing, software
 10351 * distributed under the License is distributed on an "AS IS" BASIS,
 10352 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10353 * See the License for the specific language governing permissions and
 10354 * limitations under the License.
 10355 */
 10356 function lf(t,e){return e?ep(e):(Cu(t._popupRedirectResolver,t,"argument-error"),t._popupRedirectResolver)}
 10357 /**
 10358 * @license
 10359 * Copyright 2019 Google LLC
 10360 *
 10361 * Licensed under the Apache License, Version 2.0 (the "License");
 10362 * you may not use this file except in compliance with the License.
 10363 * You may obtain a copy of the License at
 10364 *
 10365 *   http://www.apache.org/licenses/LICENSE-2.0
 10366 *
 10367 * Unless required by applicable law or agreed to in writing, software
 10368 * distributed under the License is distributed on an "AS IS" BASIS,
 10369 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10370 * See the License for the specific language governing permissions and
 10371 * limitations under the License.
 10372 */new Au(3e4,6e4);class cf extends Ep{constructor(t){super("custom","custom"),this.params=t}_getIdTokenResponse(t){return Ip(t,this._buildIdpRequest())}_linkToIdToken(t,e){return Ip(t,this._buildId
 10373 /**
 10374 * @license
 10375 * Copyright 2020 Google LLC
 10376 *
 10377 * Licensed under the Apache License, Version 2.0 (the "License");
 10378 * you may not use this file except in compliance with the License.
 10379 * You may obtain a copy of the License at
 10380 *
 10381 *   http://www.apache.org/licenses/LICENSE-2.0
 10382 *
 10383 * Unless required by applicable law or agreed to in writing, software
 10384 * distributed under the License is distributed on an "AS IS" BASIS,
 10385 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10386 * See the License for the specific language governing permissions and
 10387 * limitations under the License.
 10388 */
 10389 return async function(t,e,i=!1){if(Yh(t.app))return Promise.reject(xu(t));const r="signIn",s=await Np(t,r,e),o=await Lp._fromIdTokenResponse(t,r,s);return i||await t._updateCurrentUser(o.user),o}(t.
 10390 /**
 10391 * @license
 10392 * Copyright 2019 Google LLC
 10393 *
 10394 * Licensed under the Apache License, Version 2.0 (the "License");
 10395 * you may not use this file except in compliance with the License.
 10396 * You may obtain a copy of the License at
 10397 *
 10398 *   http://www.apache.org/licenses/LICENSE-2.0
 10399 *
 10400 * Unless required by applicable law or agreed to in writing, software
 10401 * distributed under the License is distributed on an "AS IS" BASIS,
 10402 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10403 * See the License for the specific language governing permissions and
 10404 * limitations under the License.
 10405 */
 10406 async function(t,e,i=!1){const{auth:r}=t;if(Yh(r.app))return Promise.reject(xu(r));const s="reauthenticate";try{const o=await qu(t,Np(r,s,e,t),i);Cu(o.idToken,r,"internal-error");const a=Hu(o.idToke
 10407 /**
 10408 * @license
 10409 * Copyright 2020 Google LLC
 10410 *
 10411 * Licensed under the Apache License, Version 2.0 (the "License");
 10412 * you may not use this file except in compliance with the License.
 10413 * You may obtain a copy of the License at
 10414 *
 10415 *   http://www.apache.org/licenses/LICENSE-2.0
 10416 *
 10417 * Unless required by applicable law or agreed to in writing, software
 10418 * distributed under the License is distributed on an "AS IS" BASIS,
 10419 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10420 * See the License for the specific language governing permissions and
 10421 * limitations under the License.
 10422 */class pf{constructor(t,e,i,r,s=!1){this.auth=t,this.resolver=i,this.user=r,this.bypassAuthState=s,this.pendingPromise=null,this.eventManager=null,this.filter=Array.isArray(e)?e:[e]}execute(){retu
 10423 /**
 10424 * @license
 10425 * Copyright 2020 Google LLC
 10426 *
 10427 * Licensed under the Apache License, Version 2.0 (the "License");
 10428 * you may not use this file except in compliance with the License.
 10429 * You may obtain a copy of the License at
 10430 *
 10431 *   http://www.apache.org/licenses/LICENSE-2.0
 10432 *
 10433 * Unless required by applicable law or agreed to in writing, software
 10434 * distributed under the License is distributed on an "AS IS" BASIS,
 10435 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
10436 * See the License for the specific language governing permissions and
 10437 * limitations under the License.
 10438 */const ff=new Au(2e3,1e4);async function mf(t,e,i){if(Yh(t.app))return Promise.reject(wu(t,"operation-not-supported-in-this-environment"));const r=_p(t);!function(t,e,i){if(!(e instanceof i))throw
 10439 /**
 10440 * @license
 10441 * Copyright 2020 Google LLC
 10442 *
 10443 * Licensed under the Apache License, Version 2.0 (the "License");
 10444 * you may not use this file except in compliance with the License.
 10445 * You may obtain a copy of the License at
 10446 *
 10447 *   http://www.apache.org/licenses/LICENSE-2.0
 10448 *
 10449 * Unless required by applicable law or agreed to in writing, software
 10450 * distributed under the License is distributed on an "AS IS" BASIS,
 10451 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10452 * See the License for the specific language governing permissions and
 10453 * limitations under the License.
 10454 */
 10455 const bf="pendingRedirect",vf=new Map;class yf extends pf{constructor(t,e,i=!1){super(t,["signInViaRedirect","linkViaRedirect","reauthViaRedirect","unknown"],e,void 0,i),this.eventId=null}async exec
 10456 /**
 10457 * @license
 10458 * Copyright 2020 Google LLC
 10459 *
 10460 * Licensed under the Apache License, Version 2.0 (the "License");
 10461 * you may not use this file except in compliance with the License.
 10462 * You may obtain a copy of the License at
 10463 *
 10464 *   http://www.apache.org/licenses/LICENSE-2.0
 10465 *
 10466 * Unless required by applicable law or agreed to in writing, software
 10467 * distributed under the License is distributed on an "AS IS" BASIS,
 10468 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10469 * See the License for the specific language governing permissions and
 10470 * limitations under the License.
 10471 */class xf{constructor(t){this.auth=t,this.cachedEventUids=new Set,this.consumers=new Set,this.queuedRedirectEvent=null,this.hasHandledPotentialRedirect=!1,this.lastProcessedEventTime=Date.now()}re
 10472 /**
 10473 * @license
 10474 * Copyright 2020 Google LLC
 10475 *
 10476 * Licensed under the Apache License, Version 2.0 (the "License");
 10477 * you may not use this file except in compliance with the License.
 10478 * You may obtain a copy of the License at
 10479 *
 10480 *   http://www.apache.org/licenses/LICENSE-2.0
 10481 *
 10482 * Unless required by applicable law or agreed to in writing, software
 10483 * distributed under the License is distributed on an "AS IS" BASIS,
 10484 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10485 * See the License for the specific language governing permissions and
 10486 * limitations under the License.
 10487 */(t)||(this.hasHandledPotentialRedirect=!0,e||(this.queuedRedirectEvent=t,e=!0)),e}sendToConsumer(t,e){var i;if(t.error&&!Cf(t)){const r=(null===(i=t.error.code)||void 0===i?void 0:i.split("auth/"
 10488 /**
 10489 * @license
 10490 * Copyright 2020 Google LLC
 10491 *
 10492 * Licensed under the Apache License, Version 2.0 (the "License");
 10493 * you may not use this file except in compliance with the License.
 10494 * You may obtain a copy of the License at
 10495 *
 10496 *   http://www.apache.org/licenses/LICENSE-2.0
 10497 *
 10498 * Unless required by applicable law or agreed to in writing, software
 10499 * distributed under the License is distributed on an "AS IS" BASIS,
 10500 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10501 * See the License for the specific language governing permissions and
 10502 * limitations under the License.
 10503 */
 10504 const Sf=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,$f=/^https?/;async function Ef(t){if(t.config.emulator)return;const{authorizedDomains:e}=await async function(t,e={}){return Lu(t,"GET","/v1/projects"
 10505 /**
 10506 * @license
 10507 * Copyright 2020 Google LLC.
 10508 *
 10509 * Licensed under the Apache License, Version 2.0 (the "License");
 10510 * you may not use this file except in compliance with the License.
 10511 * You may obtain a copy of the License at
 10512 *
 10513 *   http://www.apache.org/licenses/LICENSE-2.0
 10514 *
 10515 * Unless required by applicable law or agreed to in writing, software
 10516 * distributed under the License is distributed on an "AS IS" BASIS,
 10517 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10518 * See the License for the specific language governing permissions and
 10519 * limitations under the License.
 10520 */const Tf=new Au(3e4,6e4);function Af(){const t=Yp().___jsl;if(null==t?void 0:t.H)for(const e of Object.keys(t.H))if(t.H[e].r=t.H[e].r||[],t.H[e].L=t.H[e].L||[],t.H[e].r=[...t.H[e].L],t.CP)for(let
 10521 /**
 10522 * @license
 10523 * Copyright 2020 Google LLC.
 10524 *
 10525 * Licensed under the Apache License, Version 2.0 (the "License");
 10526 * you may not use this file except in compliance with the License.
 10527 * You may obtain a copy of the License at
 10528 *
 10529 *   http://www.apache.org/licenses/LICENSE-2.0
 10530 *
 10531 * Unless required by applicable law or agreed to in writing, software
 10532 * distributed under the License is distributed on an "AS IS" BASIS,
 10533 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10534 * See the License for the specific language governing permissions and
 10535 * limitations under the License.
 10536 */
 10537 const zf=new Au(5e3,15e3),Pf={style:{position:"absolute",top:"-100px",width:"1px",height:"1px"},"aria-hidden":"true",tabindex:"-1"},Rf=new Map([["identitytoolkit.googleapis.com","p"],["staging-ident
 10538 /**
 10539 * @license
 10540 * Copyright 2020 Google LLC.
 10541 *
 10542 * Licensed under the Apache License, Version 2.0 (the "License");
 10543 * you may not use this file except in compliance with the License.
 10544 * You may obtain a copy of the License at
 10545 *
 10546 *   http://www.apache.org/licenses/LICENSE-2.0
 10547 *
 10548 * Unless required by applicable law or agreed to in writing, software
 10549 * distributed under the License is distributed on an "AS IS" BASIS,
 10550 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10551 * See the License for the specific language governing permissions and
 10552 * limitations under the License.
 10553 */const Mf={location:"yes",resizable:"yes",statusbar:"yes",toolbar:"no"};class Nf{constructor(t){this.window=t,this.associatedEvent=null}close(){if(this.window)try{this.window.close()}catch(t){}}}f
 10554 /**
 10555 * @license
 10556 * Copyright 2021 Google LLC
 10557 *
 10558 * Licensed under the Apache License, Version 2.0 (the "License");
 10559 * you may not use this file except in compliance with the License.
 10560 * You may obtain a copy of the License at
 10561 *
 10562 *   http://www.apache.org/licenses/LICENSE-2.0
 10563 *
 10564 * Unless required by applicable law or agreed to in writing, software
 10565 * distributed under the License is distributed on an "AS IS" BASIS,
 10566 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10567 * See the License for the specific language governing permissions and
 10568 * limitations under the License.
 10569 */(e||"",n),new Nf(null);const h=window.open(e||"",n,d);Cu(h,t,"popup-blocked");try{h.focus()}catch(t){}return new Nf(h)}const Uf="__/auth/handler",Vf="emulator/auth/handler",jf=encodeURIComponent(
 10570 /**
 10571 * @license
 10572 * Copyright 2020 Google LLC
 10573 *
 10574 * Licensed under the Apache License, Version 2.0 (the "License");
 10575 * you may not use this file except in compliance with the License.
 10576 * You may obtain a copy of the License at
 10577 *
 10578 *   http://www.apache.org/licenses/LICENSE-2.0
 10579 *
 10580 * Unless required by applicable law or agreed to in writing, software
 10581 * distributed under the License is distributed on an "AS IS" BASIS,
 10582 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
10583 * See the License for the specific language governing permissions and
 10584 * limitations under the License.
 10585 */(t)}?${Rd(n).slice(1)}${c}`}const Wf="webStorageSupport";const qf=class{constructor(){this.eventManagers={},this.iframes={},this.originValidationPromises={},this._redirectPersistence=Wp,this._com
 10586 /**
 10587 * @license
 10588 * Copyright 2020 Google LLC
 10589 *
 10590 * Licensed under the Apache License, Version 2.0 (the "License");
 10591 * you may not use this file except in compliance with the License.
 10592 * You may obtain a copy of the License at
 10593 *
 10594 *   http://www.apache.org/licenses/LICENSE-2.0
 10595 *
 10596 * Unless required by applicable law or agreed to in writing, software
 10597 * distributed under the License is distributed on an "AS IS" BASIS,
 10598 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10599 * See the License for the specific language governing permissions and
 10600 * limitations under the License.
 10601 */
 10602 class Yf{constructor(t){this.auth=t,this.internalListeners=new Map}getUid(){var t;return this.assertAuthConfigured(),(null===(t=this.auth.currentUser)||void 0===t?void 0:t.uid)||null}async getToken(
 10603 /**
 10604 * @license
 10605 * Copyright 2020 Google LLC
 10606 *
 10607 * Licensed under the Apache License, Version 2.0 (the "License");
 10608 * you may not use this file except in compliance with the License.
 10609 * You may obtain a copy of the License at
 10610 *
 10611 *   http://www.apache.org/licenses/LICENSE-2.0
 10612 *
 10613 * Unless required by applicable law or agreed to in writing, software
 10614 * distributed under the License is distributed on an "AS IS" BASIS,
 10615 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10616 * See the License for the specific language governing permissions and
 10617 * limitations under the License.
 10618 */
 10619 /**
 10620 * @license
 10621 * Copyright 2021 Google LLC
 10622 *
 10623 * Licensed under the Apache License, Version 2.0 (the "License");
 10624 * you may not use this file except in compliance with the License.
 10625 * You may obtain a copy of the License at
 10626 *
 10627 *   http://www.apache.org/licenses/LICENSE-2.0
 10628 *
 10629 * Unless required by applicable law or agreed to in writing, software
 10630 * distributed under the License is distributed on an "AS IS" BASIS,
 10631 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10632 * See the License for the specific language governing permissions and
 10633 * limitations under the License.
 10634 */
 10635 const Xf=Ed("authIdTokenMaxAge")||300;let Jf=null;function Qf(t=function(t=Uh){const e=jh.get(t);if(!e&&t===Uh&&$d())return Zh();if(!e)throw Xh.create("no-app",{appName:t});return e}()){const e=Gh(t
 10636 /**
 10637 * @license
 10638 * Copyright 2020 Google LLC
 10639 *
 10640 * Licensed under the Apache License, Version 2.0 (the "License");
 10641 * you may not use this file except in compliance with the License.
 10642 * You may obtain a copy of the License at
 10643 *
 10644 *   http://www.apache.org/licenses/LICENSE-2.0
 10645 *
 10646 * Unless required by applicable law or agreed to in writing, software
 10647 * distributed under the License is distributed on an "AS IS" BASIS,
 10648 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 10649 * See the License for the specific language governing permissions and
 10650 * limitations under the License.
 10651 */
 10652 function(t,e){const i=Gh(t,"auth");if(i.isInitialized()){const t=i.getImmediate();if(zd(i.getOptions(),null!=e?e:{}))return t;yu(t,"already-initialized")}return i.initialize({options:e})}(t,{popupRe
 10653      <webstatus-gcharts-loader-service>
 10654        <webstatus-app-settings-service .appSettings="${this.settings}">
 10655          <webstatus-api-client-service .url="${this.settings.apiUrl}">
 10656            <webstatus-firebase-app-service
 10657              .settings="${this.settings.firebase.app}"
 10658            >
 10659              <webstatus-firebase-auth-service
 10660                .settings="${this.settings.firebase.auth}"
 10661              >
 10662                <webstatus-bookmarks-service>
 10663                  <slot></slot>
 10664                </webstatus-bookmarks-service>
 10665              </webstatus-firebase-auth-service>
 10666            </webstatus-firebase-app-service>
 10667          </webstatus-api-client-service>
 10668        </webstatus-app-settings-service>
 10669      </webstatus-gcharts-loader-service>
 10670    `}};lm([Mt({type:Object})],cm.prototype,"settings",void 0),cm=lm([Rt("webstatus-services-container")],cm);var dm=function(t,e,i,r){var s,o=arguments.length,a=o<3?e:null===r?r=Object.getOwnProper
 10671        body {
 10672          height: 100%;
 10673          position: relative;
 10674        }
 10675        /* We have to specify the vbox style of the :host manually,
 10676           because the vbox class is not available in index.html.
 10677           Consequently, we have to specify the vbox item style of
 10678           webstatus-services-container manually for the same reason. */
 10679        :host {
 10680          display: flex;
 10681          flex-direction: column;
 10682        }
 10683        webstatus-services-container {
 10684          flex-grow: 1;
 10685        }
 10686      `]}firstUpdated(){null!==this.pageElement&&(async t=>{const e=new No(t);return await e.setRoutes([{component:"webstatus-overview-page",path:"/"},{component:"webstatus-feature-page",path:"/feat
 10687      <webstatus-services-container class="vbox" .settings="${this.settings}">
 10688        <webstatus-header></webstatus-header>
 10689        <webstatus-page class="halign-stretch valign-stretch">
 10690          <slot></slot>
 10691        </webstatus-page>
 10692      </webstatus-services-container>
 10693    `}};dm([Vt("webstatus-page")],hm.prototype,"pageElement",void 0),dm([Ns({context:"router"})],hm.prototype,"router",void 0),dm([Mt({type:Object})],hm.prototype,"settings",void 0),hm=dm([Rt("webst
 10694